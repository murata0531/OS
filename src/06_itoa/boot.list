     1                                          BOOT_LOAD   equ     0x7c00          ;ブートプログラムのロード位置
     2                                          ORG     BOOT_LOAD                   ;ロードアドレスをアセンブラに指示
     3                                  
     4                                  ;**************************************************************************
     5                                  ;   マクロ
     6                                  ;**************************************************************************
     7                                  %include    "../include/macro.s"
     8                              <1> %macro cdecl 1-*.nolist
     9                              <1> 
    10                              <1>     %rep %0 - 1
    11                              <1>         push    %{-1:-1}
    12                              <1>         %rotate -1
    13                              <1>     %endrep
    14                              <1>     %rotate -1
    15                              <1> 
    16                              <1>         call    %1
    17                              <1> 
    18                              <1>     %if 1 < %0
    19                              <1>         add     sp,(__BITS__ >> 3) * (%0 - 1)
    20                              <1>     %endif
    21                              <1> 
    22                              <1> %endmacro
     8                                  
     9                                  ;**************************************************************************
    10                                  ;   エントリポイント
    11                                  ;**************************************************************************
    12                                  entry:
    13                                          ;-----------------------------------
    14                                          ;    BPB(BIOS Parameter Block)
    15                                          ;-----------------------------------
    16 00000000 EB58                            jmp     ipl                         ; IPLへジャンプ
    17 00000002 90<rep 58h>                     times   90 - ($ - $$)   db  0x90    ;
    18                                  
    19                                          ;-----------------------------------
    20                                          ;   IPL(Initial Program Loader)
    21                                          ;-----------------------------------
    22                                  
    23                                  ipl:
    24 0000005A FA                              cli                                 ;割り込み禁止
    25                                  
    26 0000005B B80000                          mov     ax,0x0000                   ;AX = 0x0000;
    27 0000005E 8ED8                            mov     ds,ax                       ;DS = 0x0000;
    28 00000060 8EC0                            mov     es,ax                       ;ES = 0x0000;
    29 00000062 8ED0                            mov     ss,ax                       ;SS = 0x0000;
    30 00000064 BC007C                          mov     sp,BOOT_LOAD                ;SP = 0x7c00;
    31                                  
    32 00000067 FB                              sti                                 ;割り込み許可;
    33                                  
    34 00000068 8816[4801]                      mov     [BOOT.DRIVE],dl             ;ブートドライブを保存
    35                                  
    36                                          ;-----------------------------------
    37                                          ;   文字列を表示
    38                                          ;-----------------------------------
    39 0000006C 68[3001]E8D80083C4-             cdecl   puts, .s0                   ; puts(.s0);
    39 00000074 02                 
    40                                  
    41                                          ;-----------------------------------
    42                                          ;   数値を表示
    43                                          ;-----------------------------------
    44 00000075 6A016A0A6A0868-                 cdecl   itoa, 8086, .s1, 8, 10, 0b0001      ;8086
    44 0000007C [3D01]68961FE8E500-
    44 00000084 83C40A             
    45 00000087 68[3D01]E8BD0083C4-             cdecl   puts, .s1
    45 0000008F 02                 
    46                                  
    47 00000090 6A036A0A6A0868-                 cdecl   itoa, 8086, .s1, 8, 10, 0b0011      ;+ 8086
    47 00000097 [3D01]68961FE8CA00-
    47 0000009F 83C40A             
    48 000000A2 68[3D01]E8A20083C4-             cdecl   puts, .s1
    48 000000AA 02                 
    49                                  
    50 000000AB 6A016A0A6A0868-                 cdecl   itoa, -8086, .s1, 8, 10, 0b0001     ;- 8086
    50 000000B2 [3D01]686AE0E8AF00-
    50 000000BA 83C40A             
    51 000000BD 68[3D01]E8870083C4-             cdecl   puts, .s1
    51 000000C5 02                 
    52                                  
    53 000000C6 6A016A0A6A0868-                 cdecl   itoa, -1, .s1, 8, 10, 0b0001        ;- 1
    53 000000CD [3D01]6AFFE8950083-
    53 000000D5 C40A               
    54 000000D7 68[3D01]E86D0083C4-             cdecl   puts, .s1
    54 000000DF 02                 
    55                                  
    56 000000E0 6A006A0A6A0868-                 cdecl   itoa, -1, .s1, 8, 10, 0b0000        ;65535
    56 000000E7 [3D01]6AFFE87B0083-
    56 000000EF C40A               
    57 000000F1 68[3D01]E8530083C4-             cdecl   puts, .s1
    57 000000F9 02                 
    58                                  
    59 000000FA 6A006A106A0868-                 cdecl   itoa, -1, .s1, 8, 16, 0b0000        ;FFFF
    59 00000101 [3D01]6AFFE8610083-
    59 00000109 C40A               
    60 0000010B 68[3D01]E8390083C4-             cdecl   puts, .s1
    60 00000113 02                 
    61                                  
    62 00000114 6A046A026A0868-                 cdecl   itoa, 12, .s1, 8, 2, 0b0100         ;00001100
    62 0000011B [3D01]6A0CE8470083-
    62 00000123 C40A               
    63 00000125 68[3D01]E81F0083C4-             cdecl   puts, .s1
    63 0000012D 02                 
    64                                  
    65                                          ;-------------------------------
    66                                          ;       処理の終了
    67                                          ;-------------------------------
    68 0000012E EBFE                            jmp     $                       ;無限ループ
    69                                  
    70                                          ;-------------------------------
    71                                          ;   データ
    72                                          ;-------------------------------
    73 00000130 426F6F74696E672E2E-     .s0     db      "Booting...", 0x0A, 0x0D, 0
    73 00000139 2E0A0D00           
    74 0000013D 2D2D2D2D2D2D2D2D0A-     .s1     db      "--------", 0x0A, 0x0D, 0
    74 00000146 0D00               
    75                                  
    76                                  ALIGN 2,db 0
    77                                  
    78                                  BOOT:                                   ;ブートドライブの情報
    79 00000148 0000                    .DRIVE:         dw 0                    ;ドライブ番号
    80                                  
    81                                  ;***************************************************************
    82                                  ;       モジュール
    83                                  ;***************************************************************
    84                                  %include        "../modules/real/puts.s"
    85                              <1> puts:
    86                              <1>         ;---------------------------------------
    87                              <1>         ;   【スタックフレームの構築】
    88                              <1>         ;---------------------------------------
    89                              <1>                                                 ;    + 4 | 文字列へのアドレス
    90 0000014A 55                  <1>         push    bp                              ;    + 2 | (戻り番地)
    91 0000014B 89E5                <1>         mov     bp,sp                           ; BP + 0 | BP(元の値)
    92                              <1> 
    93                              <1>         ;----------------------------------------
    94                              <1>         ;   【レジスタの保存】
    95                              <1>         ;----------------------------------------
    96 0000014D 50                  <1>         push    ax
    97 0000014E 53                  <1>         push    bx
    98 0000014F 56                  <1>         push    si
    99                              <1> 
   100                              <1>         ;----------------------------------------
   101                              <1>         ;   引数を取得
   102                              <1>         ;----------------------------------------
   103 00000150 8B7604              <1>         mov     si,[bp + 4]                     ; SI = 文字列へのアドレス
   104                              <1> 
   105                              <1>         ;----------------------------------------
   106                              <1>         ;   【処理の開始】
   107                              <1>         ;----------------------------------------
   108 00000153 B40E                <1>         mov     ah,0x0E                         ; テレタイプ式1文字出力
   109 00000155 BB0000              <1>         mov     bx,0x0000                       ; ページ番号と文字色を0に設定
   110 00000158 FC                  <1>         cld                                     ; DF = 0(アドレス加算)
   111                              <1> 
   112                              <1> .10L:                                           ; do
   113 00000159 AC                  <1>         lodsb                                   ;{
   114                              <1>                                                 ;   AL = *SI++;
   115 0000015A 3C00                <1>         cmp     al,0                            ;   if(0 == AL)
   116 0000015C 7404                <1>         je      .10E                            ;       break;
   117                              <1>                                                 ;
   118 0000015E CD10                <1>         int     0x10                            ;   Int10(0x0E,AL); 文字出力
   119 00000160 EBF7                <1>         jmp     .10L                            ;
   120                              <1> .10E:                                           ;}while(1)
   121                              <1> 
   122                              <1>     ;--------------------------------------------
   123                              <1>     ;   【レジスタの復帰】
   124                              <1>     ;--------------------------------------------
   125 00000162 5E                  <1>     pop     si
   126 00000163 5B                  <1>     pop     bx
   127 00000164 58                  <1>     pop     ax
   128                              <1> 
   129                              <1>     ;--------------------------------------------
   130                              <1>     ;   【スタックフレームの破棄】
   131                              <1>     ;--------------------------------------------
   132 00000165 89EC                <1>     mov     sp,bp
   133 00000167 5D                  <1>     pop     bp
   134                              <1> 
   135 00000168 C3                  <1>     ret
    85                                  %include        "../modules/real/itoa.s"
    86                              <1> itoa:
    87                              <1>         ;--------------------------------------------
    88                              <1>         ;   【スタックフレームの構築】
    89                              <1>         ;--------------------------------------------
    90                              <1>                                                     ;    +12 | フラグ
    91                              <1>                                                     ;    +10 | 基数
    92                              <1>                                                     ;    +8  | バッファサイズ
    93                              <1>                                                     ;    +6  | バッファアドレス
    94                              <1>                                                     ;    +2  | IP(戻り番地)
    95 00000169 55                  <1>         push    bp                                  ; BP +0  | BP(元の値)
    96 0000016A 89E5                <1>         mov     bp,sp                               ;--------+----------------
    97                              <1> 
    98                              <1>         ;--------------------------------------------
    99                              <1>         ;   【レジスタの保存】
   100                              <1>         ;--------------------------------------------
   101 0000016C 50                  <1>         push    ax
   102 0000016D 53                  <1>         push    bx
   103 0000016E 51                  <1>         push    cx
   104 0000016F 52                  <1>         push    dx
   105 00000170 56                  <1>         push    si
   106 00000171 57                  <1>         push    di
   107                              <1> 
   108                              <1>         ;-------------------------------------------
   109                              <1>         ;   引数を取得
   110                              <1>         ;-------------------------------------------
   111 00000172 8B4604              <1>         mov     ax,[bp + 4]                        ; val = 数値
   112 00000175 8B7606              <1>         mov     si,[bp + 6]                        ; dst = バッファアドレス
   113 00000178 8B4E08              <1>         mov     cx,[bp + 8]                        ; siza = 残りバッファサイズ
   114                              <1> 
   115 0000017B 89F7                <1>         mov     di,si                              ; バッファの最後尾↓
   116 0000017D 01CF                <1>         add     di,cx                              ; dst = &dst[size - 1]
   117 0000017F 4F                  <1>         dec     di
   118                              <1>         
   119 00000180 8B5E0C              <1>         mov     bx,word[bp + 12]                   ; flags = オプション
   120                              <1> 
   121                              <1>         ;-------------------------------------------
   122                              <1>         ;   符号付き判定
   123                              <1>         ;-------------------------------------------
   124 00000183 F7C30100            <1>         test    bx,0b0001                          ; if(flags & 0x01)
   125 00000187 7408                <1> .10Q:   je      .10E                               ; {
   126 00000189 83F800              <1>         cmp     ax,0                               ;    if(val < 0)
   127 0000018C 7D03                <1> .12Q:   jge     .12E                               ;    {
   128 0000018E 83CB02              <1>         or      bx,0b0010                          ;        flags |= 2 //符号表示
   129                              <1> .12E:                                              ;    }
   130                              <1> .10E:                                              ; }
   131                              <1> 
   132                              <1>         ;-------------------------------------------
   133                              <1>         ;   符号出力判定
   134                              <1>         ;-------------------------------------------
   135 00000191 F7C30200            <1>         test    bx,0b0010                          ; if(flags & 0x02) 
   136 00000195 7410                <1> .20Q:   je      .20E                               ; {
   137 00000197 83F800              <1>         cmp     ax,0                               ;    if(val < 0)
   138 0000019A 7D07                <1> .22Q:   jge     .22F                               ;    {
   139 0000019C F7D8                <1>         neg     ax                                 ;        val *= -1 //符号反転
   140 0000019E C6042D              <1>         mov     [si],byte '-'                      ;        *dst = '-' //符号表示
   141 000001A1 EB03                <1>         jmp     .22E                               ;    }
   142                              <1> .22F:                                              ;    else
   143                              <1>                                                    ;    {
   144 000001A3 C6042B              <1>         mov     [si],byte '+'                      ;        *dst = '+' //符号表示
   145                              <1> .22E:                                              ;    }
   146 000001A6 49                  <1>         dec     cx                                 ;    size-- //残りバッファサイズの減算
   147                              <1> .20E:                                              ; }
   148                              <1> 
   149                              <1>         ;------------------------------------------
   150                              <1>         ;   ASCII変換                              
   151                              <1>         ;------------------------------------------
   152 000001A7 8B5E0A              <1>         mov     bx,[bp + 10]                       ; BX = 基数
   153                              <1> 
   154                              <1> .30L:                                              ; do
   155                              <1>                                                    ; {
   156 000001AA BA0000              <1>         mov     dx,0                               ;    DX = DX:AX % 基数
   157 000001AD F7F3                <1>         div     bx                                 ;    AX = DX:AX / 基数
   158                              <1> 
   159 000001AF 89D6                <1>         mov     si,dx                              ;    //テーブル参照
   160 000001B1 8A94[D901]          <1>         mov     dl,byte [.ascii + si]              ;    DL = ASCII[DX]
   161                              <1> 
   162 000001B5 8815                <1>         mov     [di],dl                            ;    *dst = DL
   163 000001B7 4F                  <1>         dec     di                                 ;    dst--
   164                              <1> 
   165 000001B8 83F800              <1>         cmp     ax,0                               
   166 000001BB E0ED                <1>         loopnz  .30L                               ; }while(AX);
   167                              <1> .30E:
   168                              <1> 
   169                              <1>         ;------------------------------------------
   170                              <1>         ;   空欄を埋める
   171                              <1>         ;------------------------------------------
   172 000001BD 83F900              <1>         cmp     cx,0                               ; if(size != 0)
   173 000001C0 740D                <1> .40Q:   je      .40E                               ; {
   174 000001C2 B020                <1>         mov     al,' '                             ;    AL = ' ' //空白で埋める
   175 000001C4 837E0C04            <1>         cmp     [bp + 12],word 0b0100              ;    if(flags & 0x04)
   176 000001C8 7502                <1> .42Q:   jne     .42E                               ;    {
   177 000001CA B030                <1>         mov     al,'0'                             ;        AL = '0' //0で埋める
   178                              <1> .42E:                                              ;    }
   179 000001CC FD                  <1>         std                                        ;    //DF = 1 (-方向)
   180 000001CD F3AA                <1>         rep     stosb                              ;    while(--CX) *DI-- = '';
   181                              <1> .40E:                                              ; }
   182                              <1> 
   183                              <1>         ;------------------------------------------
   184                              <1>         ;   【レジスタの復帰】
   185                              <1>         ;------------------------------------------
   186 000001CF 5F                  <1>         pop     di
   187 000001D0 5E                  <1>         pop     si
   188 000001D1 5A                  <1>         pop     dx
   189 000001D2 59                  <1>         pop     cx
   190 000001D3 5B                  <1>         pop     bx
   191 000001D4 58                  <1>         pop     ax
   192                              <1> 
   193                              <1>         ;------------------------------------------
   194                              <1>         ;   【スタックフレームの破棄】
   195                              <1>         ;------------------------------------------
   196 000001D5 89EC                <1>         mov     sp,bp
   197 000001D7 5D                  <1>         pop     bp
   198                              <1> 
   199 000001D8 C3                  <1>         ret
   200                              <1> 
   201 000001D9 303132333435363738- <1> .ascii  db      "0123456789ABCDEF"                 ; 変換テーブル
   201 000001E2 39414243444546      <1>
    86                                  
    87                                  ;***************************************************************
    88                                  ;       ブートフラグ
    89                                  ;***************************************************************
    90 000001E9 00<rep 15h>                     times   510 - ($ - $$) db 0x00
    91 000001FE 55AA                            db 0x55,0xAA
