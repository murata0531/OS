     1                                  ;************************************************************************
     2                                  ;
     3                                  ;	カーネル部
     4                                  ;
     5                                  ;************************************************************************
     6                                  
     7                                  ;************************************************************************
     8                                  ;	マクロ
     9                                  ;************************************************************************
    10                                  %include	"../include/define.s"
    11                              <1> ;************************************************************************
    12                              <1> ;	メモリイメージ
    13                              <1> ;************************************************************************
    14                              <1> 
    15                              <1> 		;---------------------------------------
    16                              <1> 		;           |            | 
    17                              <1> 		;           |____________| 
    18                              <1> 		; 0000_7A00 |            | ( 512) スタック
    19                              <1> 		;           |____________| 
    20                              <1> 		; 0000_7C00 |            | (  8K) ブート
    21                              <1> 		;           =            = 
    22                              <1> 		;           |____________| 
    23                              <1> 		; 0000_9C00 |            | (  8K) カーネル（一時展開）
    24                              <1> 		;           =            = 
    25                              <1> 		;           |____________| 
    26                              <1> 		; 0000_BC00 |////////////| 
    27                              <1> 		;           =            = 
    28                              <1> 		;           |____________| 
    29                              <1> 		; 0010_0000 |       (2K) | 割り込みディスクリプタテーブル
    30                              <1> 		;           |____________| 
    31                              <1> 		; 0010_0800 |       (2K) | カーネルスタック
    32                              <1> 		;           |____________| 
    33                              <1> 		; 0010_1000 |       (8K) | カーネルプログラム
    34                              <1> 		;           |            | 
    35                              <1> 		;           =            = 
    36                              <1> 		;           |____________| 
    37                              <1> 		; 0010_3000 |       (8K) | タスク用スタック
    38                              <1> 		;           |            | （各タスク1K）
    39                              <1> 		;           =            = 
    40                              <1> 		;           |____________| 
    41                              <1> 		; 0010_5000 |            | Dir
    42                              <1> 		;      6000 |____________| Page
    43                              <1> 		; 0010_7000 |            | Dir
    44                              <1> 		;      8000 |____________| Page
    45                              <1> 		; 0010_9000 |////////////| 
    46                              <1> 		;           |            | 
    47                              <1> 
    48                              <1> 
    49                              <1>         BOOT_SIZE			equ		(1024 * 8)		; ブートサイズ
    50                              <1> 		KERNEL_SIZE			equ		(1024 * 8)		; カーネルサイズ
    51                              <1> 
    52                              <1> 		BOOT_LOAD			equ		0x7C00			; ブートプログラムのロード位置
    53                              <1> 		BOOT_END			equ		(BOOT_LOAD + BOOT_SIZE)
    54                              <1> 
    55                              <1> 		KERNEL_LOAD			equ		0x0010_1000
    56                              <1> 
    57                              <1> 		SECT_SIZE			equ		(512)			; セクタサイズ
    58                              <1> 
    59                              <1> 		BOOT_SECT			equ		(BOOT_SIZE   / SECT_SIZE)	; ブートプログラムのセクタ数
    60                              <1> 		KERNEL_SECT			equ		(KERNEL_SIZE / SECT_SIZE)	; カーネルのセクタ数
    61                              <1> 
    62                              <1> 		E820_RECORD_SIZE	equ		20
    63                              <1> 
    64                              <1> 		VECT_BASE			equ		0x0010_0000		;	0010_0000:0010_07FF
    11                                  %include	"../include/macro.s"
    12                              <1> ;************************************************************************
    13                              <1> ; 関数呼び出し用マクロ
    14                              <1> ;
    15                              <1> ; 使い方：
    16                              <1> ;	cdecl	func [, param1[, param2[, ...]]]
    17                              <1> ;
    18                              <1> ;************************************************************************
    19                              <1> 
    20                              <1> %macro cdecl 1-*.nolist
    21                              <1> 
    22                              <1>     %rep %0 - 1
    23                              <1>         push    %{-1:-1}
    24                              <1>         %rotate -1
    25                              <1>     %endrep
    26                              <1>     %rotate -1
    27                              <1> 
    28                              <1>         call    %1
    29                              <1> 
    30                              <1>     %if 1 < %0
    31                              <1>         add     sp,(__BITS__ >> 3) * (%0 - 1)
    32                              <1>     %endif
    33                              <1> 
    34                              <1> %endmacro
    35                              <1> 
    36                              <1> ;************************************************************************
    37                              <1> ;	構造体
    38                              <1> ;************************************************************************
    39                              <1> 
    40                              <1> ;-----------------------------------------------
    41                              <1> ;	ドライブパラメータ
    42                              <1> ;-----------------------------------------------
    43                              <1> struc drive
    44 00000000 ????                <1> 		.no				resw	1				; ドライブ番号
    45 00000002 ????                <1> 		.cyln			resw	1				; C:シリンダ
    46 00000004 ????                <1> 		.head			resw	1				; H:ヘッド
    47 00000006 ????                <1> 		.sect			resw	1				; S:セクタ
    48                              <1> endstruc
    12                                  
    13                                  		ORG		KERNEL_LOAD						; カーネルのロードアドレス
    14                                  
    15                                  [BITS 32]
    16                                  ;************************************************************************
    17                                  ;	エントリポイント
    18                                  ;************************************************************************
    19                                  kernel:
    20                                  		;---------------------------------------
    21                                  		; フォントアドレスを取得
    22                                  		;---------------------------------------
    23 00000000 BE007E0000              		mov		esi, BOOT_LOAD + SECT_SIZE		; ESI   = 0x7C00 + 512
    24 00000005 0FB706                  		movzx	eax, word [esi + 0]				; EAX   = [ESI + 0] // セグメント
    25 00000008 0FB75E02                		movzx	ebx, word [esi + 2]				; EBX   = [ESI + 2] // オフセット
    26 0000000C C1E004                  		shl		eax, 4							; EAX <<= 4;
    27 0000000F 01D8                    		add		eax, ebx						; EAX  += EBX;
    28 00000011 A3[D8000000]            		mov		[FONT_ADR], eax					; FONT_ADR[0] = EAX;
    29                                  
    30                                  		;---------------------------------------
    31                                  		; 8ビットの横線
    32                                  		;---------------------------------------
    33 00000016 B407                    		mov		ah, 0x07						; AH = 書き込みプレーンを指定(Bit:----IRGB)
    34 00000018 B002                    		mov		al, 0x02						; AL = マップマスクレジスタ（書き込みプレーンを指定）
    35 0000001A 66BAC403                		mov		dx, 0x03C4						; DX = シーケンサ制御ポート
    36 0000001E 66EF                    		out		dx, ax							; // ポート出力
    37                                  
    38 00000020 C60500000A00FF          		mov		[0x000A_0000 + 0], byte 0xFF
    39                                  
    40 00000027 B404                    		mov		ah, 0x04						; AH = 書き込みプレーンを指定(Bit:----IRGB)
    41 00000029 66EF                    		out		dx, ax							; // ポート出力
    42                                  
    43 0000002B C60501000A00FF          		mov		[0x000A_0000 + 1], byte 0xFF    ; // 8ドットの横線
    44                                  
    45 00000032 B402                    		mov		ah, 0x02						; AH = 書き込みプレーンを指定(Bit:----IRGB)
    46 00000034 66EF                    		out		dx, ax							; // ポート出力
    47                                  
    48 00000036 C60502000A00FF          		mov		[0x000A_0000 + 2], byte 0xFF    ; // 8ドットの横線
    49                                  
    50 0000003D B401                    		mov		ah, 0x01						; AH = 書き込みプレーンを指定(Bit:----IRGB)
    51 0000003F 66EF                    		out		dx, ax							; // ポート出力
    52                                  
    53 00000041 C60503000A00FF          		mov		[0x000A_0000 + 3], byte 0xFF    ; // 8ドットの横線
    54                                  
    55                                  		;---------------------------------------
    56                                  		; 画面を横切る横線
    57                                  		;---------------------------------------
    58 00000048 B402                    		mov		ah, 0x02						; AH = 書き込みプレーンを指定(Bit:----IRGB)
    59 0000004A 66EF                    		out		dx, ax							; // ポート出力
    60                                  
    61 0000004C 8D3D50000A00            		lea		edi, [0x000A_0000 + 80]			; EDI = VRAMアドレス;
    62 00000052 B950000000              		mov		ecx, 80							; ECX = 繰り返し回数;
    63 00000057 B0FF                    		mov		al, 0xFF						; AL  = ビットパターン;
    64 00000059 F3AA                    		rep stosb								; *EDI++ = AL;
    65                                  
    66                                  		;---------------------------------------
    67                                  		; 2行目に8ドットの矩形
    68                                  		;---------------------------------------
    69 0000005B BF01000000              		mov		edi, 1							; EDI  = 行数;
    70                                  
    71 00000060 C1E708                  		shl		edi, 8							; EDI *= 256;
    72 00000063 8DBCBF00000A00          		lea		edi, [edi * 4 + edi + 0xA_0000]	; EDI  = VRAMアドレス;
    73                                  
    74 0000006A 66C707FF00              		mov		[edi + (80 * 0)], word 0xFF
    75 0000006F 66C74750FF00            		mov		[edi + (80 * 1)], word 0xFF
    76 00000075 66C787A0000000FF00      		mov		[edi + (80 * 2)], word 0xFF
    77 0000007E 66C787F0000000FF00      		mov		[edi + (80 * 3)], word 0xFF
    78 00000087 66C78740010000FF00      		mov		[edi + (80 * 4)], word 0xFF
    79 00000090 66C78790010000FF00      		mov		[edi + (80 * 5)], word 0xFF
    80 00000099 66C787E0010000FF00      		mov		[edi + (80 * 6)], word 0xFF
    81 000000A2 66C78730020000FF00      		mov		[edi + (80 * 7)], word 0xFF
    82                                  
    83                                  		;---------------------------------------
    84                                  		; 3行目に文字を描画
    85                                  		;---------------------------------------
    86 000000AB BE41000000              		mov		esi, 'A'						; ESI  = 文字コード;
    87 000000B0 C1E604                  		shl		esi, 4							; ESI *= 16;
    88 000000B3 0335[D8000000]          		add		esi, [FONT_ADR]					; ESI  = FONT_ADR[文字コード];
    89                                  
    90 000000B9 BF02000000              		mov		edi, 2							; EDI  = 行数;
    91 000000BE C1E708                  		shl		edi, 8							; EDI *= 256;
    92 000000C1 8DBCBF00000A00          		lea		edi, [edi * 4 + edi + 0xA_0000]	; EDI  = VRAMアドレス;
    93                                  
    94 000000C8 B910000000              		mov		ecx, 16							; ECX  = 16;
    95                                  .10L:											; do
    96                                  												; {
    97 000000CD A4                      		movsb									;   *EDI++ = *ESI++;
    98 000000CE 83C74F                  		add		edi, 80 - 1						;   EDI += 79; // 1ドット分
    99 000000D1 E2FA                    		loop	.10L							; }while (--ECX);
   100                                  
   101                                  		;---------------------------------------
   102                                  		; 処理の終了
   103                                  		;---------------------------------------
   104 000000D3 EBFE                    		jmp		$								; while (1) ; // 無限ループ
   105                                  
   106 000000D5 00<rep 3h>              ALIGN 4, db 0
   107 000000D8 00000000                FONT_ADR:	dd	0
   108                                  
   109                                  ;************************************************************************
   110                                  ;	パディング
   111                                  ;************************************************************************
   112 000000DC 00<rep 1F24h>           		times KERNEL_SIZE - ($ - $$) db 0x00	; パディング
   113                                  
