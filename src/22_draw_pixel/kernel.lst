     1                                  ;************************************************************************
     2                                  ;
     3                                  ;	カーネル部
     4                                  ;
     5                                  ;************************************************************************
     6                                  
     7                                  ;************************************************************************
     8                                  ;	マクロ
     9                                  ;************************************************************************
    10                                  %include	"../include/define.s"
    11                              <1> ;************************************************************************
    12                              <1> ;	メモリイメージ
    13                              <1> ;************************************************************************
    14                              <1> 
    15                              <1> 		;---------------------------------------
    16                              <1> 		;           |            | 
    17                              <1> 		;           |____________| 
    18                              <1> 		; 0000_7A00 |            | ( 512) スタック
    19                              <1> 		;           |____________| 
    20                              <1> 		; 0000_7C00 |            | (  8K) ブート
    21                              <1> 		;           =            = 
    22                              <1> 		;           |____________| 
    23                              <1> 		; 0000_9C00 |            | (  8K) カーネル（一時展開）
    24                              <1> 		;           =            = 
    25                              <1> 		;           |____________| 
    26                              <1> 		; 0000_BC00 |////////////| 
    27                              <1> 		;           =            = 
    28                              <1> 		;           |____________| 
    29                              <1> 		; 0010_0000 |       (2K) | 割り込みディスクリプタテーブル
    30                              <1> 		;           |____________| 
    31                              <1> 		; 0010_0800 |       (2K) | カーネルスタック
    32                              <1> 		;           |____________| 
    33                              <1> 		; 0010_1000 |       (8K) | カーネルプログラム
    34                              <1> 		;           |            | 
    35                              <1> 		;           =            = 
    36                              <1> 		;           |____________| 
    37                              <1> 		; 0010_3000 |       (8K) | タスク用スタック
    38                              <1> 		;           |            | （各タスク1K）
    39                              <1> 		;           =            = 
    40                              <1> 		;           |____________| 
    41                              <1> 		; 0010_5000 |            | Dir
    42                              <1> 		;      6000 |____________| Page
    43                              <1> 		; 0010_7000 |            | Dir
    44                              <1> 		;      8000 |____________| Page
    45                              <1> 		; 0010_9000 |////////////| 
    46                              <1> 		;           |            | 
    47                              <1> 
    48                              <1> 
    49                              <1>         BOOT_SIZE			equ		(1024 * 8)		; ブートサイズ
    50                              <1> 		KERNEL_SIZE			equ		(1024 * 8)		; カーネルサイズ
    51                              <1> 
    52                              <1> 		BOOT_LOAD			equ		0x7C00			; ブートプログラムのロード位置
    53                              <1> 		BOOT_END			equ		(BOOT_LOAD + BOOT_SIZE)
    54                              <1> 
    55                              <1> 		KERNEL_LOAD			equ		0x0010_1000
    56                              <1> 
    57                              <1> 		SECT_SIZE			equ		(512)			; セクタサイズ
    58                              <1> 
    59                              <1> 		BOOT_SECT			equ		(BOOT_SIZE   / SECT_SIZE)	; ブートプログラムのセクタ数
    60                              <1> 		KERNEL_SECT			equ		(KERNEL_SIZE / SECT_SIZE)	; カーネルのセクタ数
    61                              <1> 
    62                              <1> 		E820_RECORD_SIZE	equ		20
    63                              <1> 
    64                              <1> 		VECT_BASE			equ		0x0010_0000		;	0010_0000:0010_07FF
    11                                  %include	"../include/macro.s"
    12                              <1> ;************************************************************************
    13                              <1> ; 関数呼び出し用マクロ
    14                              <1> ;
    15                              <1> ; 使い方：
    16                              <1> ;	cdecl	func [, param1[, param2[, ...]]]
    17                              <1> ;
    18                              <1> ;************************************************************************
    19                              <1> 
    20                              <1> %macro cdecl 1-*.nolist
    21                              <1> 
    22                              <1>     %rep %0 - 1
    23                              <1>         push    %{-1:-1}
    24                              <1>         %rotate -1
    25                              <1>     %endrep
    26                              <1>     %rotate -1
    27                              <1> 
    28                              <1>         call    %1
    29                              <1> 
    30                              <1>     %if 1 < %0
    31                              <1>         add     sp,(__BITS__ >> 3) * (%0 - 1)
    32                              <1>     %endif
    33                              <1> 
    34                              <1> %endmacro
    35                              <1> 
    36                              <1> ;************************************************************************
    37                              <1> ;	構造体
    38                              <1> ;************************************************************************
    39                              <1> 
    40                              <1> ;-----------------------------------------------
    41                              <1> ;	ドライブパラメータ
    42                              <1> ;-----------------------------------------------
    43                              <1> struc drive
    44 00000000 ????                <1> 		.no				resw	1				; ドライブ番号
    45 00000002 ????                <1> 		.cyln			resw	1				; C:シリンダ
    46 00000004 ????                <1> 		.head			resw	1				; H:ヘッド
    47 00000006 ????                <1> 		.sect			resw	1				; S:セクタ
    48                              <1> endstruc
    12                                  
    13                                  		ORG		KERNEL_LOAD						; カーネルのロードアドレス
    14                                  
    15                                  [BITS 32]
    16                                  ;************************************************************************
    17                                  ;	エントリポイント
    18                                  ;************************************************************************
    19                                  kernel:
    20                                  		;---------------------------------------
    21                                  		; フォントアドレスを取得
    22                                  		;---------------------------------------
    23 00000000 BE007E0000              		mov		esi, BOOT_LOAD + SECT_SIZE		; ESI   = 0x7C00 + 512
    24 00000005 0FB706                  		movzx	eax, word [esi + 0]				; EAX   = [ESI + 0] // セグメント
    25 00000008 0FB75E02                		movzx	ebx, word [esi + 2]				; EBX   = [ESI + 2] // オフセット
    26 0000000C C1E004                  		shl		eax, 4							; EAX <<= 4;
    27 0000000F 01D8                    		add		eax, ebx						; EAX  += EBX;
    28 00000011 A3[4C010000]            		mov		[FONT_ADR], eax					; FONT_ADR[0] = EAX;
    29                                  
    30                                  		;---------------------------------------
    31                                  		; フォントの一覧表示
    32                                  		;---------------------------------------
    33 00000016 6A0D6A3FE8A8020000-     		cdecl	draw_font, 63, 13				; // フォントの一覧表示
    33 0000001F 6683C408           
    34 00000023 6A046A3FE829030000-     		cdecl	draw_color_bar, 63, 4			; // カラーバーの表示
    34 0000002C 6683C408           
    35                                  
    36                                  		;---------------------------------------
    37                                  		; 文字列の表示
    38                                  		;---------------------------------------
    39 00000030 68[39010000]680F01-     		cdecl	draw_str, 25, 14, 0x010F, .s0	; draw_str();
    39 00000038 00006A0E6A19E8C902-
    39 00000041 00006683C410       
    40                                  
    41                                  		;---------------------------------------
    42                                  		; ピクセルを出力
    43                                  		;---------------------------------------
    44 00000047 6A016A046A08E87D03-     		cdecl	draw_pixel,  8, 4, 0x01
    44 00000050 00006683C40C       
    45 00000056 6A016A056A09E86E03-     		cdecl	draw_pixel,  9, 5, 0x01
    45 0000005F 00006683C40C       
    46 00000065 6A026A066A0AE85F03-     		cdecl	draw_pixel, 10, 6, 0x02
    46 0000006E 00006683C40C       
    47 00000074 6A026A076A0BE85003-     		cdecl	draw_pixel, 11, 7, 0x02
    47 0000007D 00006683C40C       
    48 00000083 6A036A086A0CE84103-     		cdecl	draw_pixel, 12, 8, 0x03
    48 0000008C 00006683C40C       
    49 00000092 6A036A096A0DE83203-     		cdecl	draw_pixel, 13, 9, 0x03
    49 0000009B 00006683C40C       
    50 000000A1 6A046A0A6A0EE82303-     		cdecl	draw_pixel, 14,10, 0x04
    50 000000AA 00006683C40C       
    51 000000B0 6A046A0B6A0FE81403-     		cdecl	draw_pixel, 15,11, 0x04
    51 000000B9 00006683C40C       
    52                                  
    53 000000BF 6A036A046A0FE80503-     		cdecl	draw_pixel, 15, 4, 0x03
    53 000000C8 00006683C40C       
    54 000000CE 6A036A056A0EE8F602-     		cdecl	draw_pixel, 14, 5, 0x03
    54 000000D7 00006683C40C       
    55 000000DD 6A046A066A0DE8E702-     		cdecl	draw_pixel, 13, 6, 0x04
    55 000000E6 00006683C40C       
    56 000000EC 6A046A076A0CE8D802-     		cdecl	draw_pixel, 12, 7, 0x04
    56 000000F5 00006683C40C       
    57 000000FB 6A016A086A0BE8C902-     		cdecl	draw_pixel, 11, 8, 0x01
    57 00000104 00006683C40C       
    58 0000010A 6A016A096A0AE8BA02-     		cdecl	draw_pixel, 10, 9, 0x01
    58 00000113 00006683C40C       
    59 00000119 6A026A0A6A09E8AB02-     		cdecl	draw_pixel,  9,10, 0x02
    59 00000122 00006683C40C       
    60 00000128 6A026A0B6A08E89C02-     		cdecl	draw_pixel,  8,11, 0x02
    60 00000131 00006683C40C       
    61                                  
    62                                  		;---------------------------------------
    63                                  		; 処理の終了
    64                                  		;---------------------------------------
    65 00000137 EBFE                    		jmp		$								; while (1) ; // 無限ループ
    66                                  
    67 00000139 2048656C6C6F2C206B-     .s0:	db	" Hello, kernel! ", 0
    67 00000142 65726E656C212000   
    68                                  
    69 0000014A 00<rep 2h>              ALIGN 4, db 0
    70 0000014C 00000000                FONT_ADR:	dd	0
    71                                  
    72                                  ;************************************************************************
    73                                  ;	モジュール
    74                                  ;************************************************************************
    75                                  %include	"../modules/protect/vga.s"
    76                              <1> ;************************************************************************
    77                              <1> ;	読み込みプレーンの選択
    78                              <1> ;========================================================================
    79                              <1> ;■書式		: void vga_set_read_plane(plane);
    80                              <1> ;
    81                              <1> ;■引数
    82                              <1> ;	plane	: 読み込みプレーン
    83                              <1> ;
    84                              <1> ;■戻り値	: 無し
    85                              <1> ;************************************************************************
    86                              <1> vga_set_read_plane:
    87                              <1> 		;---------------------------------------
    88                              <1> 		; 【スタックフレームの構築】
    89                              <1> 		;---------------------------------------
    90                              <1> 												; EBP+ 8| プレーン（インデックス）
    91                              <1> 												; ------+----------------
    92 00000150 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
    93 00000151 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
    94                              <1> 												; ------+----------------
    95                              <1> 
    96                              <1> 		;---------------------------------------
    97                              <1> 		; 【レジスタの保存】
    98                              <1> 		;---------------------------------------
    99 00000153 50                  <1> 		push	eax
   100 00000154 52                  <1> 		push	edx
   101                              <1> 
   102                              <1> 		;---------------------------------------
   103                              <1> 		; 読み込みプレーンの選択
   104                              <1> 		;---------------------------------------
   105 00000155 8A6508              <1> 		mov		ah, [ebp + 8]					; AH  = プレーンを選択（3=輝度, 2～0=RGB）
   106 00000158 80E403              <1> 		and		ah, 0x03						; AH &= 0x03; // 余計なビットをマスク
   107 0000015B B004                <1> 		mov		al, 0x04						; AL  = 読み込みプレーン選択レジスタ
   108 0000015D 66BACE03            <1> 		mov		dx, 0x03CE						; DX  = グラフィックス制御ポート
   109 00000161 66EF                <1> 		out		dx, ax							; // ポート出力
   110                              <1> 
   111                              <1> 		;---------------------------------------
   112                              <1> 		; 【レジスタの復帰】
   113                              <1> 		;---------------------------------------
   114 00000163 5A                  <1> 		pop		edx
   115 00000164 58                  <1> 		pop		eax
   116                              <1> 
   117                              <1> 		;---------------------------------------
   118                              <1> 		; 【スタックフレームの破棄】
   119                              <1> 		;---------------------------------------
   120 00000165 89EC                <1> 		mov		esp, ebp
   121 00000167 5D                  <1> 		pop		ebp
   122                              <1> 
   123 00000168 C3                  <1> 		ret
   124                              <1> 
   125                              <1> 
   126                              <1> ;************************************************************************
   127                              <1> ;	書き込みプレーンを選択
   128                              <1> ;========================================================================
   129                              <1> ;■書式		: void vga_set_write_plane(plane);
   130                              <1> ;
   131                              <1> ;■引数
   132                              <1> ;	plane	: 書き込みプレーン
   133                              <1> ;
   134                              <1> ;■戻り値	: 無し
   135                              <1> ;************************************************************************
   136                              <1> vga_set_write_plane:
   137                              <1> 		;---------------------------------------
   138                              <1> 		; 【スタックフレームの構築】
   139                              <1> 		;---------------------------------------
   140                              <1> 												; EBP+ 8| プレーン（ビット指定）
   141                              <1> 												; ------+----------------
   142 00000169 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
   143 0000016A 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
   144                              <1> 												; ------+----------------
   145                              <1> 
   146                              <1> 		;---------------------------------------
   147                              <1> 		; 【レジスタの保存】
   148                              <1> 		;---------------------------------------
   149 0000016C 50                  <1> 		push	eax
   150 0000016D 52                  <1> 		push	edx
   151                              <1> 
   152                              <1> 		;---------------------------------------
   153                              <1> 		; 書き込みプレーンの選択
   154                              <1> 		;---------------------------------------
   155 0000016E 8A6508              <1> 		mov		ah, [ebp + 8]					; AH = 書き込みプレーンを指定(Bit:----IRGB)
   156 00000171 80E40F              <1> 		and		ah, 0x0F						; AH = 0x0F; // 余計なビットをマスク
   157 00000174 B002                <1> 		mov		al, 0x02						; AL = 書き込みプレーン選択
   158 00000176 66BAC403            <1> 		mov		dx, 0x03C4						; DX = シーケンサ制御ポート
   159 0000017A 66EF                <1> 		out		dx, ax							; // ポート出力
   160                              <1> 
   161                              <1> 		;---------------------------------------
   162                              <1> 		; 【レジスタの復帰】
   163                              <1> 		;---------------------------------------
   164 0000017C 5A                  <1> 		pop		edx
   165 0000017D 58                  <1> 		pop		eax
   166                              <1> 
   167                              <1> 		;---------------------------------------
   168                              <1> 		; 【スタックフレームの破棄】
   169                              <1> 		;---------------------------------------
   170 0000017E 89EC                <1> 		mov		esp, ebp
   171 00000180 5D                  <1> 		pop		ebp
   172                              <1> 
   173 00000181 C3                  <1> 		ret
   174                              <1> 
   175                              <1> 
   176                              <1> ;************************************************************************
   177                              <1> ;	フォントの書き込み
   178                              <1> ;========================================================================
   179                              <1> ;■書式		: void vram_font_copy(font, vram, plane, color);
   180                              <1> ;
   181                              <1> ;■引数
   182                              <1> ;	font	: FONTアドレス
   183                              <1> ;	vram	: VRAMアドレス
   184                              <1> ;	plane	: 出力プレーン（１つのプレーンのみをビットで指定）
   185                              <1> ;	color	: 描画色
   186                              <1> ;
   187                              <1> ;■戻り値	: 無し
   188                              <1> ;************************************************************************
   189                              <1> vram_font_copy:
   190                              <1> 		;---------------------------------------
   191                              <1> 		; 【スタックフレームの構築】
   192                              <1> 		;---------------------------------------
   193                              <1> 												; EBP+20| 色（背景/前景色）
   194                              <1> 												; EBP+16| プレーン（ビット指定）
   195                              <1> 												; EBP+12| VRAMアドレス
   196                              <1> 												; EBP+ 8| FONTアドレス
   197                              <1> 												; ------+----------------
   198 00000182 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
   199 00000183 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
   200                              <1> 												; ------+----------------
   201                              <1> 
   202                              <1> 		;---------------------------------------
   203                              <1> 		; 【レジスタの保存】
   204                              <1> 		;---------------------------------------
   205 00000185 50                  <1> 		push	eax
   206 00000186 53                  <1> 		push	ebx
   207 00000187 51                  <1> 		push	ecx
   208 00000188 52                  <1> 		push	edx
   209 00000189 56                  <1> 		push	esi
   210 0000018A 57                  <1> 		push	edi
   211                              <1> 
   212                              <1> 		;---------------------------------------
   213                              <1> 		; 【処理の開始】
   214                              <1> 		;---------------------------------------
   215 0000018B 8B7508              <1> 		mov		esi, [ebp + 8]					; ESI = フォントアドレス;
   216 0000018E 8B7D0C              <1> 		mov		edi, [ebp +12]					; EDI = VRAMアドレス;
   217 00000191 0FB64510            <1> 		movzx	eax, byte [ebp +16]				; EAX = プレーン（ビット指定）;
   218 00000195 0FB75D14            <1> 		movzx	ebx, word [ebp +20]				; EBX = 色;
   219                              <1> 
   220 00000199 84C7                <1> 		test	bh, al							; ZF = (背景色 & プレーン);
   221 0000019B 0F94C6              <1> 		setz	dh								; AH = ZF ? 0x01 : 0x00
   222 0000019E FECE                <1> 		dec		dh								; AH--; // 0x00 or 0xFF
   223                              <1> 
   224 000001A0 84C3                <1> 		test	bl, al							; ZF = (前景色 & プレーン);
   225 000001A2 0F94C2              <1> 		setz	dl								; AL = ZF ? 0x01 : 0x00
   226 000001A5 FECA                <1> 		dec		dl								; AL--; // 0x00 or 0xFF
   227                              <1> 
   228                              <1> 		;---------------------------------------
   229                              <1> 		; 16ドットフォントのコピー
   230                              <1> 		;---------------------------------------
   231 000001A7 FC                  <1> 		cld										; DF  = 0; // アドレス加算
   232                              <1> 
   233 000001A8 B910000000          <1> 		mov		ecx, 16							; ECX = 16; // 16ドット
   234                              <1> .10L:											; do
   235                              <1> 												; {
   236                              <1> 		;---------------------------------------
   237                              <1> 		; フォントマスクの作成
   238                              <1> 		;---------------------------------------
   239 000001AD AC                  <1> 		lodsb									;   AL  = *ESI++; //  フォント
   240 000001AE 88C4                <1> 		mov		ah, al							;   AH ~= AL;     // !フォント（ビット反転）
   241 000001B0 F6D4                <1> 		not		ah								;   
   242                              <1> 
   243                              <1> 		;---------------------------------------
   244                              <1> 		; 前景色
   245                              <1> 		;---------------------------------------
   246 000001B2 20D0                <1> 		and		al, dl							;   AL = 前景色 & フォント;
   247                              <1> 
   248                              <1> 		;---------------------------------------
   249                              <1> 		; 背景色
   250                              <1> 		;---------------------------------------
   251 000001B4 F7C310000000        <1> 		test	ebx, 0x0010						;   if (透過モード)
   252 000001BA 7404                <1> 		jz		.11F							;   {
   253 000001BC 2227                <1> 		and		ah, [edi]						;     AH = !フォント & [EDI] // 現在値
   254 000001BE EB02                <1> 		jmp		.11E							;   }
   255                              <1> .11F:											;   else
   256                              <1> 												;   {
   257 000001C0 20F4                <1> 		and		ah, dh							;     AH = !フォント & 背景色;
   258                              <1> .11E:											;   }
   259                              <1> 
   260                              <1> 		;---------------------------------------
   261                              <1> 		; 前景色と背景色を合成
   262                              <1> 		;---------------------------------------
   263 000001C2 08E0                <1> 		or		al, ah							;   AL  = 背景 | 前景;
   264                              <1> 
   265                              <1> 		;---------------------------------------
   266                              <1> 		; 新しい値を出力
   267                              <1> 		;---------------------------------------
   268 000001C4 8807                <1> 		mov		[edi], al						;   [EDI] = AL; // プレーンに書き込む
   269                              <1> 
   270 000001C6 83C750              <1> 		add		edi, 80							;   EDI += 80;
   271 000001C9 E2E2                <1> 		loop	.10L							; } while (--ECX);
   272                              <1> .10E:											; 
   273                              <1> 
   274                              <1> 		;---------------------------------------
   275                              <1> 		; 【レジスタの復帰】
   276                              <1> 		;---------------------------------------
   277 000001CB 5F                  <1> 		pop		edi
   278 000001CC 5E                  <1> 		pop		esi
   279 000001CD 5A                  <1> 		pop		edx
   280 000001CE 59                  <1> 		pop		ecx
   281 000001CF 5B                  <1> 		pop		ebx
   282 000001D0 58                  <1> 		pop		eax
   283                              <1> 
   284                              <1> 		;---------------------------------------
   285                              <1> 		; 【スタックフレームの破棄】
   286                              <1> 		;---------------------------------------
   287 000001D1 89EC                <1> 		mov		esp, ebp
   288 000001D3 5D                  <1> 		pop		ebp
   289                              <1> 
   290 000001D4 C3                  <1> 		ret
   291                              <1> 
   292                              <1> 
   293                              <1> ;************************************************************************
   294                              <1> ;	ビットパターンの書き込み
   295                              <1> ;========================================================================
   296                              <1> ;■書式		: void vram_bit_copy(bit, vram, flag);
   297                              <1> ;
   298                              <1> ;■引数
   299                              <1> ;	bit		: 出力ビットパターン
   300                              <1> ;	vram	: VRAMアドレス
   301                              <1> ;	flag	: 1:セット, 0:クリア
   302                              <1> ;
   303                              <1> ;■戻り値	: 無し
   304                              <1> ;************************************************************************
   305                              <1> vram_bit_copy:
   306                              <1> 		;---------------------------------------
   307                              <1> 		; 【スタックフレームの構築】
   308                              <1> 		;---------------------------------------
   309                              <1> 												; EBP+20| 色（背景/前景色）
   310                              <1> 												; EBP+16| プレーン（ビット指定）
   311                              <1> 												; EBP+12| VRAMアドレス
   312                              <1> 												; EBP+ 8| 出力ビットパターン
   313                              <1> 												; ------+----------------
   314 000001D5 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
   315 000001D6 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
   316                              <1> 												; ------+----------------
   317                              <1> 
   318                              <1> 		;---------------------------------------
   319                              <1> 		; 【レジスタの保存】
   320                              <1> 		;---------------------------------------
   321 000001D8 50                  <1> 		push	eax
   322 000001D9 53                  <1> 		push	ebx
   323 000001DA 57                  <1> 		push	edi
   324                              <1> 
   325                              <1> 		;---------------------------------------
   326                              <1> 		; 【処理の開始】
   327                              <1> 		;---------------------------------------
   328 000001DB 8B7D0C              <1> 		mov		edi, [ebp +12]					; EDI = VRAMアドレス;
   329 000001DE 0FB64510            <1> 		movzx	eax, byte [ebp +16]				; EAX = プレーン（ビット指定）;
   330 000001E2 0FB75D14            <1> 		movzx	ebx, word [ebp +20]				; EBX = 表示色;
   331                              <1> 
   332 000001E6 84C3                <1> 		test	bl, al							; ZF = (前景色 & プレーン);
   333 000001E8 0F94C3              <1> 		setz	bl								; BL = ZF ? 0x01 : 0x00
   334 000001EB FECB                <1> 		dec		bl								; BL--; // 0x00 or 0xFF
   335                              <1> 
   336                              <1> 		;---------------------------------------
   337                              <1> 		; マスクデータの作成
   338                              <1> 		;---------------------------------------
   339 000001ED 8A4508              <1> 		mov		al, [ebp + 8]					; AL = 出力ビットパターン;
   340 000001F0 88C4                <1> 		mov		ah, al							; AH ~= AL;     // !出力ビットパターン（ビット反転）
   341 000001F2 F6D4                <1> 		not		ah								; 
   342                              <1> 
   343                              <1> 		;---------------------------------------
   344                              <1> 		; 現在値の出力を取得
   345                              <1> 		;---------------------------------------
   346 000001F4 2227                <1> 		and		ah, [edi]						; AH  = 現在値 & !出力ビットパターン
   347 000001F6 20D8                <1> 		and		al, bl							; AL  = 表示色 &  出力ビットパターン
   348 000001F8 08E0                <1> 		or		al, ah							; AL |= AH;
   349                              <1> 
   350                              <1> 		;---------------------------------------
   351                              <1> 		; 新しい値を出力
   352                              <1> 		;---------------------------------------
   353 000001FA 8807                <1> 		mov		[edi], al						; [EDI] = BL; // プレーンに書き込む
   354                              <1> 
   355                              <1> 		;---------------------------------------
   356                              <1> 		; 【レジスタの復帰】
   357                              <1> 		;---------------------------------------
   358 000001FC 5F                  <1> 		pop		edi
   359 000001FD 5B                  <1> 		pop		ebx
   360 000001FE 58                  <1> 		pop		eax
   361                              <1> 
   362                              <1> 		;---------------------------------------
   363                              <1> 		; 【スタックフレームの破棄】
   364                              <1> 		;---------------------------------------
   365 000001FF 89EC                <1> 		mov		esp, ebp
   366 00000201 5D                  <1> 		pop		ebp
   367                              <1> 
   368 00000202 C3                  <1> 		ret
    76                                  %include	"../modules/protect/draw_char.s"
    77                              <1> ;************************************************************************
    78                              <1> ;	文字の表示
    79                              <1> ;------------------------------------------------------------------------
    80                              <1> ;	グラフィックスモードでテキストを表示
    81                              <1> ;========================================================================
    82                              <1> ;■書式		: void draw_char(col, row, color, ch);
    83                              <1> ;
    84                              <1> ;■引数
    85                              <1> ;	col		: 列（0～79）
    86                              <1> ;	row		: 行（0～29）
    87                              <1> ;	color	: 描画色
    88                              <1> ;	ch		: 文字
    89                              <1> ;
    90                              <1> ;■戻り値	: 無し
    91                              <1> ;************************************************************************
    92                              <1> draw_char:
    93                              <1> 		;---------------------------------------
    94                              <1> 		; 【スタックフレームの構築】
    95                              <1> 		;---------------------------------------
    96                              <1> 												; ------|--------
    97                              <1> 												; EBP+20| 文字
    98                              <1> 												; EBP+16| 色
    99                              <1> 												; EBP+12| Y（行）
   100                              <1> 												; EBP+ 8| X（列）
   101                              <1> 												; ------+----------------
   102 00000203 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
   103 00000204 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
   104                              <1> 												; ------+----------------
   105                              <1> 
   106                              <1> 		;---------------------------------------
   107                              <1> 		; 【レジスタの保存】
   108                              <1> 		;---------------------------------------
   109 00000206 50                  <1> 		push	eax
   110 00000207 53                  <1> 		push	ebx
   111 00000208 51                  <1> 		push	ecx
   112 00000209 52                  <1> 		push	edx
   113 0000020A 56                  <1> 		push	esi
   114 0000020B 57                  <1> 		push	edi
   115                              <1> 
   116                              <1> 		;---------------------------------------
   117                              <1> 		; テストアンドセット
   118                              <1> 		;---------------------------------------
   119                              <1> %ifdef	USE_TEST_AND_SET
   120                              <1> 		cdecl	test_and_set, IN_USE			; TEST_AND_SET(IN_USE); // リソースの空き待ち
   121                              <1> %endif
   122                              <1> 
   123                              <1> 		;---------------------------------------
   124                              <1> 		; コピー元フォントアドレスを設定
   125                              <1> 		;---------------------------------------
   126 0000020C 0FB67514            <1> 		movzx	esi, byte [ebp +20]				; CL  = 文字コード;
   127 00000210 C1E604              <1> 		shl		esi, 4							; CL *= 16; // 1文字16バイト
   128 00000213 0335[4C010000]      <1> 		add		esi, [FONT_ADR]					; ESI = フォントアドレス;
   129                              <1> 
   130                              <1> 		;---------------------------------------
   131                              <1> 		; コピー先アドレスを取得
   132                              <1> 		; Adr = 0xA0000 + (640 / 8 * 16) * y + x
   133                              <1> 		;---------------------------------------
   134 00000219 8B7D0C              <1> 		mov		edi, [ebp +12]					; Y（行）
   135 0000021C C1E708              <1> 		shl		edi, 8							; EDI = Y * 256;
   136 0000021F 8DBCBF00000A00      <1> 		lea		edi, [edi * 4 + edi + 0xA0000]	; EDI = Y *   4 + Y;
   137 00000226 037D08              <1> 		add		edi, [ebp + 8]					; X（列）
   138                              <1> 
   139                              <1> 		;---------------------------------------
   140                              <1> 		; 1文字分のフォントを出力
   141                              <1> 		;---------------------------------------
   142 00000229 0FB75D10            <1> 		movzx	ebx, word [ebp +16]				; // 表示色
   143                              <1> 
   144 0000022D 6A03E81CFFFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x03		; // 読み込みプレーン：輝度(I)
   144 00000236 C404                <1>
   145 00000238 6A08E82AFFFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x08		; // 書き込みプレーン：輝度(I)
   145 00000241 C404                <1>
   146 00000243 536A085756E835FFFF- <1> 		cdecl	vram_font_copy, esi, edi, 0x08, ebx
   146 0000024C FF6683C410          <1>
   147                              <1> 
   148 00000251 6A02E8F8FEFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x02		; // 読み込みプレーン：赤(R)
   148 0000025A C404                <1>
   149 0000025C 6A04E806FFFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x04		; // 書き込みプレーン：赤(R)
   149 00000265 C404                <1>
   150 00000267 536A045756E811FFFF- <1> 		cdecl	vram_font_copy, esi, edi, 0x04, ebx
   150 00000270 FF6683C410          <1>
   151                              <1> 
   152 00000275 6A01E8D4FEFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x01		; // 読み込みプレーン：緑(G)
   152 0000027E C404                <1>
   153 00000280 6A02E8E2FEFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x02		; // 書き込みプレーン：緑(G)
   153 00000289 C404                <1>
   154 0000028B 536A025756E8EDFEFF- <1> 		cdecl	vram_font_copy, esi, edi, 0x02, ebx
   154 00000294 FF6683C410          <1>
   155                              <1> 
   156 00000299 6A00E8B0FEFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x00		; // 読み込みプレーン：青(B)
   156 000002A2 C404                <1>
   157 000002A4 6A01E8BEFEFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x01		; // 書き込みプレーン：青(B)
   157 000002AD C404                <1>
   158 000002AF 536A015756E8C9FEFF- <1> 		cdecl	vram_font_copy, esi, edi, 0x01, ebx
   158 000002B8 FF6683C410          <1>
   159                              <1> 
   160                              <1> %ifdef	USE_TEST_AND_SET
   161                              <1> 		;---------------------------------------
   162                              <1> 		; テストアンドセット
   163                              <1> 		;---------------------------------------
   164                              <1> 		mov		[IN_USE], dword 0				; 変数のクリア
   165                              <1> %endif
   166                              <1> 
   167                              <1> 		;---------------------------------------
   168                              <1> 		; 【レジスタの復帰】
   169                              <1> 		;---------------------------------------
   170 000002BD 5F                  <1> 		pop		edi
   171 000002BE 5E                  <1> 		pop		esi
   172 000002BF 5A                  <1> 		pop		edx
   173 000002C0 59                  <1> 		pop		ecx
   174 000002C1 5B                  <1> 		pop		ebx
   175 000002C2 58                  <1> 		pop		eax
   176                              <1> 
   177                              <1> 		;---------------------------------------
   178                              <1> 		; 【スタックフレームの破棄】
   179                              <1> 		;---------------------------------------
   180 000002C3 89EC                <1> 		mov		esp, ebp
   181 000002C5 5D                  <1> 		pop		ebp
   182                              <1> 
   183 000002C6 C3                  <1> 		ret
   184                              <1> 
   185                              <1> %ifdef USE_TEST_AND_SET
   186                              <1> ALIGN 4, db 0
   187                              <1> IN_USE:	dd	0
   188                              <1> %endif
   189                              <1> 
    77                                  %include	"../modules/protect/draw_font.s"
    78                              <1> ;************************************************************************
    79                              <1> ;	フォント一覧を表示
    80                              <1> ;========================================================================
    81                              <1> ;■書式		: void draw_font(col, row);
    82                              <1> ;
    83                              <1> ;■引数
    84                              <1> ;	col		: 列
    85                              <1> ;	row		: 行
    86                              <1> ;
    87                              <1> ;■戻り値	: 無し
    88                              <1> ;************************************************************************
    89                              <1> draw_font:
    90                              <1> 		;---------------------------------------
    91                              <1> 		; 【スタックフレームの構築】
    92                              <1> 		;---------------------------------------
    93                              <1> 												; ------|--------
    94                              <1> 												; EBP+12| Y（行）
    95                              <1> 												; EBP+ 8| X（列）
    96                              <1> 												; ---------------
    97 000002C7 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
    98 000002C8 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
    99                              <1> 												; ---------------
   100                              <1> 
   101                              <1> 		;---------------------------------------
   102                              <1> 		; 【レジスタの保存】
   103                              <1> 		;---------------------------------------
   104 000002CA 50                  <1> 		push	eax
   105 000002CB 53                  <1> 		push	ebx
   106 000002CC 51                  <1> 		push	ecx
   107 000002CD 52                  <1> 		push	edx
   108 000002CE 56                  <1> 		push	esi
   109 000002CF 57                  <1> 		push	edi
   110                              <1> 
   111                              <1> 		;---------------------------------------
   112                              <1> 		; 表示位置
   113                              <1> 		;---------------------------------------
   114 000002D0 8B7508              <1> 		mov		esi, [ebp + 8]					; ESI = X（列）
   115 000002D3 8B7D0C              <1> 		mov		edi, [ebp +12]					; EDI = Y（行）
   116                              <1> 
   117                              <1> 		;---------------------------------------
   118                              <1> 		; フォント一覧を表示
   119                              <1> 		;---------------------------------------
   120 000002D6 B900000000          <1> 		mov		ecx, 0							; for (ECX = 0;
   121 000002DB 81F900010000        <1> .10L:	cmp		ecx, 256						;      ECX < 256;
   122 000002E1 731F                <1> 		jae		.10E							; 
   123                              <1> 												;      ECX++)
   124                              <1> 												; {
   125                              <1> 												;   // 桁位置の計算
   126 000002E3 89C8                <1> 		mov		eax, ecx						;   EAX  = ECX;
   127 000002E5 83E00F              <1> 		and		eax, 0x0F						;   EAX &= 0x0F
   128 000002E8 01F0                <1> 		add		eax, esi						;   EAX += X;
   129                              <1> 												;   
   130                              <1> 												;   // 行位置の計算
   131 000002EA 89CB                <1> 		mov		ebx, ecx						;   EBX  = ECX;
   132 000002EC C1EB04              <1> 		shr		ebx, 4							;   EBX /= 16
   133 000002EF 01FB                <1> 		add		ebx, edi						;   EBX += Y;
   134                              <1> 
   135 000002F1 516A075350E808FFFF- <1> 		cdecl	draw_char, eax, ebx, 0x07, ecx	;   draw_char();
   135 000002FA FF6683C410          <1>
   136                              <1> 
   137 000002FF 41                  <1> 		inc		ecx								;   // for (... ECX++)
   138 00000300 EBD9                <1> 		jmp		.10L							; 
   139                              <1> .10E:											; }
   140                              <1> 
   141                              <1> 		;---------------------------------------
   142                              <1> 		; 【レジスタの復帰】
   143                              <1> 		;---------------------------------------
   144 00000302 5F                  <1> 		pop		edi
   145 00000303 5E                  <1> 		pop		esi
   146 00000304 5A                  <1> 		pop		edx
   147 00000305 59                  <1> 		pop		ecx
   148 00000306 5B                  <1> 		pop		ebx
   149 00000307 58                  <1> 		pop		eax
   150                              <1> 
   151                              <1> 		;---------------------------------------
   152                              <1> 		; 【スタックフレームの破棄】
   153                              <1> 		;---------------------------------------
   154 00000308 89EC                <1> 		mov		esp, ebp
   155 0000030A 5D                  <1> 		pop		ebp
   156                              <1> 
   157 0000030B C3                  <1> 		ret
   158                              <1> 
    78                                  %include	"../modules/protect/draw_str.s"
    79                              <1> ;************************************************************************
    80                              <1> ;	文字列の表示
    81                              <1> ;========================================================================
    82                              <1> ;■書式		: void draw_str(col, row, color, p);
    83                              <1> ;
    84                              <1> ;■引数
    85                              <1> ;	col		: 列
    86                              <1> ;	row		: 行
    87                              <1> ;	color	: 描画色
    88                              <1> ;	p		: 文字列のアドレス
    89                              <1> ;
    90                              <1> ;■戻り値	: 無し
    91                              <1> ;************************************************************************
    92                              <1> draw_str:
    93                              <1> 		;---------------------------------------
    94                              <1> 		; 【スタックフレームの構築】
    95                              <1> 		;---------------------------------------
    96                              <1> 												; ------|--------
    97                              <1> 												; EBP+20| *p（文字列のアドレス）
    98                              <1> 												; EBP+16| color（色）
    99                              <1> 												; EBP+12| row（行）
   100                              <1> 												; EBP+ 8| col（列）
   101                              <1> 												; ---------------
   102 0000030C 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
   103 0000030D 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
   104                              <1> 												; ---------------
   105                              <1> 
   106                              <1> 		;---------------------------------------
   107                              <1> 		; 【レジスタの保存】
   108                              <1> 		;---------------------------------------
   109 0000030F 50                  <1> 		push	eax
   110 00000310 53                  <1> 		push	ebx
   111 00000311 51                  <1> 		push	ecx
   112 00000312 52                  <1> 		push	edx
   113 00000313 56                  <1> 		push	esi
   114                              <1> 
   115                              <1> 		;---------------------------------------
   116                              <1> 		; 文字列の表示
   117                              <1> 		;---------------------------------------
   118 00000314 8B4D08              <1> 		mov		ecx, [ebp + 8]					; ECX = 列;
   119 00000317 8B550C              <1> 		mov		edx, [ebp +12]					; EDX = 行;
   120 0000031A 0FB75D10            <1> 		movzx	ebx, word [ebp + 16]			; EBX = 表示色;
   121 0000031E 8B7514              <1> 		mov		esi, [ebp +20]					; ESI = 文字列のアドレス;
   122                              <1> 
   123 00000321 FC                  <1> 		cld										; DF = 0; // アドレス加算
   124                              <1> .10L:											; do
   125                              <1> 												; {
   126 00000322 AC                  <1> 		lodsb									;   AL = *ESI++; // 文字を取得
   127 00000323 3C00                <1> 		cmp		al, 0							;   if (0 == AL)
   128 00000325 7425                <1> 		je		.10E							;     break;
   129                              <1> 
   130                              <1> 		;---------------------------------------
   131                              <1> 		; 1文字表示
   132                              <1> 		;---------------------------------------
   133                              <1> %ifdef	USE_SYSTEM_CALL
   134                              <1> 		int		0x81							;   sys_call(1, X, Y, 色, 文字);
   135                              <1> %else
   136 00000327 50535251E8D3FEFFFF- <1> 		cdecl	draw_char, ecx, edx, ebx, eax	;   draw_char();
   136 00000330 6683C410            <1>
   137                              <1> %endif
   138                              <1> 
   139                              <1> 		; 次の文字の位置を調整
   140 00000334 41                  <1> 		inc		ecx								;   ECX++;           // 列を加算
   141 00000335 83F950              <1> 		cmp		ecx, 80							;   if (80 <= ECX)   // 80文字以上？
   142 00000338 7C10                <1> 		jl		.12E							;   {
   143 0000033A B900000000          <1> 		mov		ecx, 0							;     ECX = 0;       // 列を初期化
   144 0000033F 42                  <1> 		inc		edx								;     EDX++;         // 行を加算
   145 00000340 83FA1E              <1> 		cmp		edx, 30							;     if (30 <= EDX) // 30行以上？
   146 00000343 7C05                <1> 		jl		.12E							;     {
   147 00000345 BA00000000          <1> 		mov		edx, 0							;       EDX = 0;     // 行を初期化
   148                              <1> 												;     }
   149                              <1> .12E:											;   }
   150 0000034A EBD6                <1> 		jmp		.10L							;   
   151                              <1> .10E:											; } while (1);
   152                              <1> 
   153                              <1> 		;---------------------------------------
   154                              <1> 		; 【レジスタの復帰】
   155                              <1> 		;---------------------------------------
   156 0000034C 5E                  <1> 		pop		esi
   157 0000034D 5A                  <1> 		pop		edx
   158 0000034E 59                  <1> 		pop		ecx
   159 0000034F 5B                  <1> 		pop		ebx
   160 00000350 58                  <1> 		pop		eax
   161                              <1> 
   162                              <1> 		;---------------------------------------
   163                              <1> 		; 【スタックフレームの破棄】
   164                              <1> 		;---------------------------------------
   165 00000351 89EC                <1> 		mov		esp, ebp
   166 00000353 5D                  <1> 		pop		ebp
   167                              <1> 
   168 00000354 C3                  <1> 		ret
   169                              <1> 
    79                                  %include	"../modules/protect/draw_color_bar.s"
    80                              <1> ;************************************************************************
    81                              <1> ;	カラーバーの表示
    82                              <1> ;========================================================================
    83                              <1> ;■書式		: void draw_color_bar(col, row);
    84                              <1> ;
    85                              <1> ;■引数
    86                              <1> ;	col		: 列
    87                              <1> ;	row		: 行
    88                              <1> ;
    89                              <1> ;■戻り値	: 無し
    90                              <1> ;************************************************************************
    91                              <1> draw_color_bar:
    92                              <1> 		;---------------------------------------
    93                              <1> 		; 【スタックフレームの構築】
    94                              <1> 		;---------------------------------------
    95                              <1> 												; ------|--------
    96                              <1> 												; EBP+ 8| X（列）
    97                              <1> 												; EBP+12| Y（行）
    98                              <1> 												; ---------------
    99 00000355 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
   100 00000356 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
   101                              <1> 												; ---------------
   102                              <1> 		;---------------------------------------
   103                              <1> 		; 【レジスタの保存】
   104                              <1> 		;---------------------------------------
   105 00000358 50                  <1> 		push	eax
   106 00000359 53                  <1> 		push	ebx
   107 0000035A 51                  <1> 		push	ecx
   108 0000035B 52                  <1> 		push	edx
   109 0000035C 56                  <1> 		push	esi
   110 0000035D 57                  <1> 		push	edi
   111                              <1> 
   112                              <1> 		;---------------------------------------
   113                              <1> 		; 表示位置
   114                              <1> 		;---------------------------------------
   115 0000035E 8B7508              <1> 		mov		esi, [ebp + 8]					; ESI = X（列）
   116 00000361 8B7D0C              <1> 		mov		edi, [ebp +12]					; EDI = Y（行）
   117                              <1> 
   118                              <1> 		;---------------------------------------
   119                              <1> 		; カラーバーを表示
   120                              <1> 		;---------------------------------------
   121 00000364 B900000000          <1> 		mov		ecx, 0							; for (ECX = 0;
   122 00000369 83F910              <1> .10L:	cmp		ecx, 16							;      ECX < 16;
   123 0000036C 732E                <1> 		jae		.10E							; 
   124                              <1> 												;      ECX++)
   125                              <1> 												; {
   126                              <1> 												;   // 桁位置の計算
   127 0000036E 89C8                <1> 		mov		eax, ecx						;   EAX  = ECX;
   128 00000370 83E001              <1> 		and		eax, 0x01						;   EAX &= 0x01;
   129 00000373 C1E003              <1> 		shl		eax, 3							;   EAX *= 8;  // 8文字分乗算
   130 00000376 01F0                <1> 		add		eax, esi						;   EAX += X;
   131                              <1> 												;   
   132                              <1> 												;   // 行位置の計算
   133 00000378 89CB                <1> 		mov		ebx, ecx						;   EBX  = ECX;
   134 0000037A D1EB                <1> 		shr		ebx, 1							;   EBX /= 2
   135 0000037C 01FB                <1> 		add		ebx, edi						;   EBX += Y;
   136                              <1> 												;   
   137                              <1> 												;   // 表示色の取得
   138 0000037E 89CA                <1> 		mov		edx, ecx						;   EDX  = ECX;
   139 00000380 D1E2                <1> 		shl		edx, 1							;   EDX *= 2;
   140 00000382 8B92[AF030000]      <1> 		mov		edx, [.t0 + edx]				;   EDX += Y;
   141                              <1> 
   142 00000388 68[A6030000]525350- <1> 		cdecl	draw_str, eax, ebx, edx, .s0	;   draw_str();
   142 00000390 E877FFFFFF6683C410  <1>
   143                              <1> 
   144 00000399 41                  <1> 		inc		ecx								;   // for (... ECX++)
   145 0000039A EBCD                <1> 		jmp		.10L							; 
   146                              <1> .10E:											; }
   147                              <1> 
   148                              <1> 		;---------------------------------------
   149                              <1> 		; 【レジスタの復帰】
   150                              <1> 		;---------------------------------------
   151 0000039C 5F                  <1> 		pop		edi
   152 0000039D 5E                  <1> 		pop		esi
   153 0000039E 5A                  <1> 		pop		edx
   154 0000039F 59                  <1> 		pop		ecx
   155 000003A0 5B                  <1> 		pop		ebx
   156 000003A1 58                  <1> 		pop		eax
   157                              <1> 
   158                              <1> 		;---------------------------------------
   159                              <1> 		; 【スタックフレームの破棄】
   160                              <1> 		;---------------------------------------
   161 000003A2 89EC                <1> 		mov		esp, ebp
   162 000003A4 5D                  <1> 		pop		ebp
   163                              <1> 
   164 000003A5 C3                  <1> 		ret
   165                              <1> 
   166 000003A6 202020202020202000  <1> .s0:	db '        ', 0						; 8文字分のスペース（表示色だけを変更）
   167                              <1> 
   168 000003AF 00000008            <1> .t0:	dw	0x0000, 0x0800						; カラーバーの背景色
   169 000003B3 00010009            <1> 		dw	0x0100, 0x0900
   170 000003B7 0002000A            <1> 		dw	0x0200, 0x0A00
   171 000003BB 0003000B            <1> 		dw	0x0300, 0x0B00
   172 000003BF 0004000C            <1> 		dw	0x0400, 0x0C00
   173 000003C3 0005000D            <1> 		dw	0x0500, 0x0D00
   174 000003C7 0006000E            <1> 		dw	0x0600, 0x0E00
   175 000003CB 0007000F            <1> 		dw	0x0700, 0x0F00
   176                              <1> 
    80                                  %include	"../modules/protect/draw_pixel.s"
    81                              <1> ;************************************************************************
    82                              <1> ;	ピクセルの描画
    83                              <1> ;========================================================================
    84                              <1> ;■書式		: void draw_pixel(X, Y, color);
    85                              <1> ;
    86                              <1> ;■引数
    87                              <1> ;	X		: X座標
    88                              <1> ;	Y		: Y座標
    89                              <1> ;	color	: 描画色
    90                              <1> ;
    91                              <1> ;■戻り値	: 無し
    92                              <1> ;************************************************************************
    93                              <1> draw_pixel:
    94                              <1> 		;---------------------------------------
    95                              <1> 		; 【スタックフレームの構築】
    96                              <1> 		;---------------------------------------
    97                              <1> 												; ------|--------
    98                              <1> 												; EBP+16| 色
    99                              <1> 												; EBP+12| Y
   100                              <1> 												; EBP+ 8| X
   101                              <1> 												; ------|--------
   102 000003CF 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
   103 000003D0 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
   104                              <1> 												; ------+--------
   105                              <1> 		;---------------------------------------
   106                              <1> 		; 【レジスタの保存】
   107                              <1> 		;---------------------------------------
   108 000003D2 50                  <1> 		push	eax
   109 000003D3 53                  <1> 		push	ebx
   110 000003D4 51                  <1> 		push	ecx
   111 000003D5 57                  <1> 		push	edi
   112                              <1> 
   113                              <1> 		;---------------------------------------
   114                              <1> 		; Y座標を80倍する（640/8）
   115                              <1> 		;---------------------------------------
   116 000003D6 8B7D0C              <1> 		mov		edi, [ebp +12]					; EDI  = Y座標
   117 000003D9 C1E704              <1> 		shl		edi, 4							; EDI *= 16;
   118 000003DC 8DBCBF00000A00      <1> 		lea		edi, [edi * 4 + edi + 0xA_0000]	; EDI  = 0xA00000[EDI * 4 + EDI];
   119                              <1> 
   120                              <1> 		;---------------------------------------
   121                              <1> 		; X座標を1/8して加算
   122                              <1> 		;---------------------------------------
   123 000003E3 8B5D08              <1> 		mov		ebx, [ebp + 8]					; EBX  = X座標;
   124 000003E6 89D9                <1> 		mov		ecx, ebx						; ECX  = X座標;（一時保存）
   125 000003E8 C1EB03              <1> 		shr		ebx, 3							; EBX /= 8;
   126 000003EB 01DF                <1> 		add		edi, ebx						; EDI += EBX;
   127                              <1> 
   128                              <1> 		;---------------------------------------
   129                              <1> 		; X座標を8で割った余りからビット位置を計算
   130                              <1> 		; (0=0x80, 1=0x40,... 7=0x01)
   131                              <1> 		;---------------------------------------
   132 000003ED 83E107              <1> 		and		ecx, 0x07						; ECX = X & 0x07;
   133 000003F0 BB80000000          <1> 		mov		ebx, 0x80						; EBX = 0x80;
   134 000003F5 D3EB                <1> 		shr		ebx, cl							; EBX >>= ECX;
   135                              <1> 
   136                              <1> 		;---------------------------------------
   137                              <1> 		; 色指定
   138                              <1> 		;---------------------------------------
   139 000003F7 8B4D10              <1> 		mov		ecx, [ebp +16]					; // 表示色
   140                              <1> 
   141                              <1> %ifdef	USE_TEST_AND_SET
   142                              <1> 		cdecl	test_and_set, IN_USE			; TEST_AND_SET(IN_USE); // リソースの空き待ち
   143                              <1> %endif
   144                              <1> 
   145                              <1> 		;---------------------------------------
   146                              <1> 		; プレーン毎に出力
   147                              <1> 		;---------------------------------------
   148 000003FA 6A03E84FFDFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x03		; // 輝度(I)プレーンを選択
   148 00000403 C404                <1>
   149 00000405 6A08E85DFDFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x08		; // 輝度(I)プレーンを選択
   149 0000040E C404                <1>
   150 00000410 516A085753E8BBFDFF- <1> 		cdecl	vram_bit_copy, ebx, edi, 0x08, ecx
   150 00000419 FF6683C410          <1>
   151                              <1> 
   152 0000041E 6A02E82BFDFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x02		; // 赤(R)プレーンを選択
   152 00000427 C404                <1>
   153 00000429 6A04E839FDFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x04		; // 赤(R)プレーンを選択
   153 00000432 C404                <1>
   154 00000434 516A045753E897FDFF- <1> 		cdecl	vram_bit_copy, ebx, edi, 0x04, ecx
   154 0000043D FF6683C410          <1>
   155                              <1> 
   156 00000442 6A01E807FDFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x01		; // 緑(G)プレーンを選択
   156 0000044B C404                <1>
   157 0000044D 6A02E815FDFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x02		; // 緑(G)プレーンを選択
   157 00000456 C404                <1>
   158 00000458 516A025753E873FDFF- <1> 		cdecl	vram_bit_copy, ebx, edi, 0x02, ecx
   158 00000461 FF6683C410          <1>
   159                              <1> 
   160 00000466 6A00E8E3FCFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x00		; // 青(B)プレーンを選択
   160 0000046F C404                <1>
   161 00000471 6A01E8F1FCFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x01		; // 青(B)プレーンを選択
   161 0000047A C404                <1>
   162 0000047C 516A015753E84FFDFF- <1> 		cdecl	vram_bit_copy, ebx, edi, 0x01, ecx
   162 00000485 FF6683C410          <1>
   163                              <1> 
   164                              <1> 
   165                              <1> %ifdef	USE_TEST_AND_SET
   166                              <1> 		;---------------------------------------
   167                              <1> 		; テストアンドセット
   168                              <1> 		;---------------------------------------
   169                              <1> 		mov		[IN_USE], dword 0				; 変数のクリア
   170                              <1> %endif
   171                              <1> 
   172                              <1> 		;---------------------------------------
   173                              <1> 		; 【レジスタの復帰】
   174                              <1> 		;---------------------------------------
   175 0000048A 5F                  <1> 		pop		edi
   176 0000048B 59                  <1> 		pop		ecx
   177 0000048C 5B                  <1> 		pop		ebx
   178 0000048D 58                  <1> 		pop		eax
   179                              <1> 
   180                              <1> 		;---------------------------------------
   181                              <1> 		; 【スタックフレームの破棄】
   182                              <1> 		;---------------------------------------
   183 0000048E 89EC                <1> 		mov		esp, ebp
   184 00000490 5D                  <1> 		pop		ebp
   185                              <1> 
   186 00000491 C3                  <1> 		ret
   187                              <1> 
    81                                  
    82                                  ;************************************************************************
    83                                  ;	パディング
    84                                  ;************************************************************************
    85 00000492 00<rep 1B6Eh>           		times KERNEL_SIZE - ($ - $$) db 0x00	; パディング
    86                                  
