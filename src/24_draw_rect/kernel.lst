     1                                  ;************************************************************************
     2                                  ;
     3                                  ;	カーネル部
     4                                  ;
     5                                  ;************************************************************************
     6                                  
     7                                  ;************************************************************************
     8                                  ;	マクロ
     9                                  ;************************************************************************
    10                                  %include	"../include/define.s"
    11                              <1> ;************************************************************************
    12                              <1> ;	メモリイメージ
    13                              <1> ;************************************************************************
    14                              <1> 
    15                              <1> 		;---------------------------------------
    16                              <1> 		;           |            | 
    17                              <1> 		;           |____________| 
    18                              <1> 		; 0000_7A00 |            | ( 512) スタック
    19                              <1> 		;           |____________| 
    20                              <1> 		; 0000_7C00 |            | (  8K) ブート
    21                              <1> 		;           =            = 
    22                              <1> 		;           |____________| 
    23                              <1> 		; 0000_9C00 |            | (  8K) カーネル（一時展開）
    24                              <1> 		;           =            = 
    25                              <1> 		;           |____________| 
    26                              <1> 		; 0000_BC00 |////////////| 
    27                              <1> 		;           =            = 
    28                              <1> 		;           |____________| 
    29                              <1> 		; 0010_0000 |       (2K) | 割り込みディスクリプタテーブル
    30                              <1> 		;           |____________| 
    31                              <1> 		; 0010_0800 |       (2K) | カーネルスタック
    32                              <1> 		;           |____________| 
    33                              <1> 		; 0010_1000 |       (8K) | カーネルプログラム
    34                              <1> 		;           |            | 
    35                              <1> 		;           =            = 
    36                              <1> 		;           |____________| 
    37                              <1> 		; 0010_3000 |       (8K) | タスク用スタック
    38                              <1> 		;           |            | （各タスク1K）
    39                              <1> 		;           =            = 
    40                              <1> 		;           |____________| 
    41                              <1> 		; 0010_5000 |            | Dir
    42                              <1> 		;      6000 |____________| Page
    43                              <1> 		; 0010_7000 |            | Dir
    44                              <1> 		;      8000 |____________| Page
    45                              <1> 		; 0010_9000 |////////////| 
    46                              <1> 		;           |            | 
    47                              <1> 
    48                              <1> 
    49                              <1>         BOOT_SIZE			equ		(1024 * 8)		; ブートサイズ
    50                              <1> 		KERNEL_SIZE			equ		(1024 * 8)		; カーネルサイズ
    51                              <1> 
    52                              <1> 		BOOT_LOAD			equ		0x7C00			; ブートプログラムのロード位置
    53                              <1> 		BOOT_END			equ		(BOOT_LOAD + BOOT_SIZE)
    54                              <1> 
    55                              <1> 		KERNEL_LOAD			equ		0x0010_1000
    56                              <1> 
    57                              <1> 		SECT_SIZE			equ		(512)			; セクタサイズ
    58                              <1> 
    59                              <1> 		BOOT_SECT			equ		(BOOT_SIZE   / SECT_SIZE)	; ブートプログラムのセクタ数
    60                              <1> 		KERNEL_SECT			equ		(KERNEL_SIZE / SECT_SIZE)	; カーネルのセクタ数
    61                              <1> 
    62                              <1> 		E820_RECORD_SIZE	equ		20
    63                              <1> 
    64                              <1> 		VECT_BASE			equ		0x0010_0000		;	0010_0000:0010_07FF
    11                                  %include	"../include/macro.s"
    12                              <1> ;************************************************************************
    13                              <1> ; 関数呼び出し用マクロ
    14                              <1> ;
    15                              <1> ; 使い方：
    16                              <1> ;	cdecl	func [, param1[, param2[, ...]]]
    17                              <1> ;
    18                              <1> ;************************************************************************
    19                              <1> 
    20                              <1> %macro cdecl 1-*.nolist
    21                              <1> 
    22                              <1>     %rep %0 - 1
    23                              <1>         push    %{-1:-1}
    24                              <1>         %rotate -1
    25                              <1>     %endrep
    26                              <1>     %rotate -1
    27                              <1> 
    28                              <1>         call    %1
    29                              <1> 
    30                              <1>     %if 1 < %0
    31                              <1>         add     sp,(__BITS__ >> 3) * (%0 - 1)
    32                              <1>     %endif
    33                              <1> 
    34                              <1> %endmacro
    35                              <1> 
    36                              <1> ;************************************************************************
    37                              <1> ;	構造体
    38                              <1> ;************************************************************************
    39                              <1> 
    40                              <1> ;-----------------------------------------------
    41                              <1> ;	ドライブパラメータ
    42                              <1> ;-----------------------------------------------
    43                              <1> struc drive
    44 00000000 ????                <1> 		.no				resw	1				; ドライブ番号
    45 00000002 ????                <1> 		.cyln			resw	1				; C:シリンダ
    46 00000004 ????                <1> 		.head			resw	1				; H:ヘッド
    47 00000006 ????                <1> 		.sect			resw	1				; S:セクタ
    48                              <1> endstruc
    12                                  
    13                                  		ORG		KERNEL_LOAD						; カーネルのロードアドレス
    14                                  
    15                                  [BITS 32]
    16                                  ;************************************************************************
    17                                  ;	エントリポイント
    18                                  ;************************************************************************
    19                                  kernel:
    20                                  		;---------------------------------------
    21                                  		; フォントアドレスを取得
    22                                  		;---------------------------------------
    23 00000000 BE007E0000              		mov		esi, BOOT_LOAD + SECT_SIZE		; ESI   = 0x7C00 + 512
    24 00000005 0FB706                  		movzx	eax, word [esi + 0]				; EAX   = [ESI + 0] // セグメント
    25 00000008 0FB75E02                		movzx	ebx, word [esi + 2]				; EBX   = [ESI + 2] // オフセット
    26 0000000C C1E004                  		shl		eax, 4							; EAX <<= 4;
    27 0000000F 01D8                    		add		eax, ebx						; EAX  += EBX;
    28 00000011 A3[B0000000]            		mov		[FONT_ADR], eax					; FONT_ADR[0] = EAX;
    29                                  
    30                                  		;---------------------------------------
    31                                  		; フォントの一覧表示
    32                                  		;---------------------------------------
    33 00000016 6A0D6A3FE80C020000-     		cdecl	draw_font, 63, 13				; // フォントの一覧表示
    33 0000001F 6683C408           
    34 00000023 6A046A3FE88D020000-     		cdecl	draw_color_bar, 63, 4			; // カラーバーの表示
    34 0000002C 6683C408           
    35                                  
    36                                  		;---------------------------------------
    37                                  		; 文字列の表示
    38                                  		;---------------------------------------
    39 00000030 68[9D000000]680F01-     		cdecl	draw_str, 25, 14, 0x010F, .s0	; draw_str();
    39 00000038 00006A0E6A19E82D02-
    39 00000041 00006683C410       
    40                                  
    41                                  		;---------------------------------------
    42                                  		; 矩形を描画
    43                                  		;---------------------------------------
    44 00000047 6A0368C800000068C8-     		cdecl	draw_rect, 100, 100, 200, 200, 0x03
    44 00000050 0000006A646A64E84C-
    44 00000059 0400006683C414     
    45 00000060 6A0568960000006896-     		cdecl	draw_rect, 400, 250, 150, 150, 0x05
    45 00000069 00000068FA00000068-
    45 00000072 90010000E82D040000-
    45 0000007B 6683C414           
    46 0000007F 6A066A64682C010000-     		cdecl	draw_rect, 350, 400, 300, 100, 0x06
    46 00000088 6890010000685E0100-
    46 00000091 00E8110400006683C4-
    46 0000009A 14                 
    47                                  
    48                                  		;---------------------------------------
    49                                  		; 処理の終了
    50                                  		;---------------------------------------
    51 0000009B EBFE                    		jmp		$								; while (1) ; // 無限ループ
    52                                  
    53 0000009D 2048656C6C6F2C206B-     .s0:	db	" Hello, kernel! ", 0
    53 000000A6 65726E656C212000   
    54                                  
    55 000000AE 00<rep 2h>              ALIGN 4, db 0
    56 000000B0 00000000                FONT_ADR:	dd	0
    57                                  
    58                                  ;************************************************************************
    59                                  ;	モジュール
    60                                  ;************************************************************************
    61                                  %include	"../modules/protect/vga.s"
    62                              <1> ;************************************************************************
    63                              <1> ;	読み込みプレーンの選択
    64                              <1> ;========================================================================
    65                              <1> ;■書式		: void vga_set_read_plane(plane);
    66                              <1> ;
    67                              <1> ;■引数
    68                              <1> ;	plane	: 読み込みプレーン
    69                              <1> ;
    70                              <1> ;■戻り値	: 無し
    71                              <1> ;************************************************************************
    72                              <1> vga_set_read_plane:
    73                              <1> 		;---------------------------------------
    74                              <1> 		; 【スタックフレームの構築】
    75                              <1> 		;---------------------------------------
    76                              <1> 												; EBP+ 8| プレーン（インデックス）
    77                              <1> 												; ------+----------------
    78 000000B4 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
    79 000000B5 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
    80                              <1> 												; ------+----------------
    81                              <1> 
    82                              <1> 		;---------------------------------------
    83                              <1> 		; 【レジスタの保存】
    84                              <1> 		;---------------------------------------
    85 000000B7 50                  <1> 		push	eax
    86 000000B8 52                  <1> 		push	edx
    87                              <1> 
    88                              <1> 		;---------------------------------------
    89                              <1> 		; 読み込みプレーンの選択
    90                              <1> 		;---------------------------------------
    91 000000B9 8A6508              <1> 		mov		ah, [ebp + 8]					; AH  = プレーンを選択（3=輝度, 2～0=RGB）
    92 000000BC 80E403              <1> 		and		ah, 0x03						; AH &= 0x03; // 余計なビットをマスク
    93 000000BF B004                <1> 		mov		al, 0x04						; AL  = 読み込みプレーン選択レジスタ
    94 000000C1 66BACE03            <1> 		mov		dx, 0x03CE						; DX  = グラフィックス制御ポート
    95 000000C5 66EF                <1> 		out		dx, ax							; // ポート出力
    96                              <1> 
    97                              <1> 		;---------------------------------------
    98                              <1> 		; 【レジスタの復帰】
    99                              <1> 		;---------------------------------------
   100 000000C7 5A                  <1> 		pop		edx
   101 000000C8 58                  <1> 		pop		eax
   102                              <1> 
   103                              <1> 		;---------------------------------------
   104                              <1> 		; 【スタックフレームの破棄】
   105                              <1> 		;---------------------------------------
   106 000000C9 89EC                <1> 		mov		esp, ebp
   107 000000CB 5D                  <1> 		pop		ebp
   108                              <1> 
   109 000000CC C3                  <1> 		ret
   110                              <1> 
   111                              <1> 
   112                              <1> ;************************************************************************
   113                              <1> ;	書き込みプレーンを選択
   114                              <1> ;========================================================================
   115                              <1> ;■書式		: void vga_set_write_plane(plane);
   116                              <1> ;
   117                              <1> ;■引数
   118                              <1> ;	plane	: 書き込みプレーン
   119                              <1> ;
   120                              <1> ;■戻り値	: 無し
   121                              <1> ;************************************************************************
   122                              <1> vga_set_write_plane:
   123                              <1> 		;---------------------------------------
   124                              <1> 		; 【スタックフレームの構築】
   125                              <1> 		;---------------------------------------
   126                              <1> 												; EBP+ 8| プレーン（ビット指定）
   127                              <1> 												; ------+----------------
   128 000000CD 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
   129 000000CE 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
   130                              <1> 												; ------+----------------
   131                              <1> 
   132                              <1> 		;---------------------------------------
   133                              <1> 		; 【レジスタの保存】
   134                              <1> 		;---------------------------------------
   135 000000D0 50                  <1> 		push	eax
   136 000000D1 52                  <1> 		push	edx
   137                              <1> 
   138                              <1> 		;---------------------------------------
   139                              <1> 		; 書き込みプレーンの選択
   140                              <1> 		;---------------------------------------
   141 000000D2 8A6508              <1> 		mov		ah, [ebp + 8]					; AH = 書き込みプレーンを指定(Bit:----IRGB)
   142 000000D5 80E40F              <1> 		and		ah, 0x0F						; AH = 0x0F; // 余計なビットをマスク
   143 000000D8 B002                <1> 		mov		al, 0x02						; AL = 書き込みプレーン選択
   144 000000DA 66BAC403            <1> 		mov		dx, 0x03C4						; DX = シーケンサ制御ポート
   145 000000DE 66EF                <1> 		out		dx, ax							; // ポート出力
   146                              <1> 
   147                              <1> 		;---------------------------------------
   148                              <1> 		; 【レジスタの復帰】
   149                              <1> 		;---------------------------------------
   150 000000E0 5A                  <1> 		pop		edx
   151 000000E1 58                  <1> 		pop		eax
   152                              <1> 
   153                              <1> 		;---------------------------------------
   154                              <1> 		; 【スタックフレームの破棄】
   155                              <1> 		;---------------------------------------
   156 000000E2 89EC                <1> 		mov		esp, ebp
   157 000000E4 5D                  <1> 		pop		ebp
   158                              <1> 
   159 000000E5 C3                  <1> 		ret
   160                              <1> 
   161                              <1> 
   162                              <1> ;************************************************************************
   163                              <1> ;	フォントの書き込み
   164                              <1> ;========================================================================
   165                              <1> ;■書式		: void vram_font_copy(font, vram, plane, color);
   166                              <1> ;
   167                              <1> ;■引数
   168                              <1> ;	font	: FONTアドレス
   169                              <1> ;	vram	: VRAMアドレス
   170                              <1> ;	plane	: 出力プレーン（１つのプレーンのみをビットで指定）
   171                              <1> ;	color	: 描画色
   172                              <1> ;
   173                              <1> ;■戻り値	: 無し
   174                              <1> ;************************************************************************
   175                              <1> vram_font_copy:
   176                              <1> 		;---------------------------------------
   177                              <1> 		; 【スタックフレームの構築】
   178                              <1> 		;---------------------------------------
   179                              <1> 												; EBP+20| 色（背景/前景色）
   180                              <1> 												; EBP+16| プレーン（ビット指定）
   181                              <1> 												; EBP+12| VRAMアドレス
   182                              <1> 												; EBP+ 8| FONTアドレス
   183                              <1> 												; ------+----------------
   184 000000E6 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
   185 000000E7 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
   186                              <1> 												; ------+----------------
   187                              <1> 
   188                              <1> 		;---------------------------------------
   189                              <1> 		; 【レジスタの保存】
   190                              <1> 		;---------------------------------------
   191 000000E9 50                  <1> 		push	eax
   192 000000EA 53                  <1> 		push	ebx
   193 000000EB 51                  <1> 		push	ecx
   194 000000EC 52                  <1> 		push	edx
   195 000000ED 56                  <1> 		push	esi
   196 000000EE 57                  <1> 		push	edi
   197                              <1> 
   198                              <1> 		;---------------------------------------
   199                              <1> 		; 【処理の開始】
   200                              <1> 		;---------------------------------------
   201 000000EF 8B7508              <1> 		mov		esi, [ebp + 8]					; ESI = フォントアドレス;
   202 000000F2 8B7D0C              <1> 		mov		edi, [ebp +12]					; EDI = VRAMアドレス;
   203 000000F5 0FB64510            <1> 		movzx	eax, byte [ebp +16]				; EAX = プレーン（ビット指定）;
   204 000000F9 0FB75D14            <1> 		movzx	ebx, word [ebp +20]				; EBX = 色;
   205                              <1> 
   206 000000FD 84C7                <1> 		test	bh, al							; ZF = (背景色 & プレーン);
   207 000000FF 0F94C6              <1> 		setz	dh								; AH = ZF ? 0x01 : 0x00
   208 00000102 FECE                <1> 		dec		dh								; AH--; // 0x00 or 0xFF
   209                              <1> 
   210 00000104 84C3                <1> 		test	bl, al							; ZF = (前景色 & プレーン);
   211 00000106 0F94C2              <1> 		setz	dl								; AL = ZF ? 0x01 : 0x00
   212 00000109 FECA                <1> 		dec		dl								; AL--; // 0x00 or 0xFF
   213                              <1> 
   214                              <1> 		;---------------------------------------
   215                              <1> 		; 16ドットフォントのコピー
   216                              <1> 		;---------------------------------------
   217 0000010B FC                  <1> 		cld										; DF  = 0; // アドレス加算
   218                              <1> 
   219 0000010C B910000000          <1> 		mov		ecx, 16							; ECX = 16; // 16ドット
   220                              <1> .10L:											; do
   221                              <1> 												; {
   222                              <1> 		;---------------------------------------
   223                              <1> 		; フォントマスクの作成
   224                              <1> 		;---------------------------------------
   225 00000111 AC                  <1> 		lodsb									;   AL  = *ESI++; //  フォント
   226 00000112 88C4                <1> 		mov		ah, al							;   AH ~= AL;     // !フォント（ビット反転）
   227 00000114 F6D4                <1> 		not		ah								;   
   228                              <1> 
   229                              <1> 		;---------------------------------------
   230                              <1> 		; 前景色
   231                              <1> 		;---------------------------------------
   232 00000116 20D0                <1> 		and		al, dl							;   AL = 前景色 & フォント;
   233                              <1> 
   234                              <1> 		;---------------------------------------
   235                              <1> 		; 背景色
   236                              <1> 		;---------------------------------------
   237 00000118 F7C310000000        <1> 		test	ebx, 0x0010						;   if (透過モード)
   238 0000011E 7404                <1> 		jz		.11F							;   {
   239 00000120 2227                <1> 		and		ah, [edi]						;     AH = !フォント & [EDI] // 現在値
   240 00000122 EB02                <1> 		jmp		.11E							;   }
   241                              <1> .11F:											;   else
   242                              <1> 												;   {
   243 00000124 20F4                <1> 		and		ah, dh							;     AH = !フォント & 背景色;
   244                              <1> .11E:											;   }
   245                              <1> 
   246                              <1> 		;---------------------------------------
   247                              <1> 		; 前景色と背景色を合成
   248                              <1> 		;---------------------------------------
   249 00000126 08E0                <1> 		or		al, ah							;   AL  = 背景 | 前景;
   250                              <1> 
   251                              <1> 		;---------------------------------------
   252                              <1> 		; 新しい値を出力
   253                              <1> 		;---------------------------------------
   254 00000128 8807                <1> 		mov		[edi], al						;   [EDI] = AL; // プレーンに書き込む
   255                              <1> 
   256 0000012A 83C750              <1> 		add		edi, 80							;   EDI += 80;
   257 0000012D E2E2                <1> 		loop	.10L							; } while (--ECX);
   258                              <1> .10E:											; 
   259                              <1> 
   260                              <1> 		;---------------------------------------
   261                              <1> 		; 【レジスタの復帰】
   262                              <1> 		;---------------------------------------
   263 0000012F 5F                  <1> 		pop		edi
   264 00000130 5E                  <1> 		pop		esi
   265 00000131 5A                  <1> 		pop		edx
   266 00000132 59                  <1> 		pop		ecx
   267 00000133 5B                  <1> 		pop		ebx
   268 00000134 58                  <1> 		pop		eax
   269                              <1> 
   270                              <1> 		;---------------------------------------
   271                              <1> 		; 【スタックフレームの破棄】
   272                              <1> 		;---------------------------------------
   273 00000135 89EC                <1> 		mov		esp, ebp
   274 00000137 5D                  <1> 		pop		ebp
   275                              <1> 
   276 00000138 C3                  <1> 		ret
   277                              <1> 
   278                              <1> 
   279                              <1> ;************************************************************************
   280                              <1> ;	ビットパターンの書き込み
   281                              <1> ;========================================================================
   282                              <1> ;■書式		: void vram_bit_copy(bit, vram, flag);
   283                              <1> ;
   284                              <1> ;■引数
   285                              <1> ;	bit		: 出力ビットパターン
   286                              <1> ;	vram	: VRAMアドレス
   287                              <1> ;	flag	: 1:セット, 0:クリア
   288                              <1> ;
   289                              <1> ;■戻り値	: 無し
   290                              <1> ;************************************************************************
   291                              <1> vram_bit_copy:
   292                              <1> 		;---------------------------------------
   293                              <1> 		; 【スタックフレームの構築】
   294                              <1> 		;---------------------------------------
   295                              <1> 												; EBP+20| 色（背景/前景色）
   296                              <1> 												; EBP+16| プレーン（ビット指定）
   297                              <1> 												; EBP+12| VRAMアドレス
   298                              <1> 												; EBP+ 8| 出力ビットパターン
   299                              <1> 												; ------+----------------
   300 00000139 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
   301 0000013A 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
   302                              <1> 												; ------+----------------
   303                              <1> 
   304                              <1> 		;---------------------------------------
   305                              <1> 		; 【レジスタの保存】
   306                              <1> 		;---------------------------------------
   307 0000013C 50                  <1> 		push	eax
   308 0000013D 53                  <1> 		push	ebx
   309 0000013E 57                  <1> 		push	edi
   310                              <1> 
   311                              <1> 		;---------------------------------------
   312                              <1> 		; 【処理の開始】
   313                              <1> 		;---------------------------------------
   314 0000013F 8B7D0C              <1> 		mov		edi, [ebp +12]					; EDI = VRAMアドレス;
   315 00000142 0FB64510            <1> 		movzx	eax, byte [ebp +16]				; EAX = プレーン（ビット指定）;
   316 00000146 0FB75D14            <1> 		movzx	ebx, word [ebp +20]				; EBX = 表示色;
   317                              <1> 
   318 0000014A 84C3                <1> 		test	bl, al							; ZF = (前景色 & プレーン);
   319 0000014C 0F94C3              <1> 		setz	bl								; BL = ZF ? 0x01 : 0x00
   320 0000014F FECB                <1> 		dec		bl								; BL--; // 0x00 or 0xFF
   321                              <1> 
   322                              <1> 		;---------------------------------------
   323                              <1> 		; マスクデータの作成
   324                              <1> 		;---------------------------------------
   325 00000151 8A4508              <1> 		mov		al, [ebp + 8]					; AL = 出力ビットパターン;
   326 00000154 88C4                <1> 		mov		ah, al							; AH ~= AL;     // !出力ビットパターン（ビット反転）
   327 00000156 F6D4                <1> 		not		ah								; 
   328                              <1> 
   329                              <1> 		;---------------------------------------
   330                              <1> 		; 現在値の出力を取得
   331                              <1> 		;---------------------------------------
   332 00000158 2227                <1> 		and		ah, [edi]						; AH  = 現在値 & !出力ビットパターン
   333 0000015A 20D8                <1> 		and		al, bl							; AL  = 表示色 &  出力ビットパターン
   334 0000015C 08E0                <1> 		or		al, ah							; AL |= AH;
   335                              <1> 
   336                              <1> 		;---------------------------------------
   337                              <1> 		; 新しい値を出力
   338                              <1> 		;---------------------------------------
   339 0000015E 8807                <1> 		mov		[edi], al						; [EDI] = BL; // プレーンに書き込む
   340                              <1> 
   341                              <1> 		;---------------------------------------
   342                              <1> 		; 【レジスタの復帰】
   343                              <1> 		;---------------------------------------
   344 00000160 5F                  <1> 		pop		edi
   345 00000161 5B                  <1> 		pop		ebx
   346 00000162 58                  <1> 		pop		eax
   347                              <1> 
   348                              <1> 		;---------------------------------------
   349                              <1> 		; 【スタックフレームの破棄】
   350                              <1> 		;---------------------------------------
   351 00000163 89EC                <1> 		mov		esp, ebp
   352 00000165 5D                  <1> 		pop		ebp
   353                              <1> 
   354 00000166 C3                  <1> 		ret
    62                                  %include	"../modules/protect/draw_char.s"
    63                              <1> ;************************************************************************
    64                              <1> ;	文字の表示
    65                              <1> ;------------------------------------------------------------------------
    66                              <1> ;	グラフィックスモードでテキストを表示
    67                              <1> ;========================================================================
    68                              <1> ;■書式		: void draw_char(col, row, color, ch);
    69                              <1> ;
    70                              <1> ;■引数
    71                              <1> ;	col		: 列（0～79）
    72                              <1> ;	row		: 行（0～29）
    73                              <1> ;	color	: 描画色
    74                              <1> ;	ch		: 文字
    75                              <1> ;
    76                              <1> ;■戻り値	: 無し
    77                              <1> ;************************************************************************
    78                              <1> draw_char:
    79                              <1> 		;---------------------------------------
    80                              <1> 		; 【スタックフレームの構築】
    81                              <1> 		;---------------------------------------
    82                              <1> 												; ------|--------
    83                              <1> 												; EBP+20| 文字
    84                              <1> 												; EBP+16| 色
    85                              <1> 												; EBP+12| Y（行）
    86                              <1> 												; EBP+ 8| X（列）
    87                              <1> 												; ------+----------------
    88 00000167 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
    89 00000168 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
    90                              <1> 												; ------+----------------
    91                              <1> 
    92                              <1> 		;---------------------------------------
    93                              <1> 		; 【レジスタの保存】
    94                              <1> 		;---------------------------------------
    95 0000016A 50                  <1> 		push	eax
    96 0000016B 53                  <1> 		push	ebx
    97 0000016C 51                  <1> 		push	ecx
    98 0000016D 52                  <1> 		push	edx
    99 0000016E 56                  <1> 		push	esi
   100 0000016F 57                  <1> 		push	edi
   101                              <1> 
   102                              <1> 		;---------------------------------------
   103                              <1> 		; テストアンドセット
   104                              <1> 		;---------------------------------------
   105                              <1> %ifdef	USE_TEST_AND_SET
   106                              <1> 		cdecl	test_and_set, IN_USE			; TEST_AND_SET(IN_USE); // リソースの空き待ち
   107                              <1> %endif
   108                              <1> 
   109                              <1> 		;---------------------------------------
   110                              <1> 		; コピー元フォントアドレスを設定
   111                              <1> 		;---------------------------------------
   112 00000170 0FB67514            <1> 		movzx	esi, byte [ebp +20]				; CL  = 文字コード;
   113 00000174 C1E604              <1> 		shl		esi, 4							; CL *= 16; // 1文字16バイト
   114 00000177 0335[B0000000]      <1> 		add		esi, [FONT_ADR]					; ESI = フォントアドレス;
   115                              <1> 
   116                              <1> 		;---------------------------------------
   117                              <1> 		; コピー先アドレスを取得
   118                              <1> 		; Adr = 0xA0000 + (640 / 8 * 16) * y + x
   119                              <1> 		;---------------------------------------
   120 0000017D 8B7D0C              <1> 		mov		edi, [ebp +12]					; Y（行）
   121 00000180 C1E708              <1> 		shl		edi, 8							; EDI = Y * 256;
   122 00000183 8DBCBF00000A00      <1> 		lea		edi, [edi * 4 + edi + 0xA0000]	; EDI = Y *   4 + Y;
   123 0000018A 037D08              <1> 		add		edi, [ebp + 8]					; X（列）
   124                              <1> 
   125                              <1> 		;---------------------------------------
   126                              <1> 		; 1文字分のフォントを出力
   127                              <1> 		;---------------------------------------
   128 0000018D 0FB75D10            <1> 		movzx	ebx, word [ebp +16]				; // 表示色
   129                              <1> 
   130 00000191 6A03E81CFFFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x03		; // 読み込みプレーン：輝度(I)
   130 0000019A C404                <1>
   131 0000019C 6A08E82AFFFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x08		; // 書き込みプレーン：輝度(I)
   131 000001A5 C404                <1>
   132 000001A7 536A085756E835FFFF- <1> 		cdecl	vram_font_copy, esi, edi, 0x08, ebx
   132 000001B0 FF6683C410          <1>
   133                              <1> 
   134 000001B5 6A02E8F8FEFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x02		; // 読み込みプレーン：赤(R)
   134 000001BE C404                <1>
   135 000001C0 6A04E806FFFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x04		; // 書き込みプレーン：赤(R)
   135 000001C9 C404                <1>
   136 000001CB 536A045756E811FFFF- <1> 		cdecl	vram_font_copy, esi, edi, 0x04, ebx
   136 000001D4 FF6683C410          <1>
   137                              <1> 
   138 000001D9 6A01E8D4FEFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x01		; // 読み込みプレーン：緑(G)
   138 000001E2 C404                <1>
   139 000001E4 6A02E8E2FEFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x02		; // 書き込みプレーン：緑(G)
   139 000001ED C404                <1>
   140 000001EF 536A025756E8EDFEFF- <1> 		cdecl	vram_font_copy, esi, edi, 0x02, ebx
   140 000001F8 FF6683C410          <1>
   141                              <1> 
   142 000001FD 6A00E8B0FEFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x00		; // 読み込みプレーン：青(B)
   142 00000206 C404                <1>
   143 00000208 6A01E8BEFEFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x01		; // 書き込みプレーン：青(B)
   143 00000211 C404                <1>
   144 00000213 536A015756E8C9FEFF- <1> 		cdecl	vram_font_copy, esi, edi, 0x01, ebx
   144 0000021C FF6683C410          <1>
   145                              <1> 
   146                              <1> %ifdef	USE_TEST_AND_SET
   147                              <1> 		;---------------------------------------
   148                              <1> 		; テストアンドセット
   149                              <1> 		;---------------------------------------
   150                              <1> 		mov		[IN_USE], dword 0				; 変数のクリア
   151                              <1> %endif
   152                              <1> 
   153                              <1> 		;---------------------------------------
   154                              <1> 		; 【レジスタの復帰】
   155                              <1> 		;---------------------------------------
   156 00000221 5F                  <1> 		pop		edi
   157 00000222 5E                  <1> 		pop		esi
   158 00000223 5A                  <1> 		pop		edx
   159 00000224 59                  <1> 		pop		ecx
   160 00000225 5B                  <1> 		pop		ebx
   161 00000226 58                  <1> 		pop		eax
   162                              <1> 
   163                              <1> 		;---------------------------------------
   164                              <1> 		; 【スタックフレームの破棄】
   165                              <1> 		;---------------------------------------
   166 00000227 89EC                <1> 		mov		esp, ebp
   167 00000229 5D                  <1> 		pop		ebp
   168                              <1> 
   169 0000022A C3                  <1> 		ret
   170                              <1> 
   171                              <1> %ifdef USE_TEST_AND_SET
   172                              <1> ALIGN 4, db 0
   173                              <1> IN_USE:	dd	0
   174                              <1> %endif
   175                              <1> 
    63                                  %include	"../modules/protect/draw_font.s"
    64                              <1> ;************************************************************************
    65                              <1> ;	フォント一覧を表示
    66                              <1> ;========================================================================
    67                              <1> ;■書式		: void draw_font(col, row);
    68                              <1> ;
    69                              <1> ;■引数
    70                              <1> ;	col		: 列
    71                              <1> ;	row		: 行
    72                              <1> ;
    73                              <1> ;■戻り値	: 無し
    74                              <1> ;************************************************************************
    75                              <1> draw_font:
    76                              <1> 		;---------------------------------------
    77                              <1> 		; 【スタックフレームの構築】
    78                              <1> 		;---------------------------------------
    79                              <1> 												; ------|--------
    80                              <1> 												; EBP+12| Y（行）
    81                              <1> 												; EBP+ 8| X（列）
    82                              <1> 												; ---------------
    83 0000022B 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
    84 0000022C 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
    85                              <1> 												; ---------------
    86                              <1> 
    87                              <1> 		;---------------------------------------
    88                              <1> 		; 【レジスタの保存】
    89                              <1> 		;---------------------------------------
    90 0000022E 50                  <1> 		push	eax
    91 0000022F 53                  <1> 		push	ebx
    92 00000230 51                  <1> 		push	ecx
    93 00000231 52                  <1> 		push	edx
    94 00000232 56                  <1> 		push	esi
    95 00000233 57                  <1> 		push	edi
    96                              <1> 
    97                              <1> 		;---------------------------------------
    98                              <1> 		; 表示位置
    99                              <1> 		;---------------------------------------
   100 00000234 8B7508              <1> 		mov		esi, [ebp + 8]					; ESI = X（列）
   101 00000237 8B7D0C              <1> 		mov		edi, [ebp +12]					; EDI = Y（行）
   102                              <1> 
   103                              <1> 		;---------------------------------------
   104                              <1> 		; フォント一覧を表示
   105                              <1> 		;---------------------------------------
   106 0000023A B900000000          <1> 		mov		ecx, 0							; for (ECX = 0;
   107 0000023F 81F900010000        <1> .10L:	cmp		ecx, 256						;      ECX < 256;
   108 00000245 731F                <1> 		jae		.10E							; 
   109                              <1> 												;      ECX++)
   110                              <1> 												; {
   111                              <1> 												;   // 桁位置の計算
   112 00000247 89C8                <1> 		mov		eax, ecx						;   EAX  = ECX;
   113 00000249 83E00F              <1> 		and		eax, 0x0F						;   EAX &= 0x0F
   114 0000024C 01F0                <1> 		add		eax, esi						;   EAX += X;
   115                              <1> 												;   
   116                              <1> 												;   // 行位置の計算
   117 0000024E 89CB                <1> 		mov		ebx, ecx						;   EBX  = ECX;
   118 00000250 C1EB04              <1> 		shr		ebx, 4							;   EBX /= 16
   119 00000253 01FB                <1> 		add		ebx, edi						;   EBX += Y;
   120                              <1> 
   121 00000255 516A075350E808FFFF- <1> 		cdecl	draw_char, eax, ebx, 0x07, ecx	;   draw_char();
   121 0000025E FF6683C410          <1>
   122                              <1> 
   123 00000263 41                  <1> 		inc		ecx								;   // for (... ECX++)
   124 00000264 EBD9                <1> 		jmp		.10L							; 
   125                              <1> .10E:											; }
   126                              <1> 
   127                              <1> 		;---------------------------------------
   128                              <1> 		; 【レジスタの復帰】
   129                              <1> 		;---------------------------------------
   130 00000266 5F                  <1> 		pop		edi
   131 00000267 5E                  <1> 		pop		esi
   132 00000268 5A                  <1> 		pop		edx
   133 00000269 59                  <1> 		pop		ecx
   134 0000026A 5B                  <1> 		pop		ebx
   135 0000026B 58                  <1> 		pop		eax
   136                              <1> 
   137                              <1> 		;---------------------------------------
   138                              <1> 		; 【スタックフレームの破棄】
   139                              <1> 		;---------------------------------------
   140 0000026C 89EC                <1> 		mov		esp, ebp
   141 0000026E 5D                  <1> 		pop		ebp
   142                              <1> 
   143 0000026F C3                  <1> 		ret
   144                              <1> 
    64                                  %include	"../modules/protect/draw_str.s"
    65                              <1> ;************************************************************************
    66                              <1> ;	文字列の表示
    67                              <1> ;========================================================================
    68                              <1> ;■書式		: void draw_str(col, row, color, p);
    69                              <1> ;
    70                              <1> ;■引数
    71                              <1> ;	col		: 列
    72                              <1> ;	row		: 行
    73                              <1> ;	color	: 描画色
    74                              <1> ;	p		: 文字列のアドレス
    75                              <1> ;
    76                              <1> ;■戻り値	: 無し
    77                              <1> ;************************************************************************
    78                              <1> draw_str:
    79                              <1> 		;---------------------------------------
    80                              <1> 		; 【スタックフレームの構築】
    81                              <1> 		;---------------------------------------
    82                              <1> 												; ------|--------
    83                              <1> 												; EBP+20| *p（文字列のアドレス）
    84                              <1> 												; EBP+16| color（色）
    85                              <1> 												; EBP+12| row（行）
    86                              <1> 												; EBP+ 8| col（列）
    87                              <1> 												; ---------------
    88 00000270 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
    89 00000271 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
    90                              <1> 												; ---------------
    91                              <1> 
    92                              <1> 		;---------------------------------------
    93                              <1> 		; 【レジスタの保存】
    94                              <1> 		;---------------------------------------
    95 00000273 50                  <1> 		push	eax
    96 00000274 53                  <1> 		push	ebx
    97 00000275 51                  <1> 		push	ecx
    98 00000276 52                  <1> 		push	edx
    99 00000277 56                  <1> 		push	esi
   100                              <1> 
   101                              <1> 		;---------------------------------------
   102                              <1> 		; 文字列の表示
   103                              <1> 		;---------------------------------------
   104 00000278 8B4D08              <1> 		mov		ecx, [ebp + 8]					; ECX = 列;
   105 0000027B 8B550C              <1> 		mov		edx, [ebp +12]					; EDX = 行;
   106 0000027E 0FB75D10            <1> 		movzx	ebx, word [ebp + 16]			; EBX = 表示色;
   107 00000282 8B7514              <1> 		mov		esi, [ebp +20]					; ESI = 文字列のアドレス;
   108                              <1> 
   109 00000285 FC                  <1> 		cld										; DF = 0; // アドレス加算
   110                              <1> .10L:											; do
   111                              <1> 												; {
   112 00000286 AC                  <1> 		lodsb									;   AL = *ESI++; // 文字を取得
   113 00000287 3C00                <1> 		cmp		al, 0							;   if (0 == AL)
   114 00000289 7425                <1> 		je		.10E							;     break;
   115                              <1> 
   116                              <1> 		;---------------------------------------
   117                              <1> 		; 1文字表示
   118                              <1> 		;---------------------------------------
   119                              <1> %ifdef	USE_SYSTEM_CALL
   120                              <1> 		int		0x81							;   sys_call(1, X, Y, 色, 文字);
   121                              <1> %else
   122 0000028B 50535251E8D3FEFFFF- <1> 		cdecl	draw_char, ecx, edx, ebx, eax	;   draw_char();
   122 00000294 6683C410            <1>
   123                              <1> %endif
   124                              <1> 
   125                              <1> 		; 次の文字の位置を調整
   126 00000298 41                  <1> 		inc		ecx								;   ECX++;           // 列を加算
   127 00000299 83F950              <1> 		cmp		ecx, 80							;   if (80 <= ECX)   // 80文字以上？
   128 0000029C 7C10                <1> 		jl		.12E							;   {
   129 0000029E B900000000          <1> 		mov		ecx, 0							;     ECX = 0;       // 列を初期化
   130 000002A3 42                  <1> 		inc		edx								;     EDX++;         // 行を加算
   131 000002A4 83FA1E              <1> 		cmp		edx, 30							;     if (30 <= EDX) // 30行以上？
   132 000002A7 7C05                <1> 		jl		.12E							;     {
   133 000002A9 BA00000000          <1> 		mov		edx, 0							;       EDX = 0;     // 行を初期化
   134                              <1> 												;     }
   135                              <1> .12E:											;   }
   136 000002AE EBD6                <1> 		jmp		.10L							;   
   137                              <1> .10E:											; } while (1);
   138                              <1> 
   139                              <1> 		;---------------------------------------
   140                              <1> 		; 【レジスタの復帰】
   141                              <1> 		;---------------------------------------
   142 000002B0 5E                  <1> 		pop		esi
   143 000002B1 5A                  <1> 		pop		edx
   144 000002B2 59                  <1> 		pop		ecx
   145 000002B3 5B                  <1> 		pop		ebx
   146 000002B4 58                  <1> 		pop		eax
   147                              <1> 
   148                              <1> 		;---------------------------------------
   149                              <1> 		; 【スタックフレームの破棄】
   150                              <1> 		;---------------------------------------
   151 000002B5 89EC                <1> 		mov		esp, ebp
   152 000002B7 5D                  <1> 		pop		ebp
   153                              <1> 
   154 000002B8 C3                  <1> 		ret
   155                              <1> 
    65                                  %include	"../modules/protect/draw_color_bar.s"
    66                              <1> ;************************************************************************
    67                              <1> ;	カラーバーの表示
    68                              <1> ;========================================================================
    69                              <1> ;■書式		: void draw_color_bar(col, row);
    70                              <1> ;
    71                              <1> ;■引数
    72                              <1> ;	col		: 列
    73                              <1> ;	row		: 行
    74                              <1> ;
    75                              <1> ;■戻り値	: 無し
    76                              <1> ;************************************************************************
    77                              <1> draw_color_bar:
    78                              <1> 		;---------------------------------------
    79                              <1> 		; 【スタックフレームの構築】
    80                              <1> 		;---------------------------------------
    81                              <1> 												; ------|--------
    82                              <1> 												; EBP+ 8| X（列）
    83                              <1> 												; EBP+12| Y（行）
    84                              <1> 												; ---------------
    85 000002B9 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
    86 000002BA 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
    87                              <1> 												; ---------------
    88                              <1> 		;---------------------------------------
    89                              <1> 		; 【レジスタの保存】
    90                              <1> 		;---------------------------------------
    91 000002BC 50                  <1> 		push	eax
    92 000002BD 53                  <1> 		push	ebx
    93 000002BE 51                  <1> 		push	ecx
    94 000002BF 52                  <1> 		push	edx
    95 000002C0 56                  <1> 		push	esi
    96 000002C1 57                  <1> 		push	edi
    97                              <1> 
    98                              <1> 		;---------------------------------------
    99                              <1> 		; 表示位置
   100                              <1> 		;---------------------------------------
   101 000002C2 8B7508              <1> 		mov		esi, [ebp + 8]					; ESI = X（列）
   102 000002C5 8B7D0C              <1> 		mov		edi, [ebp +12]					; EDI = Y（行）
   103                              <1> 
   104                              <1> 		;---------------------------------------
   105                              <1> 		; カラーバーを表示
   106                              <1> 		;---------------------------------------
   107 000002C8 B900000000          <1> 		mov		ecx, 0							; for (ECX = 0;
   108 000002CD 83F910              <1> .10L:	cmp		ecx, 16							;      ECX < 16;
   109 000002D0 732E                <1> 		jae		.10E							; 
   110                              <1> 												;      ECX++)
   111                              <1> 												; {
   112                              <1> 												;   // 桁位置の計算
   113 000002D2 89C8                <1> 		mov		eax, ecx						;   EAX  = ECX;
   114 000002D4 83E001              <1> 		and		eax, 0x01						;   EAX &= 0x01;
   115 000002D7 C1E003              <1> 		shl		eax, 3							;   EAX *= 8;  // 8文字分乗算
   116 000002DA 01F0                <1> 		add		eax, esi						;   EAX += X;
   117                              <1> 												;   
   118                              <1> 												;   // 行位置の計算
   119 000002DC 89CB                <1> 		mov		ebx, ecx						;   EBX  = ECX;
   120 000002DE D1EB                <1> 		shr		ebx, 1							;   EBX /= 2
   121 000002E0 01FB                <1> 		add		ebx, edi						;   EBX += Y;
   122                              <1> 												;   
   123                              <1> 												;   // 表示色の取得
   124 000002E2 89CA                <1> 		mov		edx, ecx						;   EDX  = ECX;
   125 000002E4 D1E2                <1> 		shl		edx, 1							;   EDX *= 2;
   126 000002E6 8B92[13030000]      <1> 		mov		edx, [.t0 + edx]				;   EDX += Y;
   127                              <1> 
   128 000002EC 68[0A030000]525350- <1> 		cdecl	draw_str, eax, ebx, edx, .s0	;   draw_str();
   128 000002F4 E877FFFFFF6683C410  <1>
   129                              <1> 
   130 000002FD 41                  <1> 		inc		ecx								;   // for (... ECX++)
   131 000002FE EBCD                <1> 		jmp		.10L							; 
   132                              <1> .10E:											; }
   133                              <1> 
   134                              <1> 		;---------------------------------------
   135                              <1> 		; 【レジスタの復帰】
   136                              <1> 		;---------------------------------------
   137 00000300 5F                  <1> 		pop		edi
   138 00000301 5E                  <1> 		pop		esi
   139 00000302 5A                  <1> 		pop		edx
   140 00000303 59                  <1> 		pop		ecx
   141 00000304 5B                  <1> 		pop		ebx
   142 00000305 58                  <1> 		pop		eax
   143                              <1> 
   144                              <1> 		;---------------------------------------
   145                              <1> 		; 【スタックフレームの破棄】
   146                              <1> 		;---------------------------------------
   147 00000306 89EC                <1> 		mov		esp, ebp
   148 00000308 5D                  <1> 		pop		ebp
   149                              <1> 
   150 00000309 C3                  <1> 		ret
   151                              <1> 
   152 0000030A 202020202020202000  <1> .s0:	db '        ', 0						; 8文字分のスペース（表示色だけを変更）
   153                              <1> 
   154 00000313 00000008            <1> .t0:	dw	0x0000, 0x0800						; カラーバーの背景色
   155 00000317 00010009            <1> 		dw	0x0100, 0x0900
   156 0000031B 0002000A            <1> 		dw	0x0200, 0x0A00
   157 0000031F 0003000B            <1> 		dw	0x0300, 0x0B00
   158 00000323 0004000C            <1> 		dw	0x0400, 0x0C00
   159 00000327 0005000D            <1> 		dw	0x0500, 0x0D00
   160 0000032B 0006000E            <1> 		dw	0x0600, 0x0E00
   161 0000032F 0007000F            <1> 		dw	0x0700, 0x0F00
   162                              <1> 
    66                                  %include	"../modules/protect/draw_pixel.s"
    67                              <1> ;************************************************************************
    68                              <1> ;	ピクセルの描画
    69                              <1> ;========================================================================
    70                              <1> ;■書式		: void draw_pixel(X, Y, color);
    71                              <1> ;
    72                              <1> ;■引数
    73                              <1> ;	X		: X座標
    74                              <1> ;	Y		: Y座標
    75                              <1> ;	color	: 描画色
    76                              <1> ;
    77                              <1> ;■戻り値	: 無し
    78                              <1> ;************************************************************************
    79                              <1> draw_pixel:
    80                              <1> 		;---------------------------------------
    81                              <1> 		; 【スタックフレームの構築】
    82                              <1> 		;---------------------------------------
    83                              <1> 												; ------|--------
    84                              <1> 												; EBP+16| 色
    85                              <1> 												; EBP+12| Y
    86                              <1> 												; EBP+ 8| X
    87                              <1> 												; ------|--------
    88 00000333 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
    89 00000334 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
    90                              <1> 												; ------+--------
    91                              <1> 		;---------------------------------------
    92                              <1> 		; 【レジスタの保存】
    93                              <1> 		;---------------------------------------
    94 00000336 50                  <1> 		push	eax
    95 00000337 53                  <1> 		push	ebx
    96 00000338 51                  <1> 		push	ecx
    97 00000339 57                  <1> 		push	edi
    98                              <1> 
    99                              <1> 		;---------------------------------------
   100                              <1> 		; Y座標を80倍する（640/8）
   101                              <1> 		;---------------------------------------
   102 0000033A 8B7D0C              <1> 		mov		edi, [ebp +12]					; EDI  = Y座標
   103 0000033D C1E704              <1> 		shl		edi, 4							; EDI *= 16;
   104 00000340 8DBCBF00000A00      <1> 		lea		edi, [edi * 4 + edi + 0xA_0000]	; EDI  = 0xA00000[EDI * 4 + EDI];
   105                              <1> 
   106                              <1> 		;---------------------------------------
   107                              <1> 		; X座標を1/8して加算
   108                              <1> 		;---------------------------------------
   109 00000347 8B5D08              <1> 		mov		ebx, [ebp + 8]					; EBX  = X座標;
   110 0000034A 89D9                <1> 		mov		ecx, ebx						; ECX  = X座標;（一時保存）
   111 0000034C C1EB03              <1> 		shr		ebx, 3							; EBX /= 8;
   112 0000034F 01DF                <1> 		add		edi, ebx						; EDI += EBX;
   113                              <1> 
   114                              <1> 		;---------------------------------------
   115                              <1> 		; X座標を8で割った余りからビット位置を計算
   116                              <1> 		; (0=0x80, 1=0x40,... 7=0x01)
   117                              <1> 		;---------------------------------------
   118 00000351 83E107              <1> 		and		ecx, 0x07						; ECX = X & 0x07;
   119 00000354 BB80000000          <1> 		mov		ebx, 0x80						; EBX = 0x80;
   120 00000359 D3EB                <1> 		shr		ebx, cl							; EBX >>= ECX;
   121                              <1> 
   122                              <1> 		;---------------------------------------
   123                              <1> 		; 色指定
   124                              <1> 		;---------------------------------------
   125 0000035B 8B4D10              <1> 		mov		ecx, [ebp +16]					; // 表示色
   126                              <1> 
   127                              <1> %ifdef	USE_TEST_AND_SET
   128                              <1> 		cdecl	test_and_set, IN_USE			; TEST_AND_SET(IN_USE); // リソースの空き待ち
   129                              <1> %endif
   130                              <1> 
   131                              <1> 		;---------------------------------------
   132                              <1> 		; プレーン毎に出力
   133                              <1> 		;---------------------------------------
   134 0000035E 6A03E84FFDFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x03		; // 輝度(I)プレーンを選択
   134 00000367 C404                <1>
   135 00000369 6A08E85DFDFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x08		; // 輝度(I)プレーンを選択
   135 00000372 C404                <1>
   136 00000374 516A085753E8BBFDFF- <1> 		cdecl	vram_bit_copy, ebx, edi, 0x08, ecx
   136 0000037D FF6683C410          <1>
   137                              <1> 
   138 00000382 6A02E82BFDFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x02		; // 赤(R)プレーンを選択
   138 0000038B C404                <1>
   139 0000038D 6A04E839FDFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x04		; // 赤(R)プレーンを選択
   139 00000396 C404                <1>
   140 00000398 516A045753E897FDFF- <1> 		cdecl	vram_bit_copy, ebx, edi, 0x04, ecx
   140 000003A1 FF6683C410          <1>
   141                              <1> 
   142 000003A6 6A01E807FDFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x01		; // 緑(G)プレーンを選択
   142 000003AF C404                <1>
   143 000003B1 6A02E815FDFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x02		; // 緑(G)プレーンを選択
   143 000003BA C404                <1>
   144 000003BC 516A025753E873FDFF- <1> 		cdecl	vram_bit_copy, ebx, edi, 0x02, ecx
   144 000003C5 FF6683C410          <1>
   145                              <1> 
   146 000003CA 6A00E8E3FCFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x00		; // 青(B)プレーンを選択
   146 000003D3 C404                <1>
   147 000003D5 6A01E8F1FCFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x01		; // 青(B)プレーンを選択
   147 000003DE C404                <1>
   148 000003E0 516A015753E84FFDFF- <1> 		cdecl	vram_bit_copy, ebx, edi, 0x01, ecx
   148 000003E9 FF6683C410          <1>
   149                              <1> 
   150                              <1> 
   151                              <1> %ifdef	USE_TEST_AND_SET
   152                              <1> 		;---------------------------------------
   153                              <1> 		; テストアンドセット
   154                              <1> 		;---------------------------------------
   155                              <1> 		mov		[IN_USE], dword 0				; 変数のクリア
   156                              <1> %endif
   157                              <1> 
   158                              <1> 		;---------------------------------------
   159                              <1> 		; 【レジスタの復帰】
   160                              <1> 		;---------------------------------------
   161 000003EE 5F                  <1> 		pop		edi
   162 000003EF 59                  <1> 		pop		ecx
   163 000003F0 5B                  <1> 		pop		ebx
   164 000003F1 58                  <1> 		pop		eax
   165                              <1> 
   166                              <1> 		;---------------------------------------
   167                              <1> 		; 【スタックフレームの破棄】
   168                              <1> 		;---------------------------------------
   169 000003F2 89EC                <1> 		mov		esp, ebp
   170 000003F4 5D                  <1> 		pop		ebp
   171                              <1> 
   172 000003F5 C3                  <1> 		ret
   173                              <1> 
    67                                  %include	"../modules/protect/draw_line.s"
    68                              <1> ;************************************************************************
    69                              <1> ;	直線の描画
    70                              <1> ;========================================================================
    71                              <1> ;■書式		: void draw_line(X0, Y0, X1, Y1, color);
    72                              <1> ;
    73                              <1> ;■引数
    74                              <1> ;	X0		: 始点のX座標
    75                              <1> ;	Y0		: 始点のY座標
    76                              <1> ;	X1		: 終点のX座標
    77                              <1> ;	Y1		: 終点のY座標
    78                              <1> ;	color	: 描画色
    79                              <1> ;
    80                              <1> ;■戻り値	: 無し
    81                              <1> ;************************************************************************
    82                              <1> draw_line:
    83                              <1> 		;---------------------------------------
    84                              <1> 		; 【スタックフレームの構築】
    85                              <1> 		;---------------------------------------
    86                              <1> 												; ---------------
    87                              <1> 												;    +24| 色
    88                              <1> 												;    +20| Y1
    89                              <1> 												;    +16| X1
    90                              <1> 												;    +12| Y0
    91                              <1> 												;    + 8| X0
    92                              <1> 												; ---------------
    93 000003F6 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
    94 000003F7 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
    95                              <1> 												; ---------------
    96 000003F9 6A00                <1> 		push	dword 0							;    - 4| sum   = 0; // 相対軸の積算値
    97 000003FB 6A00                <1> 		push	dword 0							;    - 8| x0    = 0; // X座標
    98 000003FD 6A00                <1> 		push	dword 0							;    -12| dx    = 0; // X増分
    99 000003FF 6A00                <1> 		push	dword 0							;    -16| inc_x = 0; // X座標増分(1 or -1)
   100 00000401 6A00                <1> 		push	dword 0							;    -20| y0    = 0; // Y座標
   101 00000403 6A00                <1> 		push	dword 0							;    -24| dy    = 0; // Y増分
   102 00000405 6A00                <1> 		push	dword 0							;    -28| inc_y = 0; // Y座標増分(1 or -1)
   103                              <1> 												; ------|--------
   104                              <1> 
   105                              <1> 		;---------------------------------------
   106                              <1> 		; 【レジスタの保存】
   107                              <1> 		;---------------------------------------
   108 00000407 50                  <1> 		push	eax
   109 00000408 53                  <1> 		push	ebx
   110 00000409 51                  <1> 		push	ecx
   111 0000040A 52                  <1> 		push	edx
   112 0000040B 56                  <1> 		push	esi
   113 0000040C 57                  <1> 		push	edi
   114                              <1> 
   115                              <1> 		;---------------------------------------
   116                              <1> 		; 幅を計算（X軸）
   117                              <1> 		;---------------------------------------
   118 0000040D 8B4508              <1> 		mov		eax, [ebp + 8]					; EAX = X0;
   119 00000410 8B5D10              <1> 		mov		ebx, [ebp +16]					; EBX = X1;
   120 00000413 29C3                <1> 		sub		ebx, eax						; EBX = X1 - X0; // 幅
   121 00000415 7D09                <1> 		jge		.10F							; if (幅 < 0)
   122                              <1> 												; {
   123 00000417 F7DB                <1> 		neg		ebx								;   幅   *= -1;
   124 00000419 BEFFFFFFFF          <1> 		mov		esi, -1							;   // X座標の増分
   125 0000041E EB05                <1> 		jmp		.10E							; }
   126                              <1> .10F:											; else
   127                              <1> 												; {
   128 00000420 BE01000000          <1> 		mov		esi, 1							;   // X座標の増分
   129                              <1> .10E:											; }
   130                              <1> 
   131                              <1> 		;---------------------------------------
   132                              <1> 		; 高さを計算（Y軸）
   133                              <1> 		;---------------------------------------
   134 00000425 8B4D0C              <1> 		mov		ecx, [ebp +12]					; ECX = Y0
   135 00000428 8B5514              <1> 		mov		edx, [ebp +20]					; EDX = Y1
   136 0000042B 29CA                <1> 		sub		edx, ecx						; EDX = Y1 - Y0; // 高さ
   137 0000042D 7D09                <1> 		jge		.20F							; if (高さ < 0)
   138                              <1> 												; {
   139 0000042F F7DA                <1> 		neg		edx								;   高さ *= -1;
   140 00000431 BFFFFFFFFF          <1> 		mov		edi, -1							;   // Y座標の増分
   141 00000436 EB05                <1> 		jmp		.20E							; }
   142                              <1> .20F:											; else
   143                              <1> 												; {
   144 00000438 BF01000000          <1> 		mov		edi, 1							;   // Y座標の増分
   145                              <1> .20E:											; }
   146                              <1> 
   147                              <1> 		;---------------------------------------
   148                              <1> 		; X軸
   149                              <1> 		;---------------------------------------
   150 0000043D 8945F8              <1> 		mov		[ebp - 8], eax					;   // X軸:開始座標
   151 00000440 895DF4              <1> 		mov		[ebp -12], ebx					;   // X軸:描画幅
   152 00000443 8975F0              <1> 		mov		[ebp -16], esi					;   // X軸:増分(基準軸：1 or -1)
   153                              <1> 
   154                              <1> 		;---------------------------------------
   155                              <1> 		; Y軸
   156                              <1> 		;---------------------------------------
   157 00000446 894DEC              <1> 		mov		[ebp -20], ecx					;   // Y軸:開始座標
   158 00000449 8955E8              <1> 		mov		[ebp -24], edx					;   // Y軸:描画幅
   159 0000044C 897DE4              <1> 		mov		[ebp -28], edi					;   // Y軸:増分(基準軸：1 or -1)
   160                              <1> 
   161                              <1> 		;---------------------------------------
   162                              <1> 		; 基準軸を決める
   163                              <1> 		;---------------------------------------
   164 0000044F 39D3                <1> 		cmp		ebx, edx						; if (幅 <= 高さ)
   165 00000451 7F08                <1> 		jg		.22F							; {
   166                              <1> 												;   
   167 00000453 8D75EC              <1> 		lea		esi, [ebp -20]					;   // Y軸が基準軸
   168 00000456 8D7DF8              <1> 		lea		edi, [ebp - 8]					;   // X軸が相対軸
   169                              <1> 												;   
   170 00000459 EB06                <1> 		jmp		.22E							; }
   171                              <1> .22F:											; else
   172                              <1> 												; {
   173 0000045B 8D75F8              <1> 		lea		esi, [ebp - 8]					;   // X軸が基準軸
   174 0000045E 8D7DEC              <1> 		lea		edi, [ebp -20]					;   // Y軸が相対軸
   175                              <1> .22E:											; }
   176                              <1> 
   177                              <1> 		;---------------------------------------
   178                              <1> 		; 繰り返し回数(基準軸のドット数)
   179                              <1> 		;---------------------------------------
   180 00000461 8B4EFC              <1> 		mov		ecx, [esi - 4]					; ECX = 基準軸描画幅;
   181 00000464 83F900              <1> 		cmp		ecx, 0							; if (0 == ECX)
   182 00000467 7505                <1> 		jnz		.30E							; {
   183 00000469 B901000000          <1> 		mov		ecx, 1							;   ECX = 1;
   184                              <1> .30E:											; }
   185                              <1> 
   186                              <1> 		;---------------------------------------
   187                              <1> 		; 線を描画
   188                              <1> 		;---------------------------------------
   189                              <1> .50L:											; do
   190                              <1> 												; {
   191                              <1> %ifdef	USE_SYSTEM_CALL
   192                              <1> 		mov		eax, ecx						;   // 繰り返し回数を保存
   193                              <1> 
   194                              <1> 		mov		ebx, [ebp +24]					;   EBX = 表示色;
   195                              <1> 		mov		ecx, [ebp - 8]					;   ECX = X座標;
   196                              <1> 		mov		edx, [ebp -20]					;   EDX = Y座標;
   197                              <1> 		int		0x82							;   sys_call(1, X, Y, 色, 文字); BX(C), CX(X), DX(Y)
   198                              <1> 
   199                              <1> 		mov		ecx, eax
   200                              <1> %else
   201 0000046E FF7518FF75ECFF75F8- <1> 		cdecl	draw_pixel, dword [ebp - 8], 							dword [ebp -20], 							dword [ebp +24]		;   // 点の描画
   201 00000477 E8B7FEFFFF6683C40C  <1>
   204                              <1> %endif
   205                              <1> 												;   // 基準軸を更新(1ドット分)
   206 00000480 8B46F8              <1> 		mov		eax, [esi - 8]					;   EAX = 基準軸増分(1 or -1);
   207 00000483 0106                <1> 		add		[esi - 0], eax					;   
   208                              <1> 
   209                              <1> 												;   // 相対軸を更新
   210 00000485 8B45FC              <1> 		mov		eax, [ebp - 4]					;   EAX  = sum; // 相対軸の積算値;
   211 00000488 0347FC              <1> 		add		eax, [edi - 4]					;   EAX += dy;  // 増分(相対軸の描画幅)
   212 0000048B 8B5EFC              <1> 		mov		ebx, [esi - 4]					;   EBX  = dx;  // 増分(基準軸の描画幅)
   213                              <1> 
   214 0000048E 39D8                <1> 		cmp		eax, ebx						;   if (積算値 <= 相対軸の増分)
   215 00000490 7C07                <1> 		jl		.52E							;   {
   216 00000492 29D8                <1> 		sub		eax, ebx						;     EAX -= EBX; // 積算値から相対軸の増分を減算
   217                              <1> 												;     
   218                              <1> 												;     // 相対軸の座標を更新(1ドット分)
   219 00000494 8B5FF8              <1> 		mov		ebx, [edi - 8]					;     EBX =  相対軸増分;
   220 00000497 011F                <1> 		add		[edi - 0], ebx					;     
   221                              <1> .52E:											;   }
   222 00000499 8945FC              <1> 		mov		[ebp - 4], eax					;   // 積算値を更新
   223                              <1> 												;   
   224 0000049C E2D0                <1> 		loop	.50L							;   
   225                              <1> .50E:											; } while (ループ回数--);
   226                              <1> 
   227                              <1> 		;---------------------------------------
   228                              <1> 		; 【レジスタの復帰】
   229                              <1> 		;---------------------------------------
   230 0000049E 5F                  <1> 		pop		edi
   231 0000049F 5E                  <1> 		pop		esi
   232 000004A0 5A                  <1> 		pop		edx
   233 000004A1 59                  <1> 		pop		ecx
   234 000004A2 5B                  <1> 		pop		ebx
   235 000004A3 58                  <1> 		pop		eax
   236                              <1> 
   237                              <1> 		;---------------------------------------
   238                              <1> 		; 【スタックフレームの破棄】
   239                              <1> 		;---------------------------------------
   240 000004A4 89EC                <1> 		mov		esp, ebp
   241 000004A6 5D                  <1> 		pop		ebp
   242                              <1> 
   243 000004A7 C3                  <1> 		ret
   244                              <1> 
    68                                  %include	"../modules/protect/draw_rect.s"
    69                              <1> ;************************************************************************
    70                              <1> ;	矩形の描画
    71                              <1> ;========================================================================
    72                              <1> ;■書式		: void draw_rect(X0, Y0, X1, Y1, color);
    73                              <1> ;
    74                              <1> ;■引数
    75                              <1> ;	X0		: 始点のX座標
    76                              <1> ;	Y0		: 始点のY座標
    77                              <1> ;	X1		: 終点のX座標
    78                              <1> ;	Y1		: 終点のY座標
    79                              <1> ;	color	: 描画色
    80                              <1> ;
    81                              <1> ;■戻り値	: 無し
    82                              <1> ;************************************************************************
    83                              <1> draw_rect:
    84                              <1> 		;---------------------------------------
    85                              <1> 		; 【スタックフレームの構築】
    86                              <1> 		;---------------------------------------
    87                              <1> 												; ------|--------
    88                              <1> 												; EBP+24| 色
    89                              <1> 												; EBP+20| Y1
    90                              <1> 												; EBP+16| X1
    91                              <1> 												; EBP+12| Y0
    92                              <1> 												; EBP+ 8| X0
    93                              <1> 												; ---------------
    94 000004A8 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
    95 000004A9 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
    96                              <1> 												; ------|--------
    97                              <1> 
    98                              <1> 		;---------------------------------------
    99                              <1> 		; 【レジスタの保存】
   100                              <1> 		;---------------------------------------
   101 000004AB 50                  <1> 		push		eax
   102 000004AC 53                  <1> 		push		ebx
   103 000004AD 51                  <1> 		push		ecx
   104 000004AE 52                  <1> 		push		edx
   105 000004AF 56                  <1> 		push		esi
   106                              <1> 
   107                              <1> 		;---------------------------------------
   108                              <1> 		; 矩形を描画
   109                              <1> 		;---------------------------------------
   110 000004B0 8B4508              <1> 		mov		eax, [ebp + 8]					; EAX = X0;
   111 000004B3 8B5D0C              <1> 		mov		ebx, [ebp +12]					; EBX = Y0;
   112 000004B6 8B4D10              <1> 		mov		ecx, [ebp +16]					; ECX = X1;
   113 000004B9 8B5514              <1> 		mov		edx, [ebp +20]					; EDX = Y1;
   114 000004BC 8B7518              <1> 		mov		esi, [ebp +24]					; ESI = 色;
   115                              <1> 
   116                              <1> 		;---------------------------------------
   117                              <1> 		; 座標軸の大小を確定
   118                              <1> 		;---------------------------------------
   119 000004BF 39C8                <1> 		cmp		eax, ecx						; if (X1 < X0)
   120 000004C1 7C01                <1> 		jl		.10E							; {
   121 000004C3 91                  <1> 		xchg	eax, ecx						;   X0とX1を入れ替える;
   122                              <1> .10E:											; }
   123                              <1> 
   124 000004C4 39D3                <1> 		cmp		ebx, edx						; if (Y1 < Y0)
   125 000004C6 7C02                <1> 		jl		.20E							; {
   126 000004C8 87DA                <1> 		xchg	ebx, edx						;   Y0とY1を入れ替える;
   127                              <1> .20E:											; }
   128                              <1> 
   129                              <1> 		;---------------------------------------
   130                              <1> 		; 矩形を描画
   131                              <1> 		;---------------------------------------
   132 000004CA 5653515350E822FFFF- <1> 		cdecl	draw_line, eax, ebx, ecx, ebx, esi	; 上線
   132 000004D3 FF6683C414          <1>
   133 000004D8 5652505350E814FFFF- <1> 		cdecl	draw_line, eax, ebx, eax, edx, esi	; 左線
   133 000004E1 FF6683C414          <1>
   134                              <1> 
   135 000004E6 4A                  <1> 		dec		edx									; EDX--; // 下線は1ドット上げる
   136 000004E7 5652515250E805FFFF- <1> 		cdecl	draw_line, eax, edx, ecx, edx, esi	; 下線
   136 000004F0 FF6683C414          <1>
   137 000004F5 42                  <1> 		inc		edx
   138                              <1> 
   139 000004F6 49                  <1> 		dec		ecx									; ECX--; // 右線は1ドット左に移動
   140 000004F7 5652515351E8F5FEFF- <1> 		cdecl	draw_line, ecx, ebx, ecx, edx, esi	; 右線
   140 00000500 FF6683C414          <1>
   141                              <1> 
   142                              <1> 		;---------------------------------------
   143                              <1> 		; 【レジスタの復帰】
   144                              <1> 		;---------------------------------------
   145 00000505 5E                  <1> 		pop		esi
   146 00000506 5A                  <1> 		pop		edx
   147 00000507 59                  <1> 		pop		ecx
   148 00000508 5B                  <1> 		pop		ebx
   149 00000509 58                  <1> 		pop		eax
   150                              <1> 
   151                              <1> 		;---------------------------------------
   152                              <1> 		; 【スタックフレームの破棄】
   153                              <1> 		;---------------------------------------
   154 0000050A 89EC                <1> 		mov		esp, ebp
   155 0000050C 5D                  <1> 		pop		ebp
   156                              <1> 
   157 0000050D C3                  <1> 		ret
    69                                  
    70                                  ;************************************************************************
    71                                  ;	パディング
    72                                  ;************************************************************************
    73 0000050E 00<rep 1AF2h>           		times KERNEL_SIZE - ($ - $$) db 0x00	; パディング
    74                                  
