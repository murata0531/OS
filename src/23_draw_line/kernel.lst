     1                                  ;************************************************************************
     2                                  ;
     3                                  ;	カーネル部
     4                                  ;
     5                                  ;************************************************************************
     6                                  
     7                                  ;************************************************************************
     8                                  ;	マクロ
     9                                  ;************************************************************************
    10                                  %include	"../include/define.s"
    11                              <1> ;************************************************************************
    12                              <1> ;	メモリイメージ
    13                              <1> ;************************************************************************
    14                              <1> 
    15                              <1> 		;---------------------------------------
    16                              <1> 		;           |            | 
    17                              <1> 		;           |____________| 
    18                              <1> 		; 0000_7A00 |            | ( 512) スタック
    19                              <1> 		;           |____________| 
    20                              <1> 		; 0000_7C00 |            | (  8K) ブート
    21                              <1> 		;           =            = 
    22                              <1> 		;           |____________| 
    23                              <1> 		; 0000_9C00 |            | (  8K) カーネル（一時展開）
    24                              <1> 		;           =            = 
    25                              <1> 		;           |____________| 
    26                              <1> 		; 0000_BC00 |////////////| 
    27                              <1> 		;           =            = 
    28                              <1> 		;           |____________| 
    29                              <1> 		; 0010_0000 |       (2K) | 割り込みディスクリプタテーブル
    30                              <1> 		;           |____________| 
    31                              <1> 		; 0010_0800 |       (2K) | カーネルスタック
    32                              <1> 		;           |____________| 
    33                              <1> 		; 0010_1000 |       (8K) | カーネルプログラム
    34                              <1> 		;           |            | 
    35                              <1> 		;           =            = 
    36                              <1> 		;           |____________| 
    37                              <1> 		; 0010_3000 |       (8K) | タスク用スタック
    38                              <1> 		;           |            | （各タスク1K）
    39                              <1> 		;           =            = 
    40                              <1> 		;           |____________| 
    41                              <1> 		; 0010_5000 |            | Dir
    42                              <1> 		;      6000 |____________| Page
    43                              <1> 		; 0010_7000 |            | Dir
    44                              <1> 		;      8000 |____________| Page
    45                              <1> 		; 0010_9000 |////////////| 
    46                              <1> 		;           |            | 
    47                              <1> 
    48                              <1> 
    49                              <1>         BOOT_SIZE			equ		(1024 * 8)		; ブートサイズ
    50                              <1> 		KERNEL_SIZE			equ		(1024 * 8)		; カーネルサイズ
    51                              <1> 
    52                              <1> 		BOOT_LOAD			equ		0x7C00			; ブートプログラムのロード位置
    53                              <1> 		BOOT_END			equ		(BOOT_LOAD + BOOT_SIZE)
    54                              <1> 
    55                              <1> 		KERNEL_LOAD			equ		0x0010_1000
    56                              <1> 
    57                              <1> 		SECT_SIZE			equ		(512)			; セクタサイズ
    58                              <1> 
    59                              <1> 		BOOT_SECT			equ		(BOOT_SIZE   / SECT_SIZE)	; ブートプログラムのセクタ数
    60                              <1> 		KERNEL_SECT			equ		(KERNEL_SIZE / SECT_SIZE)	; カーネルのセクタ数
    61                              <1> 
    62                              <1> 		E820_RECORD_SIZE	equ		20
    63                              <1> 
    64                              <1> 		VECT_BASE			equ		0x0010_0000		;	0010_0000:0010_07FF
    11                                  %include	"../include/macro.s"
    12                              <1> ;************************************************************************
    13                              <1> ; 関数呼び出し用マクロ
    14                              <1> ;
    15                              <1> ; 使い方：
    16                              <1> ;	cdecl	func [, param1[, param2[, ...]]]
    17                              <1> ;
    18                              <1> ;************************************************************************
    19                              <1> 
    20                              <1> %macro cdecl 1-*.nolist
    21                              <1> 
    22                              <1>     %rep %0 - 1
    23                              <1>         push    %{-1:-1}
    24                              <1>         %rotate -1
    25                              <1>     %endrep
    26                              <1>     %rotate -1
    27                              <1> 
    28                              <1>         call    %1
    29                              <1> 
    30                              <1>     %if 1 < %0
    31                              <1>         add     sp,(__BITS__ >> 3) * (%0 - 1)
    32                              <1>     %endif
    33                              <1> 
    34                              <1> %endmacro
    35                              <1> 
    36                              <1> ;************************************************************************
    37                              <1> ;	構造体
    38                              <1> ;************************************************************************
    39                              <1> 
    40                              <1> ;-----------------------------------------------
    41                              <1> ;	ドライブパラメータ
    42                              <1> ;-----------------------------------------------
    43                              <1> struc drive
    44 00000000 ????                <1> 		.no				resw	1				; ドライブ番号
    45 00000002 ????                <1> 		.cyln			resw	1				; C:シリンダ
    46 00000004 ????                <1> 		.head			resw	1				; H:ヘッド
    47 00000006 ????                <1> 		.sect			resw	1				; S:セクタ
    48                              <1> endstruc
    12                                  
    13                                  		ORG		KERNEL_LOAD						; カーネルのロードアドレス
    14                                  
    15                                  [BITS 32]
    16                                  ;************************************************************************
    17                                  ;	エントリポイント
    18                                  ;************************************************************************
    19                                  kernel:
    20                                  		;---------------------------------------
    21                                  		; フォントアドレスを取得
    22                                  		;---------------------------------------
    23 00000000 BE007E0000              		mov		esi, BOOT_LOAD + SECT_SIZE		; ESI   = 0x7C00 + 512
    24 00000005 0FB706                  		movzx	eax, word [esi + 0]				; EAX   = [ESI + 0] // セグメント
    25 00000008 0FB75E02                		movzx	ebx, word [esi + 2]				; EBX   = [ESI + 2] // オフセット
    26 0000000C C1E004                  		shl		eax, 4							; EAX <<= 4;
    27 0000000F 01D8                    		add		eax, ebx						; EAX  += EBX;
    28 00000011 A3[B4010000]            		mov		[FONT_ADR], eax					; FONT_ADR[0] = EAX;
    29                                  
    30                                  		;---------------------------------------
    31                                  		; フォントの一覧表示
    32                                  		;---------------------------------------
    33 00000016 6A0D6A3FE810030000-     		cdecl	draw_font, 63, 13				; // フォントの一覧表示
    33 0000001F 6683C408           
    34 00000023 6A046A3FE891030000-     		cdecl	draw_color_bar, 63, 4			; // カラーバーの表示
    34 0000002C 6683C408           
    35                                  
    36                                  		;---------------------------------------
    37                                  		; 文字列の表示
    38                                  		;---------------------------------------
    39 00000030 68[A3010000]680F01-     		cdecl	draw_str, 25, 14, 0x010F, .s0	; draw_str();
    39 00000038 00006A0E6A19E83103-
    39 00000041 00006683C410       
    40                                  
    41                                  		;---------------------------------------
    42                                  		; 線を描画
    43                                  		;---------------------------------------
    44 00000047 6A0F6A006A006A646A-     		cdecl	draw_line, 100, 100,   0,   0, 0x0F
    44 00000050 64E8A40400006683C4-
    44 00000059 14                 
    45 0000005A 6A0F6A0068C8000000-     		cdecl	draw_line, 100, 100, 200,   0, 0x0F
    45 00000063 6A646A64E88E040000-
    45 0000006C 6683C414           
    46 00000070 6A0F68C800000068C8-     		cdecl	draw_line, 100, 100, 200, 200, 0x0F
    46 00000079 0000006A646A64E875-
    46 00000082 0400006683C414     
    47 00000089 6A0F68C80000006A00-     		cdecl	draw_line, 100, 100,   0, 200, 0x0F
    47 00000092 6A646A64E85F040000-
    47 0000009B 6683C414           
    48                                  
    49 0000009F 6A026A006A326A646A-     		cdecl	draw_line, 100, 100,  50,   0, 0x02
    49 000000A8 64E84C0400006683C4-
    49 000000B1 14                 
    50 000000B2 6A036A006896000000-     		cdecl	draw_line, 100, 100, 150,   0, 0x03
    50 000000BB 6A646A64E836040000-
    50 000000C4 6683C414           
    51 000000C8 6A0468C80000006896-     		cdecl	draw_line, 100, 100, 150, 200, 0x04
    51 000000D1 0000006A646A64E81D-
    51 000000DA 0400006683C414     
    52 000000E1 6A0568C80000006A32-     		cdecl	draw_line, 100, 100,  50, 200, 0x05
    52 000000EA 6A646A64E807040000-
    52 000000F3 6683C414           
    53                                  
    54 000000F7 6A026A326A006A646A-     		cdecl	draw_line, 100, 100,   0,  50, 0x02
    54 00000100 64E8F40300006683C4-
    54 00000109 14                 
    55 0000010A 6A036A3268C8000000-     		cdecl	draw_line, 100, 100, 200,  50, 0x03
    55 00000113 6A646A64E8DE030000-
    55 0000011C 6683C414           
    56 00000120 6A04689600000068C8-     		cdecl	draw_line, 100, 100, 200, 150, 0x04
    56 00000129 0000006A646A64E8C5-
    56 00000132 0300006683C414     
    57 00000139 6A0568960000006A00-     		cdecl	draw_line, 100, 100,   0, 150, 0x05
    57 00000142 6A646A64E8AF030000-
    57 0000014B 6683C414           
    58                                  
    59 0000014F 6A0F6A006A646A646A-     		cdecl	draw_line, 100, 100, 100,   0, 0x0F
    59 00000158 64E89C0300006683C4-
    59 00000161 14                 
    60 00000162 6A0F6A6468C8000000-     		cdecl	draw_line, 100, 100, 200, 100, 0x0F
    60 0000016B 6A646A64E886030000-
    60 00000174 6683C414           
    61 00000178 6A0F68C80000006A64-     		cdecl	draw_line, 100, 100, 100, 200, 0x0F
    61 00000181 6A646A64E870030000-
    61 0000018A 6683C414           
    62 0000018E 6A0F6A646A006A646A-     		cdecl	draw_line, 100, 100,   0, 100, 0x0F
    62 00000197 64E85D0300006683C4-
    62 000001A0 14                 
    63                                  
    64                                  		;---------------------------------------
    65                                  		; 処理の終了
    66                                  		;---------------------------------------
    67 000001A1 EBFE                    		jmp		$								; while (1) ; // 無限ループ
    68                                  
    69 000001A3 2048656C6C6F2C206B-     .s0:	db	" Hello, kernel! ", 0
    69 000001AC 65726E656C212000   
    70                                  
    71                                  ALIGN 4, db 0
    72 000001B4 00000000                FONT_ADR:	dd	0
    73                                  
    74                                  ;************************************************************************
    75                                  ;	モジュール
    76                                  ;************************************************************************
    77                                  %include	"../modules/protect/vga.s"
    78                              <1> ;************************************************************************
    79                              <1> ;	読み込みプレーンの選択
    80                              <1> ;========================================================================
    81                              <1> ;■書式		: void vga_set_read_plane(plane);
    82                              <1> ;
    83                              <1> ;■引数
    84                              <1> ;	plane	: 読み込みプレーン
    85                              <1> ;
    86                              <1> ;■戻り値	: 無し
    87                              <1> ;************************************************************************
    88                              <1> vga_set_read_plane:
    89                              <1> 		;---------------------------------------
    90                              <1> 		; 【スタックフレームの構築】
    91                              <1> 		;---------------------------------------
    92                              <1> 												; EBP+ 8| プレーン（インデックス）
    93                              <1> 												; ------+----------------
    94 000001B8 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
    95 000001B9 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
    96                              <1> 												; ------+----------------
    97                              <1> 
    98                              <1> 		;---------------------------------------
    99                              <1> 		; 【レジスタの保存】
   100                              <1> 		;---------------------------------------
   101 000001BB 50                  <1> 		push	eax
   102 000001BC 52                  <1> 		push	edx
   103                              <1> 
   104                              <1> 		;---------------------------------------
   105                              <1> 		; 読み込みプレーンの選択
   106                              <1> 		;---------------------------------------
   107 000001BD 8A6508              <1> 		mov		ah, [ebp + 8]					; AH  = プレーンを選択（3=輝度, 2～0=RGB）
   108 000001C0 80E403              <1> 		and		ah, 0x03						; AH &= 0x03; // 余計なビットをマスク
   109 000001C3 B004                <1> 		mov		al, 0x04						; AL  = 読み込みプレーン選択レジスタ
   110 000001C5 66BACE03            <1> 		mov		dx, 0x03CE						; DX  = グラフィックス制御ポート
   111 000001C9 66EF                <1> 		out		dx, ax							; // ポート出力
   112                              <1> 
   113                              <1> 		;---------------------------------------
   114                              <1> 		; 【レジスタの復帰】
   115                              <1> 		;---------------------------------------
   116 000001CB 5A                  <1> 		pop		edx
   117 000001CC 58                  <1> 		pop		eax
   118                              <1> 
   119                              <1> 		;---------------------------------------
   120                              <1> 		; 【スタックフレームの破棄】
   121                              <1> 		;---------------------------------------
   122 000001CD 89EC                <1> 		mov		esp, ebp
   123 000001CF 5D                  <1> 		pop		ebp
   124                              <1> 
   125 000001D0 C3                  <1> 		ret
   126                              <1> 
   127                              <1> 
   128                              <1> ;************************************************************************
   129                              <1> ;	書き込みプレーンを選択
   130                              <1> ;========================================================================
   131                              <1> ;■書式		: void vga_set_write_plane(plane);
   132                              <1> ;
   133                              <1> ;■引数
   134                              <1> ;	plane	: 書き込みプレーン
   135                              <1> ;
   136                              <1> ;■戻り値	: 無し
   137                              <1> ;************************************************************************
   138                              <1> vga_set_write_plane:
   139                              <1> 		;---------------------------------------
   140                              <1> 		; 【スタックフレームの構築】
   141                              <1> 		;---------------------------------------
   142                              <1> 												; EBP+ 8| プレーン（ビット指定）
   143                              <1> 												; ------+----------------
   144 000001D1 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
   145 000001D2 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
   146                              <1> 												; ------+----------------
   147                              <1> 
   148                              <1> 		;---------------------------------------
   149                              <1> 		; 【レジスタの保存】
   150                              <1> 		;---------------------------------------
   151 000001D4 50                  <1> 		push	eax
   152 000001D5 52                  <1> 		push	edx
   153                              <1> 
   154                              <1> 		;---------------------------------------
   155                              <1> 		; 書き込みプレーンの選択
   156                              <1> 		;---------------------------------------
   157 000001D6 8A6508              <1> 		mov		ah, [ebp + 8]					; AH = 書き込みプレーンを指定(Bit:----IRGB)
   158 000001D9 80E40F              <1> 		and		ah, 0x0F						; AH = 0x0F; // 余計なビットをマスク
   159 000001DC B002                <1> 		mov		al, 0x02						; AL = 書き込みプレーン選択
   160 000001DE 66BAC403            <1> 		mov		dx, 0x03C4						; DX = シーケンサ制御ポート
   161 000001E2 66EF                <1> 		out		dx, ax							; // ポート出力
   162                              <1> 
   163                              <1> 		;---------------------------------------
   164                              <1> 		; 【レジスタの復帰】
   165                              <1> 		;---------------------------------------
   166 000001E4 5A                  <1> 		pop		edx
   167 000001E5 58                  <1> 		pop		eax
   168                              <1> 
   169                              <1> 		;---------------------------------------
   170                              <1> 		; 【スタックフレームの破棄】
   171                              <1> 		;---------------------------------------
   172 000001E6 89EC                <1> 		mov		esp, ebp
   173 000001E8 5D                  <1> 		pop		ebp
   174                              <1> 
   175 000001E9 C3                  <1> 		ret
   176                              <1> 
   177                              <1> 
   178                              <1> ;************************************************************************
   179                              <1> ;	フォントの書き込み
   180                              <1> ;========================================================================
   181                              <1> ;■書式		: void vram_font_copy(font, vram, plane, color);
   182                              <1> ;
   183                              <1> ;■引数
   184                              <1> ;	font	: FONTアドレス
   185                              <1> ;	vram	: VRAMアドレス
   186                              <1> ;	plane	: 出力プレーン（１つのプレーンのみをビットで指定）
   187                              <1> ;	color	: 描画色
   188                              <1> ;
   189                              <1> ;■戻り値	: 無し
   190                              <1> ;************************************************************************
   191                              <1> vram_font_copy:
   192                              <1> 		;---------------------------------------
   193                              <1> 		; 【スタックフレームの構築】
   194                              <1> 		;---------------------------------------
   195                              <1> 												; EBP+20| 色（背景/前景色）
   196                              <1> 												; EBP+16| プレーン（ビット指定）
   197                              <1> 												; EBP+12| VRAMアドレス
   198                              <1> 												; EBP+ 8| FONTアドレス
   199                              <1> 												; ------+----------------
   200 000001EA 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
   201 000001EB 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
   202                              <1> 												; ------+----------------
   203                              <1> 
   204                              <1> 		;---------------------------------------
   205                              <1> 		; 【レジスタの保存】
   206                              <1> 		;---------------------------------------
   207 000001ED 50                  <1> 		push	eax
   208 000001EE 53                  <1> 		push	ebx
   209 000001EF 51                  <1> 		push	ecx
   210 000001F0 52                  <1> 		push	edx
   211 000001F1 56                  <1> 		push	esi
   212 000001F2 57                  <1> 		push	edi
   213                              <1> 
   214                              <1> 		;---------------------------------------
   215                              <1> 		; 【処理の開始】
   216                              <1> 		;---------------------------------------
   217 000001F3 8B7508              <1> 		mov		esi, [ebp + 8]					; ESI = フォントアドレス;
   218 000001F6 8B7D0C              <1> 		mov		edi, [ebp +12]					; EDI = VRAMアドレス;
   219 000001F9 0FB64510            <1> 		movzx	eax, byte [ebp +16]				; EAX = プレーン（ビット指定）;
   220 000001FD 0FB75D14            <1> 		movzx	ebx, word [ebp +20]				; EBX = 色;
   221                              <1> 
   222 00000201 84C7                <1> 		test	bh, al							; ZF = (背景色 & プレーン);
   223 00000203 0F94C6              <1> 		setz	dh								; AH = ZF ? 0x01 : 0x00
   224 00000206 FECE                <1> 		dec		dh								; AH--; // 0x00 or 0xFF
   225                              <1> 
   226 00000208 84C3                <1> 		test	bl, al							; ZF = (前景色 & プレーン);
   227 0000020A 0F94C2              <1> 		setz	dl								; AL = ZF ? 0x01 : 0x00
   228 0000020D FECA                <1> 		dec		dl								; AL--; // 0x00 or 0xFF
   229                              <1> 
   230                              <1> 		;---------------------------------------
   231                              <1> 		; 16ドットフォントのコピー
   232                              <1> 		;---------------------------------------
   233 0000020F FC                  <1> 		cld										; DF  = 0; // アドレス加算
   234                              <1> 
   235 00000210 B910000000          <1> 		mov		ecx, 16							; ECX = 16; // 16ドット
   236                              <1> .10L:											; do
   237                              <1> 												; {
   238                              <1> 		;---------------------------------------
   239                              <1> 		; フォントマスクの作成
   240                              <1> 		;---------------------------------------
   241 00000215 AC                  <1> 		lodsb									;   AL  = *ESI++; //  フォント
   242 00000216 88C4                <1> 		mov		ah, al							;   AH ~= AL;     // !フォント（ビット反転）
   243 00000218 F6D4                <1> 		not		ah								;   
   244                              <1> 
   245                              <1> 		;---------------------------------------
   246                              <1> 		; 前景色
   247                              <1> 		;---------------------------------------
   248 0000021A 20D0                <1> 		and		al, dl							;   AL = 前景色 & フォント;
   249                              <1> 
   250                              <1> 		;---------------------------------------
   251                              <1> 		; 背景色
   252                              <1> 		;---------------------------------------
   253 0000021C F7C310000000        <1> 		test	ebx, 0x0010						;   if (透過モード)
   254 00000222 7404                <1> 		jz		.11F							;   {
   255 00000224 2227                <1> 		and		ah, [edi]						;     AH = !フォント & [EDI] // 現在値
   256 00000226 EB02                <1> 		jmp		.11E							;   }
   257                              <1> .11F:											;   else
   258                              <1> 												;   {
   259 00000228 20F4                <1> 		and		ah, dh							;     AH = !フォント & 背景色;
   260                              <1> .11E:											;   }
   261                              <1> 
   262                              <1> 		;---------------------------------------
   263                              <1> 		; 前景色と背景色を合成
   264                              <1> 		;---------------------------------------
   265 0000022A 08E0                <1> 		or		al, ah							;   AL  = 背景 | 前景;
   266                              <1> 
   267                              <1> 		;---------------------------------------
   268                              <1> 		; 新しい値を出力
   269                              <1> 		;---------------------------------------
   270 0000022C 8807                <1> 		mov		[edi], al						;   [EDI] = AL; // プレーンに書き込む
   271                              <1> 
   272 0000022E 83C750              <1> 		add		edi, 80							;   EDI += 80;
   273 00000231 E2E2                <1> 		loop	.10L							; } while (--ECX);
   274                              <1> .10E:											; 
   275                              <1> 
   276                              <1> 		;---------------------------------------
   277                              <1> 		; 【レジスタの復帰】
   278                              <1> 		;---------------------------------------
   279 00000233 5F                  <1> 		pop		edi
   280 00000234 5E                  <1> 		pop		esi
   281 00000235 5A                  <1> 		pop		edx
   282 00000236 59                  <1> 		pop		ecx
   283 00000237 5B                  <1> 		pop		ebx
   284 00000238 58                  <1> 		pop		eax
   285                              <1> 
   286                              <1> 		;---------------------------------------
   287                              <1> 		; 【スタックフレームの破棄】
   288                              <1> 		;---------------------------------------
   289 00000239 89EC                <1> 		mov		esp, ebp
   290 0000023B 5D                  <1> 		pop		ebp
   291                              <1> 
   292 0000023C C3                  <1> 		ret
   293                              <1> 
   294                              <1> 
   295                              <1> ;************************************************************************
   296                              <1> ;	ビットパターンの書き込み
   297                              <1> ;========================================================================
   298                              <1> ;■書式		: void vram_bit_copy(bit, vram, flag);
   299                              <1> ;
   300                              <1> ;■引数
   301                              <1> ;	bit		: 出力ビットパターン
   302                              <1> ;	vram	: VRAMアドレス
   303                              <1> ;	flag	: 1:セット, 0:クリア
   304                              <1> ;
   305                              <1> ;■戻り値	: 無し
   306                              <1> ;************************************************************************
   307                              <1> vram_bit_copy:
   308                              <1> 		;---------------------------------------
   309                              <1> 		; 【スタックフレームの構築】
   310                              <1> 		;---------------------------------------
   311                              <1> 												; EBP+20| 色（背景/前景色）
   312                              <1> 												; EBP+16| プレーン（ビット指定）
   313                              <1> 												; EBP+12| VRAMアドレス
   314                              <1> 												; EBP+ 8| 出力ビットパターン
   315                              <1> 												; ------+----------------
   316 0000023D 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
   317 0000023E 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
   318                              <1> 												; ------+----------------
   319                              <1> 
   320                              <1> 		;---------------------------------------
   321                              <1> 		; 【レジスタの保存】
   322                              <1> 		;---------------------------------------
   323 00000240 50                  <1> 		push	eax
   324 00000241 53                  <1> 		push	ebx
   325 00000242 57                  <1> 		push	edi
   326                              <1> 
   327                              <1> 		;---------------------------------------
   328                              <1> 		; 【処理の開始】
   329                              <1> 		;---------------------------------------
   330 00000243 8B7D0C              <1> 		mov		edi, [ebp +12]					; EDI = VRAMアドレス;
   331 00000246 0FB64510            <1> 		movzx	eax, byte [ebp +16]				; EAX = プレーン（ビット指定）;
   332 0000024A 0FB75D14            <1> 		movzx	ebx, word [ebp +20]				; EBX = 表示色;
   333                              <1> 
   334 0000024E 84C3                <1> 		test	bl, al							; ZF = (前景色 & プレーン);
   335 00000250 0F94C3              <1> 		setz	bl								; BL = ZF ? 0x01 : 0x00
   336 00000253 FECB                <1> 		dec		bl								; BL--; // 0x00 or 0xFF
   337                              <1> 
   338                              <1> 		;---------------------------------------
   339                              <1> 		; マスクデータの作成
   340                              <1> 		;---------------------------------------
   341 00000255 8A4508              <1> 		mov		al, [ebp + 8]					; AL = 出力ビットパターン;
   342 00000258 88C4                <1> 		mov		ah, al							; AH ~= AL;     // !出力ビットパターン（ビット反転）
   343 0000025A F6D4                <1> 		not		ah								; 
   344                              <1> 
   345                              <1> 		;---------------------------------------
   346                              <1> 		; 現在値の出力を取得
   347                              <1> 		;---------------------------------------
   348 0000025C 2227                <1> 		and		ah, [edi]						; AH  = 現在値 & !出力ビットパターン
   349 0000025E 20D8                <1> 		and		al, bl							; AL  = 表示色 &  出力ビットパターン
   350 00000260 08E0                <1> 		or		al, ah							; AL |= AH;
   351                              <1> 
   352                              <1> 		;---------------------------------------
   353                              <1> 		; 新しい値を出力
   354                              <1> 		;---------------------------------------
   355 00000262 8807                <1> 		mov		[edi], al						; [EDI] = BL; // プレーンに書き込む
   356                              <1> 
   357                              <1> 		;---------------------------------------
   358                              <1> 		; 【レジスタの復帰】
   359                              <1> 		;---------------------------------------
   360 00000264 5F                  <1> 		pop		edi
   361 00000265 5B                  <1> 		pop		ebx
   362 00000266 58                  <1> 		pop		eax
   363                              <1> 
   364                              <1> 		;---------------------------------------
   365                              <1> 		; 【スタックフレームの破棄】
   366                              <1> 		;---------------------------------------
   367 00000267 89EC                <1> 		mov		esp, ebp
   368 00000269 5D                  <1> 		pop		ebp
   369                              <1> 
   370 0000026A C3                  <1> 		ret
    78                                  %include	"../modules/protect/draw_char.s"
    79                              <1> ;************************************************************************
    80                              <1> ;	文字の表示
    81                              <1> ;------------------------------------------------------------------------
    82                              <1> ;	グラフィックスモードでテキストを表示
    83                              <1> ;========================================================================
    84                              <1> ;■書式		: void draw_char(col, row, color, ch);
    85                              <1> ;
    86                              <1> ;■引数
    87                              <1> ;	col		: 列（0～79）
    88                              <1> ;	row		: 行（0～29）
    89                              <1> ;	color	: 描画色
    90                              <1> ;	ch		: 文字
    91                              <1> ;
    92                              <1> ;■戻り値	: 無し
    93                              <1> ;************************************************************************
    94                              <1> draw_char:
    95                              <1> 		;---------------------------------------
    96                              <1> 		; 【スタックフレームの構築】
    97                              <1> 		;---------------------------------------
    98                              <1> 												; ------|--------
    99                              <1> 												; EBP+20| 文字
   100                              <1> 												; EBP+16| 色
   101                              <1> 												; EBP+12| Y（行）
   102                              <1> 												; EBP+ 8| X（列）
   103                              <1> 												; ------+----------------
   104 0000026B 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
   105 0000026C 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
   106                              <1> 												; ------+----------------
   107                              <1> 
   108                              <1> 		;---------------------------------------
   109                              <1> 		; 【レジスタの保存】
   110                              <1> 		;---------------------------------------
   111 0000026E 50                  <1> 		push	eax
   112 0000026F 53                  <1> 		push	ebx
   113 00000270 51                  <1> 		push	ecx
   114 00000271 52                  <1> 		push	edx
   115 00000272 56                  <1> 		push	esi
   116 00000273 57                  <1> 		push	edi
   117                              <1> 
   118                              <1> 		;---------------------------------------
   119                              <1> 		; テストアンドセット
   120                              <1> 		;---------------------------------------
   121                              <1> %ifdef	USE_TEST_AND_SET
   122                              <1> 		cdecl	test_and_set, IN_USE			; TEST_AND_SET(IN_USE); // リソースの空き待ち
   123                              <1> %endif
   124                              <1> 
   125                              <1> 		;---------------------------------------
   126                              <1> 		; コピー元フォントアドレスを設定
   127                              <1> 		;---------------------------------------
   128 00000274 0FB67514            <1> 		movzx	esi, byte [ebp +20]				; CL  = 文字コード;
   129 00000278 C1E604              <1> 		shl		esi, 4							; CL *= 16; // 1文字16バイト
   130 0000027B 0335[B4010000]      <1> 		add		esi, [FONT_ADR]					; ESI = フォントアドレス;
   131                              <1> 
   132                              <1> 		;---------------------------------------
   133                              <1> 		; コピー先アドレスを取得
   134                              <1> 		; Adr = 0xA0000 + (640 / 8 * 16) * y + x
   135                              <1> 		;---------------------------------------
   136 00000281 8B7D0C              <1> 		mov		edi, [ebp +12]					; Y（行）
   137 00000284 C1E708              <1> 		shl		edi, 8							; EDI = Y * 256;
   138 00000287 8DBCBF00000A00      <1> 		lea		edi, [edi * 4 + edi + 0xA0000]	; EDI = Y *   4 + Y;
   139 0000028E 037D08              <1> 		add		edi, [ebp + 8]					; X（列）
   140                              <1> 
   141                              <1> 		;---------------------------------------
   142                              <1> 		; 1文字分のフォントを出力
   143                              <1> 		;---------------------------------------
   144 00000291 0FB75D10            <1> 		movzx	ebx, word [ebp +16]				; // 表示色
   145                              <1> 
   146 00000295 6A03E81CFFFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x03		; // 読み込みプレーン：輝度(I)
   146 0000029E C404                <1>
   147 000002A0 6A08E82AFFFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x08		; // 書き込みプレーン：輝度(I)
   147 000002A9 C404                <1>
   148 000002AB 536A085756E835FFFF- <1> 		cdecl	vram_font_copy, esi, edi, 0x08, ebx
   148 000002B4 FF6683C410          <1>
   149                              <1> 
   150 000002B9 6A02E8F8FEFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x02		; // 読み込みプレーン：赤(R)
   150 000002C2 C404                <1>
   151 000002C4 6A04E806FFFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x04		; // 書き込みプレーン：赤(R)
   151 000002CD C404                <1>
   152 000002CF 536A045756E811FFFF- <1> 		cdecl	vram_font_copy, esi, edi, 0x04, ebx
   152 000002D8 FF6683C410          <1>
   153                              <1> 
   154 000002DD 6A01E8D4FEFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x01		; // 読み込みプレーン：緑(G)
   154 000002E6 C404                <1>
   155 000002E8 6A02E8E2FEFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x02		; // 書き込みプレーン：緑(G)
   155 000002F1 C404                <1>
   156 000002F3 536A025756E8EDFEFF- <1> 		cdecl	vram_font_copy, esi, edi, 0x02, ebx
   156 000002FC FF6683C410          <1>
   157                              <1> 
   158 00000301 6A00E8B0FEFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x00		; // 読み込みプレーン：青(B)
   158 0000030A C404                <1>
   159 0000030C 6A01E8BEFEFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x01		; // 書き込みプレーン：青(B)
   159 00000315 C404                <1>
   160 00000317 536A015756E8C9FEFF- <1> 		cdecl	vram_font_copy, esi, edi, 0x01, ebx
   160 00000320 FF6683C410          <1>
   161                              <1> 
   162                              <1> %ifdef	USE_TEST_AND_SET
   163                              <1> 		;---------------------------------------
   164                              <1> 		; テストアンドセット
   165                              <1> 		;---------------------------------------
   166                              <1> 		mov		[IN_USE], dword 0				; 変数のクリア
   167                              <1> %endif
   168                              <1> 
   169                              <1> 		;---------------------------------------
   170                              <1> 		; 【レジスタの復帰】
   171                              <1> 		;---------------------------------------
   172 00000325 5F                  <1> 		pop		edi
   173 00000326 5E                  <1> 		pop		esi
   174 00000327 5A                  <1> 		pop		edx
   175 00000328 59                  <1> 		pop		ecx
   176 00000329 5B                  <1> 		pop		ebx
   177 0000032A 58                  <1> 		pop		eax
   178                              <1> 
   179                              <1> 		;---------------------------------------
   180                              <1> 		; 【スタックフレームの破棄】
   181                              <1> 		;---------------------------------------
   182 0000032B 89EC                <1> 		mov		esp, ebp
   183 0000032D 5D                  <1> 		pop		ebp
   184                              <1> 
   185 0000032E C3                  <1> 		ret
   186                              <1> 
   187                              <1> %ifdef USE_TEST_AND_SET
   188                              <1> ALIGN 4, db 0
   189                              <1> IN_USE:	dd	0
   190                              <1> %endif
   191                              <1> 
    79                                  %include	"../modules/protect/draw_font.s"
    80                              <1> ;************************************************************************
    81                              <1> ;	フォント一覧を表示
    82                              <1> ;========================================================================
    83                              <1> ;■書式		: void draw_font(col, row);
    84                              <1> ;
    85                              <1> ;■引数
    86                              <1> ;	col		: 列
    87                              <1> ;	row		: 行
    88                              <1> ;
    89                              <1> ;■戻り値	: 無し
    90                              <1> ;************************************************************************
    91                              <1> draw_font:
    92                              <1> 		;---------------------------------------
    93                              <1> 		; 【スタックフレームの構築】
    94                              <1> 		;---------------------------------------
    95                              <1> 												; ------|--------
    96                              <1> 												; EBP+12| Y（行）
    97                              <1> 												; EBP+ 8| X（列）
    98                              <1> 												; ---------------
    99 0000032F 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
   100 00000330 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
   101                              <1> 												; ---------------
   102                              <1> 
   103                              <1> 		;---------------------------------------
   104                              <1> 		; 【レジスタの保存】
   105                              <1> 		;---------------------------------------
   106 00000332 50                  <1> 		push	eax
   107 00000333 53                  <1> 		push	ebx
   108 00000334 51                  <1> 		push	ecx
   109 00000335 52                  <1> 		push	edx
   110 00000336 56                  <1> 		push	esi
   111 00000337 57                  <1> 		push	edi
   112                              <1> 
   113                              <1> 		;---------------------------------------
   114                              <1> 		; 表示位置
   115                              <1> 		;---------------------------------------
   116 00000338 8B7508              <1> 		mov		esi, [ebp + 8]					; ESI = X（列）
   117 0000033B 8B7D0C              <1> 		mov		edi, [ebp +12]					; EDI = Y（行）
   118                              <1> 
   119                              <1> 		;---------------------------------------
   120                              <1> 		; フォント一覧を表示
   121                              <1> 		;---------------------------------------
   122 0000033E B900000000          <1> 		mov		ecx, 0							; for (ECX = 0;
   123 00000343 81F900010000        <1> .10L:	cmp		ecx, 256						;      ECX < 256;
   124 00000349 731F                <1> 		jae		.10E							; 
   125                              <1> 												;      ECX++)
   126                              <1> 												; {
   127                              <1> 												;   // 桁位置の計算
   128 0000034B 89C8                <1> 		mov		eax, ecx						;   EAX  = ECX;
   129 0000034D 83E00F              <1> 		and		eax, 0x0F						;   EAX &= 0x0F
   130 00000350 01F0                <1> 		add		eax, esi						;   EAX += X;
   131                              <1> 												;   
   132                              <1> 												;   // 行位置の計算
   133 00000352 89CB                <1> 		mov		ebx, ecx						;   EBX  = ECX;
   134 00000354 C1EB04              <1> 		shr		ebx, 4							;   EBX /= 16
   135 00000357 01FB                <1> 		add		ebx, edi						;   EBX += Y;
   136                              <1> 
   137 00000359 516A075350E808FFFF- <1> 		cdecl	draw_char, eax, ebx, 0x07, ecx	;   draw_char();
   137 00000362 FF6683C410          <1>
   138                              <1> 
   139 00000367 41                  <1> 		inc		ecx								;   // for (... ECX++)
   140 00000368 EBD9                <1> 		jmp		.10L							; 
   141                              <1> .10E:											; }
   142                              <1> 
   143                              <1> 		;---------------------------------------
   144                              <1> 		; 【レジスタの復帰】
   145                              <1> 		;---------------------------------------
   146 0000036A 5F                  <1> 		pop		edi
   147 0000036B 5E                  <1> 		pop		esi
   148 0000036C 5A                  <1> 		pop		edx
   149 0000036D 59                  <1> 		pop		ecx
   150 0000036E 5B                  <1> 		pop		ebx
   151 0000036F 58                  <1> 		pop		eax
   152                              <1> 
   153                              <1> 		;---------------------------------------
   154                              <1> 		; 【スタックフレームの破棄】
   155                              <1> 		;---------------------------------------
   156 00000370 89EC                <1> 		mov		esp, ebp
   157 00000372 5D                  <1> 		pop		ebp
   158                              <1> 
   159 00000373 C3                  <1> 		ret
   160                              <1> 
    80                                  %include	"../modules/protect/draw_str.s"
    81                              <1> ;************************************************************************
    82                              <1> ;	文字列の表示
    83                              <1> ;========================================================================
    84                              <1> ;■書式		: void draw_str(col, row, color, p);
    85                              <1> ;
    86                              <1> ;■引数
    87                              <1> ;	col		: 列
    88                              <1> ;	row		: 行
    89                              <1> ;	color	: 描画色
    90                              <1> ;	p		: 文字列のアドレス
    91                              <1> ;
    92                              <1> ;■戻り値	: 無し
    93                              <1> ;************************************************************************
    94                              <1> draw_str:
    95                              <1> 		;---------------------------------------
    96                              <1> 		; 【スタックフレームの構築】
    97                              <1> 		;---------------------------------------
    98                              <1> 												; ------|--------
    99                              <1> 												; EBP+20| *p（文字列のアドレス）
   100                              <1> 												; EBP+16| color（色）
   101                              <1> 												; EBP+12| row（行）
   102                              <1> 												; EBP+ 8| col（列）
   103                              <1> 												; ---------------
   104 00000374 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
   105 00000375 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
   106                              <1> 												; ---------------
   107                              <1> 
   108                              <1> 		;---------------------------------------
   109                              <1> 		; 【レジスタの保存】
   110                              <1> 		;---------------------------------------
   111 00000377 50                  <1> 		push	eax
   112 00000378 53                  <1> 		push	ebx
   113 00000379 51                  <1> 		push	ecx
   114 0000037A 52                  <1> 		push	edx
   115 0000037B 56                  <1> 		push	esi
   116                              <1> 
   117                              <1> 		;---------------------------------------
   118                              <1> 		; 文字列の表示
   119                              <1> 		;---------------------------------------
   120 0000037C 8B4D08              <1> 		mov		ecx, [ebp + 8]					; ECX = 列;
   121 0000037F 8B550C              <1> 		mov		edx, [ebp +12]					; EDX = 行;
   122 00000382 0FB75D10            <1> 		movzx	ebx, word [ebp + 16]			; EBX = 表示色;
   123 00000386 8B7514              <1> 		mov		esi, [ebp +20]					; ESI = 文字列のアドレス;
   124                              <1> 
   125 00000389 FC                  <1> 		cld										; DF = 0; // アドレス加算
   126                              <1> .10L:											; do
   127                              <1> 												; {
   128 0000038A AC                  <1> 		lodsb									;   AL = *ESI++; // 文字を取得
   129 0000038B 3C00                <1> 		cmp		al, 0							;   if (0 == AL)
   130 0000038D 7425                <1> 		je		.10E							;     break;
   131                              <1> 
   132                              <1> 		;---------------------------------------
   133                              <1> 		; 1文字表示
   134                              <1> 		;---------------------------------------
   135                              <1> %ifdef	USE_SYSTEM_CALL
   136                              <1> 		int		0x81							;   sys_call(1, X, Y, 色, 文字);
   137                              <1> %else
   138 0000038F 50535251E8D3FEFFFF- <1> 		cdecl	draw_char, ecx, edx, ebx, eax	;   draw_char();
   138 00000398 6683C410            <1>
   139                              <1> %endif
   140                              <1> 
   141                              <1> 		; 次の文字の位置を調整
   142 0000039C 41                  <1> 		inc		ecx								;   ECX++;           // 列を加算
   143 0000039D 83F950              <1> 		cmp		ecx, 80							;   if (80 <= ECX)   // 80文字以上？
   144 000003A0 7C10                <1> 		jl		.12E							;   {
   145 000003A2 B900000000          <1> 		mov		ecx, 0							;     ECX = 0;       // 列を初期化
   146 000003A7 42                  <1> 		inc		edx								;     EDX++;         // 行を加算
   147 000003A8 83FA1E              <1> 		cmp		edx, 30							;     if (30 <= EDX) // 30行以上？
   148 000003AB 7C05                <1> 		jl		.12E							;     {
   149 000003AD BA00000000          <1> 		mov		edx, 0							;       EDX = 0;     // 行を初期化
   150                              <1> 												;     }
   151                              <1> .12E:											;   }
   152 000003B2 EBD6                <1> 		jmp		.10L							;   
   153                              <1> .10E:											; } while (1);
   154                              <1> 
   155                              <1> 		;---------------------------------------
   156                              <1> 		; 【レジスタの復帰】
   157                              <1> 		;---------------------------------------
   158 000003B4 5E                  <1> 		pop		esi
   159 000003B5 5A                  <1> 		pop		edx
   160 000003B6 59                  <1> 		pop		ecx
   161 000003B7 5B                  <1> 		pop		ebx
   162 000003B8 58                  <1> 		pop		eax
   163                              <1> 
   164                              <1> 		;---------------------------------------
   165                              <1> 		; 【スタックフレームの破棄】
   166                              <1> 		;---------------------------------------
   167 000003B9 89EC                <1> 		mov		esp, ebp
   168 000003BB 5D                  <1> 		pop		ebp
   169                              <1> 
   170 000003BC C3                  <1> 		ret
   171                              <1> 
    81                                  %include	"../modules/protect/draw_color_bar.s"
    82                              <1> ;************************************************************************
    83                              <1> ;	カラーバーの表示
    84                              <1> ;========================================================================
    85                              <1> ;■書式		: void draw_color_bar(col, row);
    86                              <1> ;
    87                              <1> ;■引数
    88                              <1> ;	col		: 列
    89                              <1> ;	row		: 行
    90                              <1> ;
    91                              <1> ;■戻り値	: 無し
    92                              <1> ;************************************************************************
    93                              <1> draw_color_bar:
    94                              <1> 		;---------------------------------------
    95                              <1> 		; 【スタックフレームの構築】
    96                              <1> 		;---------------------------------------
    97                              <1> 												; ------|--------
    98                              <1> 												; EBP+ 8| X（列）
    99                              <1> 												; EBP+12| Y（行）
   100                              <1> 												; ---------------
   101 000003BD 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
   102 000003BE 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
   103                              <1> 												; ---------------
   104                              <1> 		;---------------------------------------
   105                              <1> 		; 【レジスタの保存】
   106                              <1> 		;---------------------------------------
   107 000003C0 50                  <1> 		push	eax
   108 000003C1 53                  <1> 		push	ebx
   109 000003C2 51                  <1> 		push	ecx
   110 000003C3 52                  <1> 		push	edx
   111 000003C4 56                  <1> 		push	esi
   112 000003C5 57                  <1> 		push	edi
   113                              <1> 
   114                              <1> 		;---------------------------------------
   115                              <1> 		; 表示位置
   116                              <1> 		;---------------------------------------
   117 000003C6 8B7508              <1> 		mov		esi, [ebp + 8]					; ESI = X（列）
   118 000003C9 8B7D0C              <1> 		mov		edi, [ebp +12]					; EDI = Y（行）
   119                              <1> 
   120                              <1> 		;---------------------------------------
   121                              <1> 		; カラーバーを表示
   122                              <1> 		;---------------------------------------
   123 000003CC B900000000          <1> 		mov		ecx, 0							; for (ECX = 0;
   124 000003D1 83F910              <1> .10L:	cmp		ecx, 16							;      ECX < 16;
   125 000003D4 732E                <1> 		jae		.10E							; 
   126                              <1> 												;      ECX++)
   127                              <1> 												; {
   128                              <1> 												;   // 桁位置の計算
   129 000003D6 89C8                <1> 		mov		eax, ecx						;   EAX  = ECX;
   130 000003D8 83E001              <1> 		and		eax, 0x01						;   EAX &= 0x01;
   131 000003DB C1E003              <1> 		shl		eax, 3							;   EAX *= 8;  // 8文字分乗算
   132 000003DE 01F0                <1> 		add		eax, esi						;   EAX += X;
   133                              <1> 												;   
   134                              <1> 												;   // 行位置の計算
   135 000003E0 89CB                <1> 		mov		ebx, ecx						;   EBX  = ECX;
   136 000003E2 D1EB                <1> 		shr		ebx, 1							;   EBX /= 2
   137 000003E4 01FB                <1> 		add		ebx, edi						;   EBX += Y;
   138                              <1> 												;   
   139                              <1> 												;   // 表示色の取得
   140 000003E6 89CA                <1> 		mov		edx, ecx						;   EDX  = ECX;
   141 000003E8 D1E2                <1> 		shl		edx, 1							;   EDX *= 2;
   142 000003EA 8B92[17040000]      <1> 		mov		edx, [.t0 + edx]				;   EDX += Y;
   143                              <1> 
   144 000003F0 68[0E040000]525350- <1> 		cdecl	draw_str, eax, ebx, edx, .s0	;   draw_str();
   144 000003F8 E877FFFFFF6683C410  <1>
   145                              <1> 
   146 00000401 41                  <1> 		inc		ecx								;   // for (... ECX++)
   147 00000402 EBCD                <1> 		jmp		.10L							; 
   148                              <1> .10E:											; }
   149                              <1> 
   150                              <1> 		;---------------------------------------
   151                              <1> 		; 【レジスタの復帰】
   152                              <1> 		;---------------------------------------
   153 00000404 5F                  <1> 		pop		edi
   154 00000405 5E                  <1> 		pop		esi
   155 00000406 5A                  <1> 		pop		edx
   156 00000407 59                  <1> 		pop		ecx
   157 00000408 5B                  <1> 		pop		ebx
   158 00000409 58                  <1> 		pop		eax
   159                              <1> 
   160                              <1> 		;---------------------------------------
   161                              <1> 		; 【スタックフレームの破棄】
   162                              <1> 		;---------------------------------------
   163 0000040A 89EC                <1> 		mov		esp, ebp
   164 0000040C 5D                  <1> 		pop		ebp
   165                              <1> 
   166 0000040D C3                  <1> 		ret
   167                              <1> 
   168 0000040E 202020202020202000  <1> .s0:	db '        ', 0						; 8文字分のスペース（表示色だけを変更）
   169                              <1> 
   170 00000417 00000008            <1> .t0:	dw	0x0000, 0x0800						; カラーバーの背景色
   171 0000041B 00010009            <1> 		dw	0x0100, 0x0900
   172 0000041F 0002000A            <1> 		dw	0x0200, 0x0A00
   173 00000423 0003000B            <1> 		dw	0x0300, 0x0B00
   174 00000427 0004000C            <1> 		dw	0x0400, 0x0C00
   175 0000042B 0005000D            <1> 		dw	0x0500, 0x0D00
   176 0000042F 0006000E            <1> 		dw	0x0600, 0x0E00
   177 00000433 0007000F            <1> 		dw	0x0700, 0x0F00
   178                              <1> 
    82                                  %include	"../modules/protect/draw_pixel.s"
    83                              <1> ;************************************************************************
    84                              <1> ;	ピクセルの描画
    85                              <1> ;========================================================================
    86                              <1> ;■書式		: void draw_pixel(X, Y, color);
    87                              <1> ;
    88                              <1> ;■引数
    89                              <1> ;	X		: X座標
    90                              <1> ;	Y		: Y座標
    91                              <1> ;	color	: 描画色
    92                              <1> ;
    93                              <1> ;■戻り値	: 無し
    94                              <1> ;************************************************************************
    95                              <1> draw_pixel:
    96                              <1> 		;---------------------------------------
    97                              <1> 		; 【スタックフレームの構築】
    98                              <1> 		;---------------------------------------
    99                              <1> 												; ------|--------
   100                              <1> 												; EBP+16| 色
   101                              <1> 												; EBP+12| Y
   102                              <1> 												; EBP+ 8| X
   103                              <1> 												; ------|--------
   104 00000437 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
   105 00000438 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
   106                              <1> 												; ------+--------
   107                              <1> 		;---------------------------------------
   108                              <1> 		; 【レジスタの保存】
   109                              <1> 		;---------------------------------------
   110 0000043A 50                  <1> 		push	eax
   111 0000043B 53                  <1> 		push	ebx
   112 0000043C 51                  <1> 		push	ecx
   113 0000043D 57                  <1> 		push	edi
   114                              <1> 
   115                              <1> 		;---------------------------------------
   116                              <1> 		; Y座標を80倍する（640/8）
   117                              <1> 		;---------------------------------------
   118 0000043E 8B7D0C              <1> 		mov		edi, [ebp +12]					; EDI  = Y座標
   119 00000441 C1E704              <1> 		shl		edi, 4							; EDI *= 16;
   120 00000444 8DBCBF00000A00      <1> 		lea		edi, [edi * 4 + edi + 0xA_0000]	; EDI  = 0xA00000[EDI * 4 + EDI];
   121                              <1> 
   122                              <1> 		;---------------------------------------
   123                              <1> 		; X座標を1/8して加算
   124                              <1> 		;---------------------------------------
   125 0000044B 8B5D08              <1> 		mov		ebx, [ebp + 8]					; EBX  = X座標;
   126 0000044E 89D9                <1> 		mov		ecx, ebx						; ECX  = X座標;（一時保存）
   127 00000450 C1EB03              <1> 		shr		ebx, 3							; EBX /= 8;
   128 00000453 01DF                <1> 		add		edi, ebx						; EDI += EBX;
   129                              <1> 
   130                              <1> 		;---------------------------------------
   131                              <1> 		; X座標を8で割った余りからビット位置を計算
   132                              <1> 		; (0=0x80, 1=0x40,... 7=0x01)
   133                              <1> 		;---------------------------------------
   134 00000455 83E107              <1> 		and		ecx, 0x07						; ECX = X & 0x07;
   135 00000458 BB80000000          <1> 		mov		ebx, 0x80						; EBX = 0x80;
   136 0000045D D3EB                <1> 		shr		ebx, cl							; EBX >>= ECX;
   137                              <1> 
   138                              <1> 		;---------------------------------------
   139                              <1> 		; 色指定
   140                              <1> 		;---------------------------------------
   141 0000045F 8B4D10              <1> 		mov		ecx, [ebp +16]					; // 表示色
   142                              <1> 
   143                              <1> %ifdef	USE_TEST_AND_SET
   144                              <1> 		cdecl	test_and_set, IN_USE			; TEST_AND_SET(IN_USE); // リソースの空き待ち
   145                              <1> %endif
   146                              <1> 
   147                              <1> 		;---------------------------------------
   148                              <1> 		; プレーン毎に出力
   149                              <1> 		;---------------------------------------
   150 00000462 6A03E84FFDFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x03		; // 輝度(I)プレーンを選択
   150 0000046B C404                <1>
   151 0000046D 6A08E85DFDFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x08		; // 輝度(I)プレーンを選択
   151 00000476 C404                <1>
   152 00000478 516A085753E8BBFDFF- <1> 		cdecl	vram_bit_copy, ebx, edi, 0x08, ecx
   152 00000481 FF6683C410          <1>
   153                              <1> 
   154 00000486 6A02E82BFDFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x02		; // 赤(R)プレーンを選択
   154 0000048F C404                <1>
   155 00000491 6A04E839FDFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x04		; // 赤(R)プレーンを選択
   155 0000049A C404                <1>
   156 0000049C 516A045753E897FDFF- <1> 		cdecl	vram_bit_copy, ebx, edi, 0x04, ecx
   156 000004A5 FF6683C410          <1>
   157                              <1> 
   158 000004AA 6A01E807FDFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x01		; // 緑(G)プレーンを選択
   158 000004B3 C404                <1>
   159 000004B5 6A02E815FDFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x02		; // 緑(G)プレーンを選択
   159 000004BE C404                <1>
   160 000004C0 516A025753E873FDFF- <1> 		cdecl	vram_bit_copy, ebx, edi, 0x02, ecx
   160 000004C9 FF6683C410          <1>
   161                              <1> 
   162 000004CE 6A00E8E3FCFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x00		; // 青(B)プレーンを選択
   162 000004D7 C404                <1>
   163 000004D9 6A01E8F1FCFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x01		; // 青(B)プレーンを選択
   163 000004E2 C404                <1>
   164 000004E4 516A015753E84FFDFF- <1> 		cdecl	vram_bit_copy, ebx, edi, 0x01, ecx
   164 000004ED FF6683C410          <1>
   165                              <1> 
   166                              <1> 
   167                              <1> %ifdef	USE_TEST_AND_SET
   168                              <1> 		;---------------------------------------
   169                              <1> 		; テストアンドセット
   170                              <1> 		;---------------------------------------
   171                              <1> 		mov		[IN_USE], dword 0				; 変数のクリア
   172                              <1> %endif
   173                              <1> 
   174                              <1> 		;---------------------------------------
   175                              <1> 		; 【レジスタの復帰】
   176                              <1> 		;---------------------------------------
   177 000004F2 5F                  <1> 		pop		edi
   178 000004F3 59                  <1> 		pop		ecx
   179 000004F4 5B                  <1> 		pop		ebx
   180 000004F5 58                  <1> 		pop		eax
   181                              <1> 
   182                              <1> 		;---------------------------------------
   183                              <1> 		; 【スタックフレームの破棄】
   184                              <1> 		;---------------------------------------
   185 000004F6 89EC                <1> 		mov		esp, ebp
   186 000004F8 5D                  <1> 		pop		ebp
   187                              <1> 
   188 000004F9 C3                  <1> 		ret
   189                              <1> 
    83                                  %include	"../modules/protect/draw_line.s"
    84                              <1> ;************************************************************************
    85                              <1> ;	直線の描画
    86                              <1> ;========================================================================
    87                              <1> ;■書式		: void draw_line(X0, Y0, X1, Y1, color);
    88                              <1> ;
    89                              <1> ;■引数
    90                              <1> ;	X0		: 始点のX座標
    91                              <1> ;	Y0		: 始点のY座標
    92                              <1> ;	X1		: 終点のX座標
    93                              <1> ;	Y1		: 終点のY座標
    94                              <1> ;	color	: 描画色
    95                              <1> ;
    96                              <1> ;■戻り値	: 無し
    97                              <1> ;************************************************************************
    98                              <1> draw_line:
    99                              <1> 		;---------------------------------------
   100                              <1> 		; 【スタックフレームの構築】
   101                              <1> 		;---------------------------------------
   102                              <1> 												; ---------------
   103                              <1> 												;    +24| 色
   104                              <1> 												;    +20| Y1
   105                              <1> 												;    +16| X1
   106                              <1> 												;    +12| Y0
   107                              <1> 												;    + 8| X0
   108                              <1> 												; ---------------
   109 000004FA 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
   110 000004FB 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
   111                              <1> 												; ---------------
   112 000004FD 6A00                <1> 		push	dword 0							;    - 4| sum   = 0; // 相対軸の積算値
   113 000004FF 6A00                <1> 		push	dword 0							;    - 8| x0    = 0; // X座標
   114 00000501 6A00                <1> 		push	dword 0							;    -12| dx    = 0; // X増分
   115 00000503 6A00                <1> 		push	dword 0							;    -16| inc_x = 0; // X座標増分(1 or -1)
   116 00000505 6A00                <1> 		push	dword 0							;    -20| y0    = 0; // Y座標
   117 00000507 6A00                <1> 		push	dword 0							;    -24| dy    = 0; // Y増分
   118 00000509 6A00                <1> 		push	dword 0							;    -28| inc_y = 0; // Y座標増分(1 or -1)
   119                              <1> 												; ------|--------
   120                              <1> 
   121                              <1> 		;---------------------------------------
   122                              <1> 		; 【レジスタの保存】
   123                              <1> 		;---------------------------------------
   124 0000050B 50                  <1> 		push	eax
   125 0000050C 53                  <1> 		push	ebx
   126 0000050D 51                  <1> 		push	ecx
   127 0000050E 52                  <1> 		push	edx
   128 0000050F 56                  <1> 		push	esi
   129 00000510 57                  <1> 		push	edi
   130                              <1> 
   131                              <1> 		;---------------------------------------
   132                              <1> 		; 幅を計算（X軸）
   133                              <1> 		;---------------------------------------
   134 00000511 8B4508              <1> 		mov		eax, [ebp + 8]					; EAX = X0;
   135 00000514 8B5D10              <1> 		mov		ebx, [ebp +16]					; EBX = X1;
   136 00000517 29C3                <1> 		sub		ebx, eax						; EBX = X1 - X0; // 幅
   137 00000519 7D09                <1> 		jge		.10F							; if (幅 < 0)
   138                              <1> 												; {
   139 0000051B F7DB                <1> 		neg		ebx								;   幅   *= -1;
   140 0000051D BEFFFFFFFF          <1> 		mov		esi, -1							;   // X座標の増分
   141 00000522 EB05                <1> 		jmp		.10E							; }
   142                              <1> .10F:											; else
   143                              <1> 												; {
   144 00000524 BE01000000          <1> 		mov		esi, 1							;   // X座標の増分
   145                              <1> .10E:											; }
   146                              <1> 
   147                              <1> 		;---------------------------------------
   148                              <1> 		; 高さを計算（Y軸）
   149                              <1> 		;---------------------------------------
   150 00000529 8B4D0C              <1> 		mov		ecx, [ebp +12]					; ECX = Y0
   151 0000052C 8B5514              <1> 		mov		edx, [ebp +20]					; EDX = Y1
   152 0000052F 29CA                <1> 		sub		edx, ecx						; EDX = Y1 - Y0; // 高さ
   153 00000531 7D09                <1> 		jge		.20F							; if (高さ < 0)
   154                              <1> 												; {
   155 00000533 F7DA                <1> 		neg		edx								;   高さ *= -1;
   156 00000535 BFFFFFFFFF          <1> 		mov		edi, -1							;   // Y座標の増分
   157 0000053A EB05                <1> 		jmp		.20E							; }
   158                              <1> .20F:											; else
   159                              <1> 												; {
   160 0000053C BF01000000          <1> 		mov		edi, 1							;   // Y座標の増分
   161                              <1> .20E:											; }
   162                              <1> 
   163                              <1> 		;---------------------------------------
   164                              <1> 		; X軸
   165                              <1> 		;---------------------------------------
   166 00000541 8945F8              <1> 		mov		[ebp - 8], eax					;   // X軸:開始座標
   167 00000544 895DF4              <1> 		mov		[ebp -12], ebx					;   // X軸:描画幅
   168 00000547 8975F0              <1> 		mov		[ebp -16], esi					;   // X軸:増分(基準軸：1 or -1)
   169                              <1> 
   170                              <1> 		;---------------------------------------
   171                              <1> 		; Y軸
   172                              <1> 		;---------------------------------------
   173 0000054A 894DEC              <1> 		mov		[ebp -20], ecx					;   // Y軸:開始座標
   174 0000054D 8955E8              <1> 		mov		[ebp -24], edx					;   // Y軸:描画幅
   175 00000550 897DE4              <1> 		mov		[ebp -28], edi					;   // Y軸:増分(基準軸：1 or -1)
   176                              <1> 
   177                              <1> 		;---------------------------------------
   178                              <1> 		; 基準軸を決める
   179                              <1> 		;---------------------------------------
   180 00000553 39D3                <1> 		cmp		ebx, edx						; if (幅 <= 高さ)
   181 00000555 7F08                <1> 		jg		.22F							; {
   182                              <1> 												;   
   183 00000557 8D75EC              <1> 		lea		esi, [ebp -20]					;   // Y軸が基準軸
   184 0000055A 8D7DF8              <1> 		lea		edi, [ebp - 8]					;   // X軸が相対軸
   185                              <1> 												;   
   186 0000055D EB06                <1> 		jmp		.22E							; }
   187                              <1> .22F:											; else
   188                              <1> 												; {
   189 0000055F 8D75F8              <1> 		lea		esi, [ebp - 8]					;   // X軸が基準軸
   190 00000562 8D7DEC              <1> 		lea		edi, [ebp -20]					;   // Y軸が相対軸
   191                              <1> .22E:											; }
   192                              <1> 
   193                              <1> 		;---------------------------------------
   194                              <1> 		; 繰り返し回数(基準軸のドット数)
   195                              <1> 		;---------------------------------------
   196 00000565 8B4EFC              <1> 		mov		ecx, [esi - 4]					; ECX = 基準軸描画幅;
   197 00000568 83F900              <1> 		cmp		ecx, 0							; if (0 == ECX)
   198 0000056B 7505                <1> 		jnz		.30E							; {
   199 0000056D B901000000          <1> 		mov		ecx, 1							;   ECX = 1;
   200                              <1> .30E:											; }
   201                              <1> 
   202                              <1> 		;---------------------------------------
   203                              <1> 		; 線を描画
   204                              <1> 		;---------------------------------------
   205                              <1> .50L:											; do
   206                              <1> 												; {
   207                              <1> %ifdef	USE_SYSTEM_CALL
   208                              <1> 		mov		eax, ecx						;   // 繰り返し回数を保存
   209                              <1> 
   210                              <1> 		mov		ebx, [ebp +24]					;   EBX = 表示色;
   211                              <1> 		mov		ecx, [ebp - 8]					;   ECX = X座標;
   212                              <1> 		mov		edx, [ebp -20]					;   EDX = Y座標;
   213                              <1> 		int		0x82							;   sys_call(1, X, Y, 色, 文字); BX(C), CX(X), DX(Y)
   214                              <1> 
   215                              <1> 		mov		ecx, eax
   216                              <1> %else
   217 00000572 FF7518FF75ECFF75F8- <1> 		cdecl	draw_pixel, dword [ebp - 8], 							dword [ebp -20], 							dword [ebp +24]		;   // 点の描画
   217 0000057B E8B7FEFFFF6683C40C  <1>
   220                              <1> %endif
   221                              <1> 												;   // 基準軸を更新(1ドット分)
   222 00000584 8B46F8              <1> 		mov		eax, [esi - 8]					;   EAX = 基準軸増分(1 or -1);
   223 00000587 0106                <1> 		add		[esi - 0], eax					;   
   224                              <1> 
   225                              <1> 												;   // 相対軸を更新
   226 00000589 8B45FC              <1> 		mov		eax, [ebp - 4]					;   EAX  = sum; // 相対軸の積算値;
   227 0000058C 0347FC              <1> 		add		eax, [edi - 4]					;   EAX += dy;  // 増分(相対軸の描画幅)
   228 0000058F 8B5EFC              <1> 		mov		ebx, [esi - 4]					;   EBX  = dx;  // 増分(基準軸の描画幅)
   229                              <1> 
   230 00000592 39D8                <1> 		cmp		eax, ebx						;   if (積算値 <= 相対軸の増分)
   231 00000594 7C07                <1> 		jl		.52E							;   {
   232 00000596 29D8                <1> 		sub		eax, ebx						;     EAX -= EBX; // 積算値から相対軸の増分を減算
   233                              <1> 												;     
   234                              <1> 												;     // 相対軸の座標を更新(1ドット分)
   235 00000598 8B5FF8              <1> 		mov		ebx, [edi - 8]					;     EBX =  相対軸増分;
   236 0000059B 011F                <1> 		add		[edi - 0], ebx					;     
   237                              <1> .52E:											;   }
   238 0000059D 8945FC              <1> 		mov		[ebp - 4], eax					;   // 積算値を更新
   239                              <1> 												;   
   240 000005A0 E2D0                <1> 		loop	.50L							;   
   241                              <1> .50E:											; } while (ループ回数--);
   242                              <1> 
   243                              <1> 		;---------------------------------------
   244                              <1> 		; 【レジスタの復帰】
   245                              <1> 		;---------------------------------------
   246 000005A2 5F                  <1> 		pop		edi
   247 000005A3 5E                  <1> 		pop		esi
   248 000005A4 5A                  <1> 		pop		edx
   249 000005A5 59                  <1> 		pop		ecx
   250 000005A6 5B                  <1> 		pop		ebx
   251 000005A7 58                  <1> 		pop		eax
   252                              <1> 
   253                              <1> 		;---------------------------------------
   254                              <1> 		; 【スタックフレームの破棄】
   255                              <1> 		;---------------------------------------
   256 000005A8 89EC                <1> 		mov		esp, ebp
   257 000005AA 5D                  <1> 		pop		ebp
   258                              <1> 
   259 000005AB C3                  <1> 		ret
   260                              <1> 
    84                                  
    85                                  ;************************************************************************
    86                                  ;	パディング
    87                                  ;************************************************************************
    88 000005AC 00<rep 1A54h>           		times KERNEL_SIZE - ($ - $$) db 0x00	; パディング
    89                                  
