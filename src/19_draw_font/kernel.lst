     1                                  ;************************************************************************
     2                                  ;
     3                                  ;	カーネル部
     4                                  ;
     5                                  ;************************************************************************
     6                                  
     7                                  ;************************************************************************
     8                                  ;	マクロ
     9                                  ;************************************************************************
    10                                  %include	"../include/define.s"
    11                              <1> ;************************************************************************
    12                              <1> ;	メモリイメージ
    13                              <1> ;************************************************************************
    14                              <1> 
    15                              <1> 		;---------------------------------------
    16                              <1> 		;           |            | 
    17                              <1> 		;           |____________| 
    18                              <1> 		; 0000_7A00 |            | ( 512) スタック
    19                              <1> 		;           |____________| 
    20                              <1> 		; 0000_7C00 |            | (  8K) ブート
    21                              <1> 		;           =            = 
    22                              <1> 		;           |____________| 
    23                              <1> 		; 0000_9C00 |            | (  8K) カーネル（一時展開）
    24                              <1> 		;           =            = 
    25                              <1> 		;           |____________| 
    26                              <1> 		; 0000_BC00 |////////////| 
    27                              <1> 		;           =            = 
    28                              <1> 		;           |____________| 
    29                              <1> 		; 0010_0000 |       (2K) | 割り込みディスクリプタテーブル
    30                              <1> 		;           |____________| 
    31                              <1> 		; 0010_0800 |       (2K) | カーネルスタック
    32                              <1> 		;           |____________| 
    33                              <1> 		; 0010_1000 |       (8K) | カーネルプログラム
    34                              <1> 		;           |            | 
    35                              <1> 		;           =            = 
    36                              <1> 		;           |____________| 
    37                              <1> 		; 0010_3000 |       (8K) | タスク用スタック
    38                              <1> 		;           |            | （各タスク1K）
    39                              <1> 		;           =            = 
    40                              <1> 		;           |____________| 
    41                              <1> 		; 0010_5000 |            | Dir
    42                              <1> 		;      6000 |____________| Page
    43                              <1> 		; 0010_7000 |            | Dir
    44                              <1> 		;      8000 |____________| Page
    45                              <1> 		; 0010_9000 |////////////| 
    46                              <1> 		;           |            | 
    47                              <1> 
    48                              <1> 
    49                              <1>         BOOT_SIZE			equ		(1024 * 8)		; ブートサイズ
    50                              <1> 		KERNEL_SIZE			equ		(1024 * 8)		; カーネルサイズ
    51                              <1> 
    52                              <1> 		BOOT_LOAD			equ		0x7C00			; ブートプログラムのロード位置
    53                              <1> 		BOOT_END			equ		(BOOT_LOAD + BOOT_SIZE)
    54                              <1> 
    55                              <1> 		KERNEL_LOAD			equ		0x0010_1000
    56                              <1> 
    57                              <1> 		SECT_SIZE			equ		(512)			; セクタサイズ
    58                              <1> 
    59                              <1> 		BOOT_SECT			equ		(BOOT_SIZE   / SECT_SIZE)	; ブートプログラムのセクタ数
    60                              <1> 		KERNEL_SECT			equ		(KERNEL_SIZE / SECT_SIZE)	; カーネルのセクタ数
    61                              <1> 
    62                              <1> 		E820_RECORD_SIZE	equ		20
    63                              <1> 
    64                              <1> 		VECT_BASE			equ		0x0010_0000		;	0010_0000:0010_07FF
    11                                  %include	"../include/macro.s"
    12                              <1> ;************************************************************************
    13                              <1> ; 関数呼び出し用マクロ
    14                              <1> ;
    15                              <1> ; 使い方：
    16                              <1> ;	cdecl	func [, param1[, param2[, ...]]]
    17                              <1> ;
    18                              <1> ;************************************************************************
    19                              <1> 
    20                              <1> %macro cdecl 1-*.nolist
    21                              <1> 
    22                              <1>     %rep %0 - 1
    23                              <1>         push    %{-1:-1}
    24                              <1>         %rotate -1
    25                              <1>     %endrep
    26                              <1>     %rotate -1
    27                              <1> 
    28                              <1>         call    %1
    29                              <1> 
    30                              <1>     %if 1 < %0
    31                              <1>         add     sp,(__BITS__ >> 3) * (%0 - 1)
    32                              <1>     %endif
    33                              <1> 
    34                              <1> %endmacro
    35                              <1> 
    36                              <1> ;************************************************************************
    37                              <1> ;	構造体
    38                              <1> ;************************************************************************
    39                              <1> 
    40                              <1> ;-----------------------------------------------
    41                              <1> ;	ドライブパラメータ
    42                              <1> ;-----------------------------------------------
    43                              <1> struc drive
    44 00000000 ????                <1> 		.no				resw	1				; ドライブ番号
    45 00000002 ????                <1> 		.cyln			resw	1				; C:シリンダ
    46 00000004 ????                <1> 		.head			resw	1				; H:ヘッド
    47 00000006 ????                <1> 		.sect			resw	1				; S:セクタ
    48                              <1> endstruc
    12                                  
    13                                  		ORG		KERNEL_LOAD						; カーネルのロードアドレス
    14                                  
    15                                  [BITS 32]
    16                                  ;************************************************************************
    17                                  ;	エントリポイント
    18                                  ;************************************************************************
    19                                  kernel:
    20                                  		;---------------------------------------
    21                                  		; フォントアドレスを取得
    22                                  		;---------------------------------------
    23 00000000 BE007E0000              		mov		esi, BOOT_LOAD + SECT_SIZE		; ESI   = 0x7C00 + 512
    24 00000005 0FB706                  		movzx	eax, word [esi + 0]				; EAX   = [ESI + 0] // セグメント
    25 00000008 0FB75E02                		movzx	ebx, word [esi + 2]				; EBX   = [ESI + 2] // オフセット
    26 0000000C C1E004                  		shl		eax, 4							; EAX <<= 4;
    27 0000000F 01D8                    		add		eax, ebx						; EAX  += EBX;
    28 00000011 A3[28000000]            		mov		[FONT_ADR], eax					; FONT_ADR[0] = EAX;
    29                                  
    30                                  		;---------------------------------------
    31                                  		; フォントの一覧表示
    32                                  		;---------------------------------------
    33 00000016 6A0D6A3FE884010000-     		cdecl	draw_font, 63, 13				; // フォントの一覧表示
    33 0000001F 6683C408           
    34                                  
    35                                  		;---------------------------------------
    36                                  		; 処理の終了
    37                                  		;---------------------------------------
    38 00000023 EBFE                    		jmp		$								; while (1) ; // 無限ループ
    39                                  
    40 00000025 00<rep 3h>              ALIGN 4, db 0
    41 00000028 00000000                FONT_ADR:	dd	0
    42                                  
    43                                  ;************************************************************************
    44                                  ;	モジュール
    45                                  ;************************************************************************
    46                                  %include	"../modules/protect/vga.s"
    47                              <1> ;************************************************************************
    48                              <1> ;	読み込みプレーンの選択
    49                              <1> ;========================================================================
    50                              <1> ;■書式		: void vga_set_read_plane(plane);
    51                              <1> ;
    52                              <1> ;■引数
    53                              <1> ;	plane	: 読み込みプレーン
    54                              <1> ;
    55                              <1> ;■戻り値	: 無し
    56                              <1> ;************************************************************************
    57                              <1> vga_set_read_plane:
    58                              <1> 		;---------------------------------------
    59                              <1> 		; 【スタックフレームの構築】
    60                              <1> 		;---------------------------------------
    61                              <1> 												; EBP+ 8| プレーン（インデックス）
    62                              <1> 												; ------+----------------
    63 0000002C 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
    64 0000002D 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
    65                              <1> 												; ------+----------------
    66                              <1> 
    67                              <1> 		;---------------------------------------
    68                              <1> 		; 【レジスタの保存】
    69                              <1> 		;---------------------------------------
    70 0000002F 50                  <1> 		push	eax
    71 00000030 52                  <1> 		push	edx
    72                              <1> 
    73                              <1> 		;---------------------------------------
    74                              <1> 		; 読み込みプレーンの選択
    75                              <1> 		;---------------------------------------
    76 00000031 8A6508              <1> 		mov		ah, [ebp + 8]					; AH  = プレーンを選択（3=輝度, 2～0=RGB）
    77 00000034 80E403              <1> 		and		ah, 0x03						; AH &= 0x03; // 余計なビットをマスク
    78 00000037 B004                <1> 		mov		al, 0x04						; AL  = 読み込みプレーン選択レジスタ
    79 00000039 66BACE03            <1> 		mov		dx, 0x03CE						; DX  = グラフィックス制御ポート
    80 0000003D 66EF                <1> 		out		dx, ax							; // ポート出力
    81                              <1> 
    82                              <1> 		;---------------------------------------
    83                              <1> 		; 【レジスタの復帰】
    84                              <1> 		;---------------------------------------
    85 0000003F 5A                  <1> 		pop		edx
    86 00000040 58                  <1> 		pop		eax
    87                              <1> 
    88                              <1> 		;---------------------------------------
    89                              <1> 		; 【スタックフレームの破棄】
    90                              <1> 		;---------------------------------------
    91 00000041 89EC                <1> 		mov		esp, ebp
    92 00000043 5D                  <1> 		pop		ebp
    93                              <1> 
    94 00000044 C3                  <1> 		ret
    95                              <1> 
    96                              <1> 
    97                              <1> ;************************************************************************
    98                              <1> ;	書き込みプレーンを選択
    99                              <1> ;========================================================================
   100                              <1> ;■書式		: void vga_set_write_plane(plane);
   101                              <1> ;
   102                              <1> ;■引数
   103                              <1> ;	plane	: 書き込みプレーン
   104                              <1> ;
   105                              <1> ;■戻り値	: 無し
   106                              <1> ;************************************************************************
   107                              <1> vga_set_write_plane:
   108                              <1> 		;---------------------------------------
   109                              <1> 		; 【スタックフレームの構築】
   110                              <1> 		;---------------------------------------
   111                              <1> 												; EBP+ 8| プレーン（ビット指定）
   112                              <1> 												; ------+----------------
   113 00000045 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
   114 00000046 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
   115                              <1> 												; ------+----------------
   116                              <1> 
   117                              <1> 		;---------------------------------------
   118                              <1> 		; 【レジスタの保存】
   119                              <1> 		;---------------------------------------
   120 00000048 50                  <1> 		push	eax
   121 00000049 52                  <1> 		push	edx
   122                              <1> 
   123                              <1> 		;---------------------------------------
   124                              <1> 		; 書き込みプレーンの選択
   125                              <1> 		;---------------------------------------
   126 0000004A 8A6508              <1> 		mov		ah, [ebp + 8]					; AH = 書き込みプレーンを指定(Bit:----IRGB)
   127 0000004D 80E40F              <1> 		and		ah, 0x0F						; AH = 0x0F; // 余計なビットをマスク
   128 00000050 B002                <1> 		mov		al, 0x02						; AL = 書き込みプレーン選択
   129 00000052 66BAC403            <1> 		mov		dx, 0x03C4						; DX = シーケンサ制御ポート
   130 00000056 66EF                <1> 		out		dx, ax							; // ポート出力
   131                              <1> 
   132                              <1> 		;---------------------------------------
   133                              <1> 		; 【レジスタの復帰】
   134                              <1> 		;---------------------------------------
   135 00000058 5A                  <1> 		pop		edx
   136 00000059 58                  <1> 		pop		eax
   137                              <1> 
   138                              <1> 		;---------------------------------------
   139                              <1> 		; 【スタックフレームの破棄】
   140                              <1> 		;---------------------------------------
   141 0000005A 89EC                <1> 		mov		esp, ebp
   142 0000005C 5D                  <1> 		pop		ebp
   143                              <1> 
   144 0000005D C3                  <1> 		ret
   145                              <1> 
   146                              <1> 
   147                              <1> ;************************************************************************
   148                              <1> ;	フォントの書き込み
   149                              <1> ;========================================================================
   150                              <1> ;■書式		: void vram_font_copy(font, vram, plane, color);
   151                              <1> ;
   152                              <1> ;■引数
   153                              <1> ;	font	: FONTアドレス
   154                              <1> ;	vram	: VRAMアドレス
   155                              <1> ;	plane	: 出力プレーン（１つのプレーンのみをビットで指定）
   156                              <1> ;	color	: 描画色
   157                              <1> ;
   158                              <1> ;■戻り値	: 無し
   159                              <1> ;************************************************************************
   160                              <1> vram_font_copy:
   161                              <1> 		;---------------------------------------
   162                              <1> 		; 【スタックフレームの構築】
   163                              <1> 		;---------------------------------------
   164                              <1> 												; EBP+20| 色（背景/前景色）
   165                              <1> 												; EBP+16| プレーン（ビット指定）
   166                              <1> 												; EBP+12| VRAMアドレス
   167                              <1> 												; EBP+ 8| FONTアドレス
   168                              <1> 												; ------+----------------
   169 0000005E 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
   170 0000005F 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
   171                              <1> 												; ------+----------------
   172                              <1> 
   173                              <1> 		;---------------------------------------
   174                              <1> 		; 【レジスタの保存】
   175                              <1> 		;---------------------------------------
   176 00000061 50                  <1> 		push	eax
   177 00000062 53                  <1> 		push	ebx
   178 00000063 51                  <1> 		push	ecx
   179 00000064 52                  <1> 		push	edx
   180 00000065 56                  <1> 		push	esi
   181 00000066 57                  <1> 		push	edi
   182                              <1> 
   183                              <1> 		;---------------------------------------
   184                              <1> 		; 【処理の開始】
   185                              <1> 		;---------------------------------------
   186 00000067 8B7508              <1> 		mov		esi, [ebp + 8]					; ESI = フォントアドレス;
   187 0000006A 8B7D0C              <1> 		mov		edi, [ebp +12]					; EDI = VRAMアドレス;
   188 0000006D 0FB64510            <1> 		movzx	eax, byte [ebp +16]				; EAX = プレーン（ビット指定）;
   189 00000071 0FB75D14            <1> 		movzx	ebx, word [ebp +20]				; EBX = 色;
   190                              <1> 
   191 00000075 84C7                <1> 		test	bh, al							; ZF = (背景色 & プレーン);
   192 00000077 0F94C6              <1> 		setz	dh								; AH = ZF ? 0x01 : 0x00
   193 0000007A FECE                <1> 		dec		dh								; AH--; // 0x00 or 0xFF
   194                              <1> 
   195 0000007C 84C3                <1> 		test	bl, al							; ZF = (前景色 & プレーン);
   196 0000007E 0F94C2              <1> 		setz	dl								; AL = ZF ? 0x01 : 0x00
   197 00000081 FECA                <1> 		dec		dl								; AL--; // 0x00 or 0xFF
   198                              <1> 
   199                              <1> 		;---------------------------------------
   200                              <1> 		; 16ドットフォントのコピー
   201                              <1> 		;---------------------------------------
   202 00000083 FC                  <1> 		cld										; DF  = 0; // アドレス加算
   203                              <1> 
   204 00000084 B910000000          <1> 		mov		ecx, 16							; ECX = 16; // 16ドット
   205                              <1> .10L:											; do
   206                              <1> 												; {
   207                              <1> 		;---------------------------------------
   208                              <1> 		; フォントマスクの作成
   209                              <1> 		;---------------------------------------
   210 00000089 AC                  <1> 		lodsb									;   AL  = *ESI++; //  フォント
   211 0000008A 88C4                <1> 		mov		ah, al							;   AH ~= AL;     // !フォント（ビット反転）
   212 0000008C F6D4                <1> 		not		ah								;   
   213                              <1> 
   214                              <1> 		;---------------------------------------
   215                              <1> 		; 前景色
   216                              <1> 		;---------------------------------------
   217 0000008E 20D0                <1> 		and		al, dl							;   AL = 前景色 & フォント;
   218                              <1> 
   219                              <1> 		;---------------------------------------
   220                              <1> 		; 背景色
   221                              <1> 		;---------------------------------------
   222 00000090 F7C310000000        <1> 		test	ebx, 0x0010						;   if (透過モード)
   223 00000096 7404                <1> 		jz		.11F							;   {
   224 00000098 2227                <1> 		and		ah, [edi]						;     AH = !フォント & [EDI] // 現在値
   225 0000009A EB02                <1> 		jmp		.11E							;   }
   226                              <1> .11F:											;   else
   227                              <1> 												;   {
   228 0000009C 20F4                <1> 		and		ah, dh							;     AH = !フォント & 背景色;
   229                              <1> .11E:											;   }
   230                              <1> 
   231                              <1> 		;---------------------------------------
   232                              <1> 		; 前景色と背景色を合成
   233                              <1> 		;---------------------------------------
   234 0000009E 08E0                <1> 		or		al, ah							;   AL  = 背景 | 前景;
   235                              <1> 
   236                              <1> 		;---------------------------------------
   237                              <1> 		; 新しい値を出力
   238                              <1> 		;---------------------------------------
   239 000000A0 8807                <1> 		mov		[edi], al						;   [EDI] = AL; // プレーンに書き込む
   240                              <1> 
   241 000000A2 83C750              <1> 		add		edi, 80							;   EDI += 80;
   242 000000A5 E2E2                <1> 		loop	.10L							; } while (--ECX);
   243                              <1> .10E:											; 
   244                              <1> 
   245                              <1> 		;---------------------------------------
   246                              <1> 		; 【レジスタの復帰】
   247                              <1> 		;---------------------------------------
   248 000000A7 5F                  <1> 		pop		edi
   249 000000A8 5E                  <1> 		pop		esi
   250 000000A9 5A                  <1> 		pop		edx
   251 000000AA 59                  <1> 		pop		ecx
   252 000000AB 5B                  <1> 		pop		ebx
   253 000000AC 58                  <1> 		pop		eax
   254                              <1> 
   255                              <1> 		;---------------------------------------
   256                              <1> 		; 【スタックフレームの破棄】
   257                              <1> 		;---------------------------------------
   258 000000AD 89EC                <1> 		mov		esp, ebp
   259 000000AF 5D                  <1> 		pop		ebp
   260                              <1> 
   261 000000B0 C3                  <1> 		ret
   262                              <1> 
   263                              <1> 
   264                              <1> ;************************************************************************
   265                              <1> ;	ビットパターンの書き込み
   266                              <1> ;========================================================================
   267                              <1> ;■書式		: void vram_bit_copy(bit, vram, flag);
   268                              <1> ;
   269                              <1> ;■引数
   270                              <1> ;	bit		: 出力ビットパターン
   271                              <1> ;	vram	: VRAMアドレス
   272                              <1> ;	flag	: 1:セット, 0:クリア
   273                              <1> ;
   274                              <1> ;■戻り値	: 無し
   275                              <1> ;************************************************************************
   276                              <1> vram_bit_copy:
   277                              <1> 		;---------------------------------------
   278                              <1> 		; 【スタックフレームの構築】
   279                              <1> 		;---------------------------------------
   280                              <1> 												; EBP+20| 色（背景/前景色）
   281                              <1> 												; EBP+16| プレーン（ビット指定）
   282                              <1> 												; EBP+12| VRAMアドレス
   283                              <1> 												; EBP+ 8| 出力ビットパターン
   284                              <1> 												; ------+----------------
   285 000000B1 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
   286 000000B2 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
   287                              <1> 												; ------+----------------
   288                              <1> 
   289                              <1> 		;---------------------------------------
   290                              <1> 		; 【レジスタの保存】
   291                              <1> 		;---------------------------------------
   292 000000B4 50                  <1> 		push	eax
   293 000000B5 53                  <1> 		push	ebx
   294 000000B6 57                  <1> 		push	edi
   295                              <1> 
   296                              <1> 		;---------------------------------------
   297                              <1> 		; 【処理の開始】
   298                              <1> 		;---------------------------------------
   299 000000B7 8B7D0C              <1> 		mov		edi, [ebp +12]					; EDI = VRAMアドレス;
   300 000000BA 0FB64510            <1> 		movzx	eax, byte [ebp +16]				; EAX = プレーン（ビット指定）;
   301 000000BE 0FB75D14            <1> 		movzx	ebx, word [ebp +20]				; EBX = 表示色;
   302                              <1> 
   303 000000C2 84C3                <1> 		test	bl, al							; ZF = (前景色 & プレーン);
   304 000000C4 0F94C3              <1> 		setz	bl								; BL = ZF ? 0x01 : 0x00
   305 000000C7 FECB                <1> 		dec		bl								; BL--; // 0x00 or 0xFF
   306                              <1> 
   307                              <1> 		;---------------------------------------
   308                              <1> 		; マスクデータの作成
   309                              <1> 		;---------------------------------------
   310 000000C9 8A4508              <1> 		mov		al, [ebp + 8]					; AL = 出力ビットパターン;
   311 000000CC 88C4                <1> 		mov		ah, al							; AH ~= AL;     // !出力ビットパターン（ビット反転）
   312 000000CE F6D4                <1> 		not		ah								; 
   313                              <1> 
   314                              <1> 		;---------------------------------------
   315                              <1> 		; 現在値の出力を取得
   316                              <1> 		;---------------------------------------
   317 000000D0 2227                <1> 		and		ah, [edi]						; AH  = 現在値 & !出力ビットパターン
   318 000000D2 20D8                <1> 		and		al, bl							; AL  = 表示色 &  出力ビットパターン
   319 000000D4 08E0                <1> 		or		al, ah							; AL |= AH;
   320                              <1> 
   321                              <1> 		;---------------------------------------
   322                              <1> 		; 新しい値を出力
   323                              <1> 		;---------------------------------------
   324 000000D6 8807                <1> 		mov		[edi], al						; [EDI] = BL; // プレーンに書き込む
   325                              <1> 
   326                              <1> 		;---------------------------------------
   327                              <1> 		; 【レジスタの復帰】
   328                              <1> 		;---------------------------------------
   329 000000D8 5F                  <1> 		pop		edi
   330 000000D9 5B                  <1> 		pop		ebx
   331 000000DA 58                  <1> 		pop		eax
   332                              <1> 
   333                              <1> 		;---------------------------------------
   334                              <1> 		; 【スタックフレームの破棄】
   335                              <1> 		;---------------------------------------
   336 000000DB 89EC                <1> 		mov		esp, ebp
   337 000000DD 5D                  <1> 		pop		ebp
   338                              <1> 
   339 000000DE C3                  <1> 		ret
    47                                  %include	"../modules/protect/draw_char.s"
    48                              <1> ;************************************************************************
    49                              <1> ;	文字の表示
    50                              <1> ;------------------------------------------------------------------------
    51                              <1> ;	グラフィックスモードでテキストを表示
    52                              <1> ;========================================================================
    53                              <1> ;■書式		: void draw_char(col, row, color, ch);
    54                              <1> ;
    55                              <1> ;■引数
    56                              <1> ;	col		: 列（0～79）
    57                              <1> ;	row		: 行（0～29）
    58                              <1> ;	color	: 描画色
    59                              <1> ;	ch		: 文字
    60                              <1> ;
    61                              <1> ;■戻り値	: 無し
    62                              <1> ;************************************************************************
    63                              <1> draw_char:
    64                              <1> 		;---------------------------------------
    65                              <1> 		; 【スタックフレームの構築】
    66                              <1> 		;---------------------------------------
    67                              <1> 												; ------|--------
    68                              <1> 												; EBP+20| 文字
    69                              <1> 												; EBP+16| 色
    70                              <1> 												; EBP+12| Y（行）
    71                              <1> 												; EBP+ 8| X（列）
    72                              <1> 												; ------+----------------
    73 000000DF 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
    74 000000E0 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
    75                              <1> 												; ------+----------------
    76                              <1> 
    77                              <1> 		;---------------------------------------
    78                              <1> 		; 【レジスタの保存】
    79                              <1> 		;---------------------------------------
    80 000000E2 50                  <1> 		push	eax
    81 000000E3 53                  <1> 		push	ebx
    82 000000E4 51                  <1> 		push	ecx
    83 000000E5 52                  <1> 		push	edx
    84 000000E6 56                  <1> 		push	esi
    85 000000E7 57                  <1> 		push	edi
    86                              <1> 
    87                              <1> 		;---------------------------------------
    88                              <1> 		; テストアンドセット
    89                              <1> 		;---------------------------------------
    90                              <1> %ifdef	USE_TEST_AND_SET
    91                              <1> 		cdecl	test_and_set, IN_USE			; TEST_AND_SET(IN_USE); // リソースの空き待ち
    92                              <1> %endif
    93                              <1> 
    94                              <1> 		;---------------------------------------
    95                              <1> 		; コピー元フォントアドレスを設定
    96                              <1> 		;---------------------------------------
    97 000000E8 0FB67514            <1> 		movzx	esi, byte [ebp +20]				; CL  = 文字コード;
    98 000000EC C1E604              <1> 		shl		esi, 4							; CL *= 16; // 1文字16バイト
    99 000000EF 0335[28000000]      <1> 		add		esi, [FONT_ADR]					; ESI = フォントアドレス;
   100                              <1> 
   101                              <1> 		;---------------------------------------
   102                              <1> 		; コピー先アドレスを取得
   103                              <1> 		; Adr = 0xA0000 + (640 / 8 * 16) * y + x
   104                              <1> 		;---------------------------------------
   105 000000F5 8B7D0C              <1> 		mov		edi, [ebp +12]					; Y（行）
   106 000000F8 C1E708              <1> 		shl		edi, 8							; EDI = Y * 256;
   107 000000FB 8DBCBF00000A00      <1> 		lea		edi, [edi * 4 + edi + 0xA0000]	; EDI = Y *   4 + Y;
   108 00000102 037D08              <1> 		add		edi, [ebp + 8]					; X（列）
   109                              <1> 
   110                              <1> 		;---------------------------------------
   111                              <1> 		; 1文字分のフォントを出力
   112                              <1> 		;---------------------------------------
   113 00000105 0FB75D10            <1> 		movzx	ebx, word [ebp +16]				; // 表示色
   114                              <1> 
   115 00000109 6A03E81CFFFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x03		; // 読み込みプレーン：輝度(I)
   115 00000112 C404                <1>
   116 00000114 6A08E82AFFFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x08		; // 書き込みプレーン：輝度(I)
   116 0000011D C404                <1>
   117 0000011F 536A085756E835FFFF- <1> 		cdecl	vram_font_copy, esi, edi, 0x08, ebx
   117 00000128 FF6683C410          <1>
   118                              <1> 
   119 0000012D 6A02E8F8FEFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x02		; // 読み込みプレーン：赤(R)
   119 00000136 C404                <1>
   120 00000138 6A04E806FFFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x04		; // 書き込みプレーン：赤(R)
   120 00000141 C404                <1>
   121 00000143 536A045756E811FFFF- <1> 		cdecl	vram_font_copy, esi, edi, 0x04, ebx
   121 0000014C FF6683C410          <1>
   122                              <1> 
   123 00000151 6A01E8D4FEFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x01		; // 読み込みプレーン：緑(G)
   123 0000015A C404                <1>
   124 0000015C 6A02E8E2FEFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x02		; // 書き込みプレーン：緑(G)
   124 00000165 C404                <1>
   125 00000167 536A025756E8EDFEFF- <1> 		cdecl	vram_font_copy, esi, edi, 0x02, ebx
   125 00000170 FF6683C410          <1>
   126                              <1> 
   127 00000175 6A00E8B0FEFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x00		; // 読み込みプレーン：青(B)
   127 0000017E C404                <1>
   128 00000180 6A01E8BEFEFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x01		; // 書き込みプレーン：青(B)
   128 00000189 C404                <1>
   129 0000018B 536A015756E8C9FEFF- <1> 		cdecl	vram_font_copy, esi, edi, 0x01, ebx
   129 00000194 FF6683C410          <1>
   130                              <1> 
   131                              <1> %ifdef	USE_TEST_AND_SET
   132                              <1> 		;---------------------------------------
   133                              <1> 		; テストアンドセット
   134                              <1> 		;---------------------------------------
   135                              <1> 		mov		[IN_USE], dword 0				; 変数のクリア
   136                              <1> %endif
   137                              <1> 
   138                              <1> 		;---------------------------------------
   139                              <1> 		; 【レジスタの復帰】
   140                              <1> 		;---------------------------------------
   141 00000199 5F                  <1> 		pop		edi
   142 0000019A 5E                  <1> 		pop		esi
   143 0000019B 5A                  <1> 		pop		edx
   144 0000019C 59                  <1> 		pop		ecx
   145 0000019D 5B                  <1> 		pop		ebx
   146 0000019E 58                  <1> 		pop		eax
   147                              <1> 
   148                              <1> 		;---------------------------------------
   149                              <1> 		; 【スタックフレームの破棄】
   150                              <1> 		;---------------------------------------
   151 0000019F 89EC                <1> 		mov		esp, ebp
   152 000001A1 5D                  <1> 		pop		ebp
   153                              <1> 
   154 000001A2 C3                  <1> 		ret
   155                              <1> 
   156                              <1> %ifdef USE_TEST_AND_SET
   157                              <1> ALIGN 4, db 0
   158                              <1> IN_USE:	dd	0
   159                              <1> %endif
   160                              <1> 
    48                                  %include	"../modules/protect/draw_font.s"
    49                              <1> ;************************************************************************
    50                              <1> ;	フォント一覧を表示
    51                              <1> ;========================================================================
    52                              <1> ;■書式		: void draw_font(col, row);
    53                              <1> ;
    54                              <1> ;■引数
    55                              <1> ;	col		: 列
    56                              <1> ;	row		: 行
    57                              <1> ;
    58                              <1> ;■戻り値	: 無し
    59                              <1> ;************************************************************************
    60                              <1> draw_font:
    61                              <1> 		;---------------------------------------
    62                              <1> 		; 【スタックフレームの構築】
    63                              <1> 		;---------------------------------------
    64                              <1> 												; ------|--------
    65                              <1> 												; EBP+12| Y（行）
    66                              <1> 												; EBP+ 8| X（列）
    67                              <1> 												; ---------------
    68 000001A3 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
    69 000001A4 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
    70                              <1> 												; ---------------
    71                              <1> 
    72                              <1> 		;---------------------------------------
    73                              <1> 		; 【レジスタの保存】
    74                              <1> 		;---------------------------------------
    75 000001A6 50                  <1> 		push	eax
    76 000001A7 53                  <1> 		push	ebx
    77 000001A8 51                  <1> 		push	ecx
    78 000001A9 52                  <1> 		push	edx
    79 000001AA 56                  <1> 		push	esi
    80 000001AB 57                  <1> 		push	edi
    81                              <1> 
    82                              <1> 		;---------------------------------------
    83                              <1> 		; 表示位置
    84                              <1> 		;---------------------------------------
    85 000001AC 8B7508              <1> 		mov		esi, [ebp + 8]					; ESI = X（列）
    86 000001AF 8B7D0C              <1> 		mov		edi, [ebp +12]					; EDI = Y（行）
    87                              <1> 
    88                              <1> 		;---------------------------------------
    89                              <1> 		; フォント一覧を表示
    90                              <1> 		;---------------------------------------
    91 000001B2 B900000000          <1> 		mov		ecx, 0							; for (ECX = 0;
    92 000001B7 81F900010000        <1> .10L:	cmp		ecx, 256						;      ECX < 256;
    93 000001BD 731F                <1> 		jae		.10E							; 
    94                              <1> 												;      ECX++)
    95                              <1> 												; {
    96                              <1> 												;   // 桁位置の計算
    97 000001BF 89C8                <1> 		mov		eax, ecx						;   EAX  = ECX;
    98 000001C1 83E00F              <1> 		and		eax, 0x0F						;   EAX &= 0x0F
    99 000001C4 01F0                <1> 		add		eax, esi						;   EAX += X;
   100                              <1> 												;   
   101                              <1> 												;   // 行位置の計算
   102 000001C6 89CB                <1> 		mov		ebx, ecx						;   EBX  = ECX;
   103 000001C8 C1EB04              <1> 		shr		ebx, 4							;   EBX /= 16
   104 000001CB 01FB                <1> 		add		ebx, edi						;   EBX += Y;
   105                              <1> 
   106 000001CD 516A075350E808FFFF- <1> 		cdecl	draw_char, eax, ebx, 0x07, ecx	;   draw_char();
   106 000001D6 FF6683C410          <1>
   107                              <1> 
   108 000001DB 41                  <1> 		inc		ecx								;   // for (... ECX++)
   109 000001DC EBD9                <1> 		jmp		.10L							; 
   110                              <1> .10E:											; }
   111                              <1> 
   112                              <1> 		;---------------------------------------
   113                              <1> 		; 【レジスタの復帰】
   114                              <1> 		;---------------------------------------
   115 000001DE 5F                  <1> 		pop		edi
   116 000001DF 5E                  <1> 		pop		esi
   117 000001E0 5A                  <1> 		pop		edx
   118 000001E1 59                  <1> 		pop		ecx
   119 000001E2 5B                  <1> 		pop		ebx
   120 000001E3 58                  <1> 		pop		eax
   121                              <1> 
   122                              <1> 		;---------------------------------------
   123                              <1> 		; 【スタックフレームの破棄】
   124                              <1> 		;---------------------------------------
   125 000001E4 89EC                <1> 		mov		esp, ebp
   126 000001E6 5D                  <1> 		pop		ebp
   127                              <1> 
   128 000001E7 C3                  <1> 		ret
   129                              <1> 
    49                                  
    50                                  ;************************************************************************
    51                                  ;	パディング
    52                                  ;************************************************************************
    53 000001E8 00<rep 1E18h>           		times KERNEL_SIZE - ($ - $$) db 0x00	; パディング
    54                                  
